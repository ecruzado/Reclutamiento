//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SanPablo.Reclutador.Web.Reportes.Intranet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsExamen")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsExamen : global::System.Data.DataSet {
        
        private DtExamenDataTable tableDtExamen;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsExamen() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsExamen(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DtExamen"] != null)) {
                    base.Tables.Add(new DtExamenDataTable(ds.Tables["DtExamen"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DtExamenDataTable DtExamen {
            get {
                return this.tableDtExamen;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsExamen cln = ((dsExamen)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DtExamen"] != null)) {
                    base.Tables.Add(new DtExamenDataTable(ds.Tables["DtExamen"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDtExamen = ((DtExamenDataTable)(base.Tables["DtExamen"]));
            if ((initTable == true)) {
                if ((this.tableDtExamen != null)) {
                    this.tableDtExamen.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsExamen";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsExamen.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDtExamen = new DtExamenDataTable();
            base.Tables.Add(this.tableDtExamen);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDtExamen() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsExamen ds = new dsExamen();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DtExamenRowChangeEventHandler(object sender, DtExamenRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DtExamenDataTable : global::System.Data.TypedTableBase<DtExamenRow> {
            
            private global::System.Data.DataColumn columnIDEEXAMEN;
            
            private global::System.Data.DataColumn columnIDESEDE;
            
            private global::System.Data.DataColumn columnNOMEXAMEN;
            
            private global::System.Data.DataColumn columnDESCEXAMEN;
            
            private global::System.Data.DataColumn columnIDESUBCATEGORIA;
            
            private global::System.Data.DataColumn columnIDECATEGORIA;
            
            private global::System.Data.DataColumn columnNOMCATEGORIA;
            
            private global::System.Data.DataColumn columnDESCCATEGORIA;
            
            private global::System.Data.DataColumn columnTIPCATEGORIA;
            
            private global::System.Data.DataColumn columnINSTRUCCIONES;
            
            private global::System.Data.DataColumn columnTIPOEJEMPLO;
            
            private global::System.Data.DataColumn columnIMAGENEJEMPLO;
            
            private global::System.Data.DataColumn columnTEXTOEJEMPLO;
            
            private global::System.Data.DataColumn columnDESCSUBCATEGORIA;
            
            private global::System.Data.DataColumn columnNOMSUBCATEGORIA;
            
            private global::System.Data.DataColumn columnIDECRITERIO;
            
            private global::System.Data.DataColumn columnIDEALTERNATIVA;
            
            private global::System.Data.DataColumn columnCODMOD;
            
            private global::System.Data.DataColumn columnDESMODO;
            
            private global::System.Data.DataColumn columnTIPCRITERIO;
            
            private global::System.Data.DataColumn columnPREGUNTA;
            
            private global::System.Data.DataColumn columnIMAGENCRIT;
            
            private global::System.Data.DataColumn columnIMAGE;
            
            private global::System.Data.DataColumn columnALTERNATIVA;
            
            private global::System.Data.DataColumn columnESTACTIVO;
            
            private global::System.Data.DataColumn columnORDENSUB;
            
            private global::System.Data.DataColumn columnORDENCRIT;
            
            private global::System.Data.DataColumn columnTIEMPOCAT;
            
            private global::System.Data.DataColumn columnTIMPOEXAMEN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenDataTable() {
                this.TableName = "DtExamen";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtExamenDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DtExamenDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDEEXAMENColumn {
                get {
                    return this.columnIDEEXAMEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDESEDEColumn {
                get {
                    return this.columnIDESEDE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMEXAMENColumn {
                get {
                    return this.columnNOMEXAMEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCEXAMENColumn {
                get {
                    return this.columnDESCEXAMEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDESUBCATEGORIAColumn {
                get {
                    return this.columnIDESUBCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDECATEGORIAColumn {
                get {
                    return this.columnIDECATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMCATEGORIAColumn {
                get {
                    return this.columnNOMCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCCATEGORIAColumn {
                get {
                    return this.columnDESCCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIPCATEGORIAColumn {
                get {
                    return this.columnTIPCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSTRUCCIONESColumn {
                get {
                    return this.columnINSTRUCCIONES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIPOEJEMPLOColumn {
                get {
                    return this.columnTIPOEJEMPLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGENEJEMPLOColumn {
                get {
                    return this.columnIMAGENEJEMPLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEXTOEJEMPLOColumn {
                get {
                    return this.columnTEXTOEJEMPLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCSUBCATEGORIAColumn {
                get {
                    return this.columnDESCSUBCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMSUBCATEGORIAColumn {
                get {
                    return this.columnNOMSUBCATEGORIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDECRITERIOColumn {
                get {
                    return this.columnIDECRITERIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDEALTERNATIVAColumn {
                get {
                    return this.columnIDEALTERNATIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODMODColumn {
                get {
                    return this.columnCODMOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESMODOColumn {
                get {
                    return this.columnDESMODO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIPCRITERIOColumn {
                get {
                    return this.columnTIPCRITERIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PREGUNTAColumn {
                get {
                    return this.columnPREGUNTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGENCRITColumn {
                get {
                    return this.columnIMAGENCRIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMAGEColumn {
                get {
                    return this.columnIMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ALTERNATIVAColumn {
                get {
                    return this.columnALTERNATIVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ESTACTIVOColumn {
                get {
                    return this.columnESTACTIVO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDENSUBColumn {
                get {
                    return this.columnORDENSUB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ORDENCRITColumn {
                get {
                    return this.columnORDENCRIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIEMPOCATColumn {
                get {
                    return this.columnTIEMPOCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMPOEXAMENColumn {
                get {
                    return this.columnTIMPOEXAMEN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenRow this[int index] {
                get {
                    return ((DtExamenRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtExamenRowChangeEventHandler DtExamenRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtExamenRowChangeEventHandler DtExamenRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtExamenRowChangeEventHandler DtExamenRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DtExamenRowChangeEventHandler DtExamenRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDtExamenRow(DtExamenRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenRow AddDtExamenRow(
                        string IDEEXAMEN, 
                        string IDESEDE, 
                        string NOMEXAMEN, 
                        string DESCEXAMEN, 
                        string IDESUBCATEGORIA, 
                        string IDECATEGORIA, 
                        string NOMCATEGORIA, 
                        string DESCCATEGORIA, 
                        string TIPCATEGORIA, 
                        string INSTRUCCIONES, 
                        string TIPOEJEMPLO, 
                        byte[] IMAGENEJEMPLO, 
                        string TEXTOEJEMPLO, 
                        string DESCSUBCATEGORIA, 
                        string NOMSUBCATEGORIA, 
                        string IDECRITERIO, 
                        string IDEALTERNATIVA, 
                        string CODMOD, 
                        string DESMODO, 
                        string TIPCRITERIO, 
                        string PREGUNTA, 
                        byte[] IMAGENCRIT, 
                        byte[] IMAGE, 
                        string ALTERNATIVA, 
                        string ESTACTIVO, 
                        string ORDENSUB, 
                        string ORDENCRIT, 
                        int TIEMPOCAT, 
                        int TIMPOEXAMEN) {
                DtExamenRow rowDtExamenRow = ((DtExamenRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDEEXAMEN,
                        IDESEDE,
                        NOMEXAMEN,
                        DESCEXAMEN,
                        IDESUBCATEGORIA,
                        IDECATEGORIA,
                        NOMCATEGORIA,
                        DESCCATEGORIA,
                        TIPCATEGORIA,
                        INSTRUCCIONES,
                        TIPOEJEMPLO,
                        IMAGENEJEMPLO,
                        TEXTOEJEMPLO,
                        DESCSUBCATEGORIA,
                        NOMSUBCATEGORIA,
                        IDECRITERIO,
                        IDEALTERNATIVA,
                        CODMOD,
                        DESMODO,
                        TIPCRITERIO,
                        PREGUNTA,
                        IMAGENCRIT,
                        IMAGE,
                        ALTERNATIVA,
                        ESTACTIVO,
                        ORDENSUB,
                        ORDENCRIT,
                        TIEMPOCAT,
                        TIMPOEXAMEN};
                rowDtExamenRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDtExamenRow);
                return rowDtExamenRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DtExamenDataTable cln = ((DtExamenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DtExamenDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDEEXAMEN = base.Columns["IDEEXAMEN"];
                this.columnIDESEDE = base.Columns["IDESEDE"];
                this.columnNOMEXAMEN = base.Columns["NOMEXAMEN"];
                this.columnDESCEXAMEN = base.Columns["DESCEXAMEN"];
                this.columnIDESUBCATEGORIA = base.Columns["IDESUBCATEGORIA"];
                this.columnIDECATEGORIA = base.Columns["IDECATEGORIA"];
                this.columnNOMCATEGORIA = base.Columns["NOMCATEGORIA"];
                this.columnDESCCATEGORIA = base.Columns["DESCCATEGORIA"];
                this.columnTIPCATEGORIA = base.Columns["TIPCATEGORIA"];
                this.columnINSTRUCCIONES = base.Columns["INSTRUCCIONES"];
                this.columnTIPOEJEMPLO = base.Columns["TIPOEJEMPLO"];
                this.columnIMAGENEJEMPLO = base.Columns["IMAGENEJEMPLO"];
                this.columnTEXTOEJEMPLO = base.Columns["TEXTOEJEMPLO"];
                this.columnDESCSUBCATEGORIA = base.Columns["DESCSUBCATEGORIA"];
                this.columnNOMSUBCATEGORIA = base.Columns["NOMSUBCATEGORIA"];
                this.columnIDECRITERIO = base.Columns["IDECRITERIO"];
                this.columnIDEALTERNATIVA = base.Columns["IDEALTERNATIVA"];
                this.columnCODMOD = base.Columns["CODMOD"];
                this.columnDESMODO = base.Columns["DESMODO"];
                this.columnTIPCRITERIO = base.Columns["TIPCRITERIO"];
                this.columnPREGUNTA = base.Columns["PREGUNTA"];
                this.columnIMAGENCRIT = base.Columns["IMAGENCRIT"];
                this.columnIMAGE = base.Columns["IMAGE"];
                this.columnALTERNATIVA = base.Columns["ALTERNATIVA"];
                this.columnESTACTIVO = base.Columns["ESTACTIVO"];
                this.columnORDENSUB = base.Columns["ORDENSUB"];
                this.columnORDENCRIT = base.Columns["ORDENCRIT"];
                this.columnTIEMPOCAT = base.Columns["TIEMPOCAT"];
                this.columnTIMPOEXAMEN = base.Columns["TIMPOEXAMEN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDEEXAMEN = new global::System.Data.DataColumn("IDEEXAMEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDEEXAMEN);
                this.columnIDESEDE = new global::System.Data.DataColumn("IDESEDE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDESEDE);
                this.columnNOMEXAMEN = new global::System.Data.DataColumn("NOMEXAMEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMEXAMEN);
                this.columnDESCEXAMEN = new global::System.Data.DataColumn("DESCEXAMEN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCEXAMEN);
                this.columnIDESUBCATEGORIA = new global::System.Data.DataColumn("IDESUBCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDESUBCATEGORIA);
                this.columnIDECATEGORIA = new global::System.Data.DataColumn("IDECATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDECATEGORIA);
                this.columnNOMCATEGORIA = new global::System.Data.DataColumn("NOMCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMCATEGORIA);
                this.columnDESCCATEGORIA = new global::System.Data.DataColumn("DESCCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCCATEGORIA);
                this.columnTIPCATEGORIA = new global::System.Data.DataColumn("TIPCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPCATEGORIA);
                this.columnINSTRUCCIONES = new global::System.Data.DataColumn("INSTRUCCIONES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTRUCCIONES);
                this.columnTIPOEJEMPLO = new global::System.Data.DataColumn("TIPOEJEMPLO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPOEJEMPLO);
                this.columnIMAGENEJEMPLO = new global::System.Data.DataColumn("IMAGENEJEMPLO", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGENEJEMPLO);
                this.columnTEXTOEJEMPLO = new global::System.Data.DataColumn("TEXTOEJEMPLO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEXTOEJEMPLO);
                this.columnDESCSUBCATEGORIA = new global::System.Data.DataColumn("DESCSUBCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCSUBCATEGORIA);
                this.columnNOMSUBCATEGORIA = new global::System.Data.DataColumn("NOMSUBCATEGORIA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMSUBCATEGORIA);
                this.columnIDECRITERIO = new global::System.Data.DataColumn("IDECRITERIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDECRITERIO);
                this.columnIDEALTERNATIVA = new global::System.Data.DataColumn("IDEALTERNATIVA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDEALTERNATIVA);
                this.columnCODMOD = new global::System.Data.DataColumn("CODMOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODMOD);
                this.columnDESMODO = new global::System.Data.DataColumn("DESMODO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESMODO);
                this.columnTIPCRITERIO = new global::System.Data.DataColumn("TIPCRITERIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPCRITERIO);
                this.columnPREGUNTA = new global::System.Data.DataColumn("PREGUNTA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREGUNTA);
                this.columnIMAGENCRIT = new global::System.Data.DataColumn("IMAGENCRIT", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGENCRIT);
                this.columnIMAGE = new global::System.Data.DataColumn("IMAGE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE);
                this.columnALTERNATIVA = new global::System.Data.DataColumn("ALTERNATIVA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALTERNATIVA);
                this.columnESTACTIVO = new global::System.Data.DataColumn("ESTACTIVO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnESTACTIVO);
                this.columnORDENSUB = new global::System.Data.DataColumn("ORDENSUB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDENSUB);
                this.columnORDENCRIT = new global::System.Data.DataColumn("ORDENCRIT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDENCRIT);
                this.columnTIEMPOCAT = new global::System.Data.DataColumn("TIEMPOCAT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIEMPOCAT);
                this.columnTIMPOEXAMEN = new global::System.Data.DataColumn("TIMPOEXAMEN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMPOEXAMEN);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenRow NewDtExamenRow() {
                return ((DtExamenRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DtExamenRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DtExamenRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DtExamenRowChanged != null)) {
                    this.DtExamenRowChanged(this, new DtExamenRowChangeEvent(((DtExamenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DtExamenRowChanging != null)) {
                    this.DtExamenRowChanging(this, new DtExamenRowChangeEvent(((DtExamenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DtExamenRowDeleted != null)) {
                    this.DtExamenRowDeleted(this, new DtExamenRowChangeEvent(((DtExamenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DtExamenRowDeleting != null)) {
                    this.DtExamenRowDeleting(this, new DtExamenRowChangeEvent(((DtExamenRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDtExamenRow(DtExamenRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsExamen ds = new dsExamen();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DtExamenDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DtExamenRow : global::System.Data.DataRow {
            
            private DtExamenDataTable tableDtExamen;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DtExamenRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDtExamen = ((DtExamenDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDEEXAMEN {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDEEXAMENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDEEXAMEN\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDEEXAMENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDESEDE {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDESEDEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDESEDE\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDESEDEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMEXAMEN {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.NOMEXAMENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOMEXAMEN\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.NOMEXAMENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCEXAMEN {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.DESCEXAMENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCEXAMEN\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.DESCEXAMENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDESUBCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDESUBCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDESUBCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDESUBCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDECATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDECATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDECATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDECATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.NOMCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOMCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.NOMCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.DESCCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.DESCCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TIPCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.TIPCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIPCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TIPCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSTRUCCIONES {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.INSTRUCCIONESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INSTRUCCIONES\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.INSTRUCCIONESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TIPOEJEMPLO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.TIPOEJEMPLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIPOEJEMPLO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TIPOEJEMPLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGENEJEMPLO {
                get {
                    try {
                        return ((byte[])(this[this.tableDtExamen.IMAGENEJEMPLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGENEJEMPLO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IMAGENEJEMPLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEXTOEJEMPLO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.TEXTOEJEMPLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TEXTOEJEMPLO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TEXTOEJEMPLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCSUBCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.DESCSUBCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESCSUBCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.DESCSUBCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOMSUBCATEGORIA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.NOMSUBCATEGORIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NOMSUBCATEGORIA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.NOMSUBCATEGORIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDECRITERIO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDECRITERIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDECRITERIO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDECRITERIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDEALTERNATIVA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.IDEALTERNATIVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDEALTERNATIVA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IDEALTERNATIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODMOD {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.CODMODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODMOD\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.CODMODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESMODO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.DESMODOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DESMODO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.DESMODOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TIPCRITERIO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.TIPCRITERIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIPCRITERIO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TIPCRITERIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PREGUNTA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.PREGUNTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PREGUNTA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.PREGUNTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGENCRIT {
                get {
                    try {
                        return ((byte[])(this[this.tableDtExamen.IMAGENCRITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGENCRIT\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IMAGENCRITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] IMAGE {
                get {
                    try {
                        return ((byte[])(this[this.tableDtExamen.IMAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMAGE\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ALTERNATIVA {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.ALTERNATIVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ALTERNATIVA\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.ALTERNATIVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ESTACTIVO {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.ESTACTIVOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ESTACTIVO\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.ESTACTIVOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ORDENSUB {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.ORDENSUBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDENSUB\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.ORDENSUBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ORDENCRIT {
                get {
                    try {
                        return ((string)(this[this.tableDtExamen.ORDENCRITColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ORDENCRIT\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.ORDENCRITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TIEMPOCAT {
                get {
                    try {
                        return ((int)(this[this.tableDtExamen.TIEMPOCATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIEMPOCAT\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TIEMPOCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TIMPOEXAMEN {
                get {
                    try {
                        return ((int)(this[this.tableDtExamen.TIMPOEXAMENColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TIMPOEXAMEN\' in table \'DtExamen\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDtExamen.TIMPOEXAMENColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDEEXAMENNull() {
                return this.IsNull(this.tableDtExamen.IDEEXAMENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDEEXAMENNull() {
                this[this.tableDtExamen.IDEEXAMENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDESEDENull() {
                return this.IsNull(this.tableDtExamen.IDESEDEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDESEDENull() {
                this[this.tableDtExamen.IDESEDEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMEXAMENNull() {
                return this.IsNull(this.tableDtExamen.NOMEXAMENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMEXAMENNull() {
                this[this.tableDtExamen.NOMEXAMENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCEXAMENNull() {
                return this.IsNull(this.tableDtExamen.DESCEXAMENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCEXAMENNull() {
                this[this.tableDtExamen.DESCEXAMENColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDESUBCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.IDESUBCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDESUBCATEGORIANull() {
                this[this.tableDtExamen.IDESUBCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDECATEGORIANull() {
                return this.IsNull(this.tableDtExamen.IDECATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDECATEGORIANull() {
                this[this.tableDtExamen.IDECATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.NOMCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMCATEGORIANull() {
                this[this.tableDtExamen.NOMCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.DESCCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCCATEGORIANull() {
                this[this.tableDtExamen.DESCCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIPCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.TIPCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIPCATEGORIANull() {
                this[this.tableDtExamen.TIPCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINSTRUCCIONESNull() {
                return this.IsNull(this.tableDtExamen.INSTRUCCIONESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINSTRUCCIONESNull() {
                this[this.tableDtExamen.INSTRUCCIONESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIPOEJEMPLONull() {
                return this.IsNull(this.tableDtExamen.TIPOEJEMPLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIPOEJEMPLONull() {
                this[this.tableDtExamen.TIPOEJEMPLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGENEJEMPLONull() {
                return this.IsNull(this.tableDtExamen.IMAGENEJEMPLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGENEJEMPLONull() {
                this[this.tableDtExamen.IMAGENEJEMPLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTEXTOEJEMPLONull() {
                return this.IsNull(this.tableDtExamen.TEXTOEJEMPLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTEXTOEJEMPLONull() {
                this[this.tableDtExamen.TEXTOEJEMPLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCSUBCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.DESCSUBCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCSUBCATEGORIANull() {
                this[this.tableDtExamen.DESCSUBCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMSUBCATEGORIANull() {
                return this.IsNull(this.tableDtExamen.NOMSUBCATEGORIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMSUBCATEGORIANull() {
                this[this.tableDtExamen.NOMSUBCATEGORIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDECRITERIONull() {
                return this.IsNull(this.tableDtExamen.IDECRITERIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDECRITERIONull() {
                this[this.tableDtExamen.IDECRITERIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDEALTERNATIVANull() {
                return this.IsNull(this.tableDtExamen.IDEALTERNATIVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDEALTERNATIVANull() {
                this[this.tableDtExamen.IDEALTERNATIVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODMODNull() {
                return this.IsNull(this.tableDtExamen.CODMODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODMODNull() {
                this[this.tableDtExamen.CODMODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESMODONull() {
                return this.IsNull(this.tableDtExamen.DESMODOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESMODONull() {
                this[this.tableDtExamen.DESMODOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIPCRITERIONull() {
                return this.IsNull(this.tableDtExamen.TIPCRITERIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIPCRITERIONull() {
                this[this.tableDtExamen.TIPCRITERIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPREGUNTANull() {
                return this.IsNull(this.tableDtExamen.PREGUNTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPREGUNTANull() {
                this[this.tableDtExamen.PREGUNTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGENCRITNull() {
                return this.IsNull(this.tableDtExamen.IMAGENCRITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGENCRITNull() {
                this[this.tableDtExamen.IMAGENCRITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMAGENull() {
                return this.IsNull(this.tableDtExamen.IMAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMAGENull() {
                this[this.tableDtExamen.IMAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsALTERNATIVANull() {
                return this.IsNull(this.tableDtExamen.ALTERNATIVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetALTERNATIVANull() {
                this[this.tableDtExamen.ALTERNATIVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsESTACTIVONull() {
                return this.IsNull(this.tableDtExamen.ESTACTIVOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetESTACTIVONull() {
                this[this.tableDtExamen.ESTACTIVOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDENSUBNull() {
                return this.IsNull(this.tableDtExamen.ORDENSUBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDENSUBNull() {
                this[this.tableDtExamen.ORDENSUBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsORDENCRITNull() {
                return this.IsNull(this.tableDtExamen.ORDENCRITColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetORDENCRITNull() {
                this[this.tableDtExamen.ORDENCRITColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIEMPOCATNull() {
                return this.IsNull(this.tableDtExamen.TIEMPOCATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIEMPOCATNull() {
                this[this.tableDtExamen.TIEMPOCATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTIMPOEXAMENNull() {
                return this.IsNull(this.tableDtExamen.TIMPOEXAMENColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTIMPOEXAMENNull() {
                this[this.tableDtExamen.TIMPOEXAMENColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DtExamenRowChangeEvent : global::System.EventArgs {
            
            private DtExamenRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenRowChangeEvent(DtExamenRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DtExamenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591