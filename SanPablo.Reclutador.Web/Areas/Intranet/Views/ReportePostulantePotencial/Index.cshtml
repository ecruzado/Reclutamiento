@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ReportePostulantesPotencialesViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Reporte de Postulantes Potenciales";
}
@section Head{

     <style type="text/css">
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding: 2px;
        }
    </style>
}


@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        SanPablo.Numeros('EdadInicio');
        SanPablo.Numeros('EdadFin');

        $('#btnPDF').click(function () {
           window.open('@Url.Action("ObtenerReportePDF", "ReportePostulantePotencial")');
        });

        $('#btnLimpiar').click(function () {
            $('#grdListPostulantesPotenciales').jqGrid('clearGridData');
        });


        $('#grid1').jqGrid('clearGridData');


        $('#btnPDF').hide();
        $('#btnEXCEL').hide();


        $('#btnBuscarPostulantes').click(function () {
            var nombreCargo = $('#PostulantePotencial_IdeCargo').val();

            if (nombreCargo != 0)
            {
                if (validarFecha()) {
                    $('#grdListPostulantesPotenciales').trigger('reloadGrid');

                    var count = $("#grdListPostulantesPotenciales").getGridParam("reccount");
                    if (count == 0) {
                        $('#btnPDF').hide();
                        $('#btnEXCEL').hide();

                        MostrarMensaje('No se encotraron coincidencias, ingrese otros valores', "ALERTA");
                    }
                    else {
                        $('#btnPDF').show();
                        $('#btnEXCEL').show();
                    }
                    
                }
            }
            else
            {
                MostrarMensaje('Ingresar un Cargo a buscar', "ALERTA");
            }
           
        });

        $('#Registro_Desde,#Registro_Hasta').datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
        });

        $('#Registro_Desde,#Registro_Hasta').attr("readonly", "readonly");

        $('select#PostulantePotencial_IdeSede').change(function () {
            var ideSede = $(this).val();

            cargarCargo(ideSede);

            $("select#PostulantePotencial_IdeDependencia").empty();
            $("select#PostulantePotencial_IdeDependencia").append("<option value='0'> SELECCIONAR </option>");

            $("select#PostulantePotencial_IdeDepartamento").empty();
            $("select#PostulantePotencial_IdeDepartamento").append("<option value='0'> SELECCIONAR </option>");

            $("select#PostulantePotencial_IdeArea").empty();
            $("select#PostulantePotencial_IdeArea").append("<option value='0'> SELECCIONAR </option>");

            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDependencia", "ReportePostulantePotencial", new { area = "Intranet"})',
                data: { ideSede: ideSede },
                success: function (respuesta) {
                    $("select#PostulantePotencial_IdeDependencia").empty();
                    $("select#PostulantePotencial_IdeDependencia").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#PostulantePotencial_IdeDependencia").append("<option value='"
                        + item.IdeDependencia + "'>" + item.NombreDependencia + "</option>");
                    }
                );
                }
            });
            
        });


        $('select#PostulantePotencial_IdeDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#PostulantePotencial_IdeArea").empty();
            $("select#PostulantePotencial_IdeArea").append("<option value='0'> SELECCIONAR </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos", "ReportePostulantePotencial", new { area = "Intranet"})',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {
                    $("select#PostulantePotencial_IdeDepartamento").empty();
                    $("select#PostulantePotencial_IdeDepartamento").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#PostulantePotencial_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                );
                }
            });
        })

        $('select#PostulantePotencial_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","ReportePostulantePotencial",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#PostulantePotencial_IdeArea").empty();
                    $("select#PostulantePotencial_IdeArea").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#ReporteSol_idArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })

        
        $('select#PostulantePotencial_EdadInicio').change(function () {
            var edadInicio = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaEdadGenerar","ReportePostulantePotencial",new { area = "Intranet"})',
                data: { edadInicio: edadInicio },
                success: function (respuesta) {
                    $("select#PostulantePotencial_EdadFin").empty();
                    $.each(respuesta, function (i, item) {
                        $("select#PostulantePotencial_EdadFin").append("<option value='"
                        + item.IdEdad + "'>" + item.DesEdad + "</option>");
                    }
                );
                }
            });
        })


        jQuery("#grdListPostulantesPotenciales").jqGrid({
            
            colNames: ['IdeReclutaPersona','Fecha de registro como Post. Potenc.','Sede','Dependencia','Departamento','Área','Nombres y Apellidos','Cargo','Cel/Fijo','Email','Edad',
                       'Ptje. CV','Ptje. Selec','Área de Estudios','Rango Salarial', 'CV'],
            colModel: [
                    { name: 'IdeReclutaPersona', index: 'IdePostulante', align: 'center', hidden: true, sortable: false },
                    { name: 'FechaRegistro', index: 'FechaRegistro', align: 'center', hidden: false, sortable: true },
                    { name: 'Sede', index: 'Sede', align: 'center', hidden: false, sortable: false },
                    { name: 'Dependencia', index: 'Departamento', align: 'center', hidden: false, sortable: false },
                    { name: 'Departamento', index: 'Provincia', align: 'center', hidden: false, sortable: false },
                    { name: 'Area', index: 'Distrito', align: 'center', hidden: false, sortable: false },
                    { name: 'NombresApellidos', index: 'NombresApellidos', align: 'center', hidden: false, sortable: false },
                    { name: 'NombreCargo', index: 'NombreCargo', align: 'center', hidden: false, sortable: false },
                    { name: 'MovilFijo', index: 'MovilFijo', align: 'center', hidden: false, sortable: false, width: 100 },
                    { name: 'Email', index: 'Email', align: 'center', hidden: false, sortable: false },
                    { name: 'Edad', index: 'Edad', align: 'center', hidden: false, sortable: false, width:60 },
                    { name: 'PuntajeCV', index: 'PuntajeCV', align: 'center', hidden: false, sortable: false, width: 60 },
                    { name: 'PuntajeSeleccion', index: 'PuntajeSeleccion', align: 'center', hidden: false, sortable: false, width: 60 },
                    { name: 'AreaEstudios', index: 'AreaEstudios', align: 'center', hidden: false, sortable: false },
                    { name: 'RangoSalarial', index: 'RangoSalarial', align: 'center', hidden: false, sortable: false },
                    { name: 'IdePostulante', index: 'IdePostulante', align: 'center', hidden: false, sortable: false, formatter: ImprimirFormatter,  width: 50 }
            ],
            pager: jQuery('#grdPagerListPostulantesPotenciales'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'IdePostulante',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,
            datatype: 'local',
            postData: {
            }, loadComplete: function (data) {
                jQuery("#grdListPostulantesPotenciales").jqGrid('setGridParam', {
                    datatype: function (postdata) {
                        var migrilla = new Object();
                        migrilla.page = postdata.page;
                        migrilla.rows = postdata.rows;
                        migrilla.sidx = postdata.sidx;
                        migrilla.sord = postdata.sord;
                        migrilla._search = postdata.isSearch;
                        migrilla.filters = postdata.filters;
                        migrilla.Rules = [
                               { field: 'ideCargo', data: $("#PostulantePotencial_IdeCargo").val() },
                               { field: 'areaEstudio', data: $("#AreasEstudio").val() },
                               { field: 'rangoSalario', data: $("#RangosSalariales").val() },
                               { field: 'ideSede', data: $("#PostulantePotencial_IdeSede").val() },
                               { field: 'ideDependencia', data: $("#PostulantePotencial_IdeDependencia").val() },
                               { field: 'ideDepartamento', data: $("#PostulantePotencial_IdeDepartamento").val() },
                               { field: 'ideArea', data: $("#PostulantePotencial_IdeArea").val() },
                               { field: 'edadInicio', data: $("#PostulantePotencial_EdadInicio").val() },
                               { field: 'edadFin', data: $("#PostulantePotencial_EdadFin").val() },
                               { field: 'fecDesde', data: $("#Registro_Desde").val() },
                               { field: 'fecHasta', data: $("#Registro_Hasta").val() }

                        ];

                        if (migrilla._search == true) {
                            migrilla.searchField = postdata.searchField;
                            migrilla.searchOper = postdata.searchOper;
                            migrilla.searchString = postdata.searchString;
                        }

                        var params = { grid: migrilla };

                        $.ajax({
                            url: '@Url.Action("listaPostulantesPotenciales", "ReportePostulantePotencial")',
                            type: 'post',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(params),
                            async: false,
                            success: function (data, st) {
                                if (st == 'success') {
                                    var jq = $('#grdListPostulantesPotenciales')[0];
                                    jq.addJSONData(data);
                                }
                            },
                            error: function (e) {
                                console.log(e);
                            }
                        });
                    }
                });
            }
        });


        var grid = $("#grdListPostulantesBD"), headerRow, rowHight, resizeSpanHeight;

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() +
            'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });

        
    });


    function ImprimirFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
                var archivo = 'printer.png';
                //var strImg = '<img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV">';
                var strImg = '<a target="_blank" href=' + '@Url.Action("GetCvPDF", "Ranking")' + '/' + rowObject[15] + '><img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV"></a>';
            return strImg;
  }


    function cargarCargo(idSede)
    {
        $("select#PostulantePotencial_IdeCargo").empty();
        $("select#PostulantePotencial_IdeCargo").append("<option value='0'> SELECCIONAR </option>");

        $.ajax({
            type: "POST",
            url: '@Url.Action("listaCargos","ReportePostulantePotencial",new { area = "Intranet"})',
                data: { ideSede: idSede },
                success: function (respuesta) {
                    $("select#PostulantePotencial_IdeCargo").empty();
                    $("select#PostulantePotencial_IdeCargo").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#PostulantePotencial_IdeCargo").append("<option value='"
                        + item.IdeCargo + "'>" + item.NombreCargo + "</option>");
                    }
                    );
                },
                error: function (e) {
                    console.log(e);
                }
         });
    }

    function validarFecha() {

        var fechaInicial = $('#Registro_Desde').val();
        var fechaFinal = $('#Registro_Hasta').val();

        if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {

            MostrarMensaje('Las fechas son obligatorias', "ALERTA");
            return false;
        }

        if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
            MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "ALERTA");
            return false;
        }

        dif = Funciones.diasEntreFechas(fechaInicial, fechaFinal);
        if (dif >= 180) {
            MostrarMensaje('La diferencia entre fechas no puede ser mayor a 6 meses', "ALERTA");
            return false;
        }

        return true;

    }

    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }

</script>
    }
@using (Html.BeginForm("Index", "ReportePostulantesPotencial", FormMethod.Post))
{
   <div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Reporte de Postulantes Potenciales</h5>
            </div>
           
               <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    
                    <td class="span5" style="width:420px" >
                        <div class="">
                            <label class="control-label" for="selectError" style="width:145px;text-align:left">Cargo <span class="text-error">*</span></label>
                            <div class="controles">
                               @Html.DropDownListFor(model => model.PostulantePotencial.IdeCargo, new SelectList(Model.Cargos, "IdeCargo", "NombreCargo", Model.PostulantePotencial.IdeCargo))
                            </div>
                        </div>
                    </td>
                    <td class="span5" style="width:420px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Área de Estudios</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.AreasEstudio, new SelectList(Model.AreasEstudio, "Valor", "Descripcion", Model.AreasEstudio))
                            </div>
                        </div>
                    </td>
                </tr>

               <tr class="formulario-fila">
                    
                </tr>

                   <tr class="formulario-fila">
                    <td class="span5" style="width:420px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Sede</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.PostulantePotencial.IdeSede, new SelectList(Model.Sedes, "CodigoSede", "DescripcionSede", Model.PostulantePotencial.IdeSede))
                            </div>
                        </div>
                    </td>

                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Rango Salarial</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.RangosSalariales, new SelectList(Model.RangosSalariales, "Valor", "Descripcion", Model.RangosSalariales))
                            </div>
                        </div>
                    </td> 

                </tr>

                 <tr class="formulario-fila">
                  @* <td class="" style ="width:140px">
                        <div class="" style="width:90px">
                            <label class="control-label" for="inputSuccess" >Rango Edad </label>
                            <div class ="controles" >
                             @* @Html.DropDownListFor(model => model.PostulantePotencial.EdadInicio, new SelectList(Model.ListaEdadInicio, "IdEdad", "DesEdad", Model.PostulantePotencial.EdadInicio), new { @style = "width: 90px; display:inline-block" })*@
                                @*@Html.TextBoxFor(model => model.PostulantePotencial.EdadInicio, new {@class = "input-xmini",maxlength="2" })*@  
                       @*     </div>
                        </div>
                    </td>  
                      <td class="" style="width:110px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:90px">  a  </label>
                            <div class =" controles" >
                                 @* @Html.DropDownListFor(model => model.PostulantePotencial.EdadFin, new SelectList(Model.ListaEdadFin, "IdEdad", "DesEdad", Model.PostulantePotencial.EdadFin), new { @style = "width: 90px; display:inline-block" })*@
                                @*@Html.TextBoxFor(model => model.PostulantePotencial.EdadFin, new { @class = "input-xmini", style="display:inline-block",maxlength="2"})*@
                          @*  </div>
                        </div>
                    </td>*@
                    @* <td style="width:100px">
                         &nbsp;
                     </td> *@

                      <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Fecha registro CV <span class="text-error">*</span></label>
                            <div class="controles" style="width: 290px">
                                <input type="text" class="input-small"  id="Registro_Desde" name="Registro.Desde" placeholder=" Desde" >

                                 <input type="text" class="input-small"  id="Registro_Hasta" name="Registro.Hasta" placeholder=" Hasta">
                            </div>


                           

                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Rango Edad </label>
                            <div class="controles" style="width: 300px" >
                                @Html.DropDownListFor(model => model.PostulantePotencial.EdadInicio, new SelectList(Model.ListaEdadInicio, "IdEdad", "DesEdad", Model.PostulantePotencial.EdadInicio), new { @style = "width: 90px; display:inline-block" })
                                @*@Html.TextBoxFor(model => model.PostulantePotencial.EdadInicio, new {@class = "input-xmini",maxlength="2" })*@
                                &nbsp;a&nbsp;
                                 @Html.DropDownListFor(model => model.PostulantePotencial.EdadFin, new SelectList(Model.ListaEdadFin, "IdEdad", "DesEdad", Model.PostulantePotencial.EdadFin), new { @style = "width: 90px; display:inline-block" })
                                 @*@Html.TextBoxFor(model => model.PostulantePotencial.EdadFin, new { @class = "input-xmini", style="display:inline-block",maxlength="2"})  *@
                            </div>
                            
                        </div>
                    </td> 

                     

                </tr> 


                 @*  <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:300px;text-align:left">Fecha de registro como postulante potencial <span class="text-error">*</span></label>
                            <div class="controles">
                                
                            </div>
                        </div>
                    </td>
                    </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="" >
                            <label class="control-label" for="inputSuccess" >Desde </label>
                            <div class="controles" style="width: 300px">
                                <input type="text" class="input-small"  id="Registro_Desde" name="Registro.Desde" placeholder=" Desde" >

                                <span> Hasta </span>
                                <input type="text" class="input-small"  id="Registro_Hasta" name="Registro.Hasta" placeholder=" Hasta">
                            </div>
                        </div>
                    </td>
                </tr>*@
                <tr class="formulario-accion offset9">
                    <td>
                    <a id="btnBuscarPostulantes"  class="btn btn-info"><i class="icon-search icon-white"></i> Buscar</a>
                    <button id ="btnLimpiar" type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                    </td>
                </tr>

                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>

            </table>
           

            @* <div class="" >
                <h5>Resultado</h5>
             
             </div>*@
            <div class="grilla-opciones">
                <div class="opciones">
                    @*@if(Visualicion.SI.Equals(Model.btnVerReporte))
                    {
                        *@
                        <a class="btn btn-info" id="btnPDF"><i class="icon-eye-open icon-white"></i> PDF</a>
                        <a class="btn btn-info" id="btnEXCEL" href="@Url.Action("ObtenerReporteExcel", "ReportePostulantePotencial")"><i class="icon-tasks  icon-white"></i> EXCEL</a>
                    @*}*@
                </div>
                <div style="clear:both"></div>
            </div>

            <div class="tabla-datos">
                <table id="grdListPostulantesPotenciales">
                </table>
                <div id="grdPagerListPostulantesPotenciales">
                </div>
            </div>
            <div class="form-actions">
             
            </div>

        </div>

    </div>
</div>
    
}

<div id="divMensaje">
	<span id="spnMensaje"></span>
</div>