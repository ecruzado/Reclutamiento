@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ReporteViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Reporte Seleccion";
}
@section Head{
    <style type="text/css">
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding: 2px;
        }
    </style>
}


@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ReporteSol_FechaInicio,#ReporteSol_FechaFin').datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
        });


        $('#btnPDF').click(function () {
            window.open('@Url.Action("GetReportePDF", "ReporteSeleccion")');
        });


        $('#btnLimpiar').click(function () {
            $('#grdListContratados').jqGrid('clearGridData');
        });


        $('#ReporteSol_FechaInicio,#ReporteSol_FechaFin').attr("readonly", "readonly");

        $('#btnPDF').hide();
        $('#btnExcel').hide();

        $('#btnBuscar').click(function () {

            if (valida()) {
                $("#indBusqueda").val("S");

                $('#grdListContratados').trigger('reloadGrid');

               
                var count = $("#grdListContratados").getGridParam("reccount");
                if (count == 0) {
                    $('#btnPDF').hide();
                    $('#btnExcel').hide();

                    MostrarMensaje('No se encontraron registros', "ALERTA");
                }

                $('#btnPDF').show();
                $('#btnExcel').show();

                $("#indBusqueda").val("N");
               
            }

        });


        $('select#ReporteSol_idSede').change(function () {
            var ideSede = $(this).val();
            $("select#ReporteSol_idDependencia").empty();
            $("select#ReporteSol_idDependencia").append("<option value='0'> Seleccionar </option>");

            $("select#ReporteSol_idDepartamento").empty();
            $("select#ReporteSol_idDepartamento").append("<option value='0'> Seleccionar </option>");

            $("select#ReporteSol_idArea").empty();
            $("select#ReporteSol_idArea").append("<option value='0'> Seleccionar </option>");

            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDependencia", "ReporteSeleccion", new { area = "Intranet"})',
                data: { ideSede: ideSede },
            success: function (respuesta) {
                $("select#ReporteSol_idDependencia").empty();
                $("select#ReporteSol_idDependencia").append("<option value='0'> Seleccionar </option>");
                $.each(respuesta, function (i, item) {
                    $("select#ReporteSol_idDependencia").append("<option value='"
                    + item.IdeDependencia + "'>" + item.NombreDependencia + "</option>");
                }
            );
            }
            });

            $("select#ReporteSol_idAnalistaResp").empty();
            $("select#ReporteSol_idAnalistaResp").append("<option value='0'> Seleccionar </option>");

            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAnalistaResp", "ReporteSeleccion", new { area = "Intranet"})',
                data: { ideSede: ideSede },
                success: function (respuesta) {
                    $("select#ReporteSol_idAnalistaResp").empty();
                    $("select#ReporteSol_idAnalistaResp").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#ReporteSol_idAnalistaResp").append("<option value='"
                        + item.IdUsuario + "'>" + item.NombreUsuario + "</option>");
                    }
                );
                }
            });

        })


        $('select#ReporteSol_idDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#ReporteSol_idArea").empty();
            $("select#ReporteSol_idArea").append("<option value='0'> Seleccionar </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos", "ReporteSeleccion", new { area = "Intranet"})',
            data: { ideDependencia: ideDependencia },
            success: function (respuesta) {
                $("select#ReporteSol_idDepartamento").empty();
                $("select#ReporteSol_idDepartamento").append("<option value='0'> Seleccionar </option>");
                $.each(respuesta, function (i, item) {
                    $("select#ReporteSol_idDepartamento").append("<option value='"
                    + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                }
            );
            }
        });
        })

        $('select#ReporteSol_idDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","ReporteSeleccion",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#ReporteSol_idArea").empty();
                    $("select#ReporteSol_idArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#ReporteSol_idArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
          })

        jQuery("#grdListContratados").jqGrid({
            colNames: [
                  '',
                  'Estado del proceso',
                  'Fecha de requerimiento',
                  'Sede',
                  'Dependencia',
                  'Departamento',
                  'Área',
                  'Puesto',
                  'Jefe',
                  'Tipo de requerimiento ',
                  'Reemplaza A',
                  'F. Cese O Reemplazo',
                  'Motivo De Reemplazo',
                  'Analista Responsable',
                  'P. Ingresa (Apellidos y nombre)',
                  'Fecha De Contratación',
                  'Tiempo Espera (Días)',
                  'DNI',
                  'Cel. / Fijo',
                  'Observaciones Del Psicólogo',
                  'Observaciones De La Entrevista',
                  'Fec. Suceso',
                  'Motivo De Finalización Del Req.'

            ],
            colModel: [
                    { name: 'IdeSolReqpersonal', index: 'IdeSolReqpersonal', align: 'center', hidden: true, sortable: false },
                    { name: 'EstadoProceso', index: 'EstadoProceso', align: 'center', hidden: false, sortable: false },
                    { name: 'FechaRequerimiento', index: 'FechaRequerimiento', align: 'center', hidden: false, sortable: false },
                    { name: 'DesSede', index: 'DesSede', align: 'center', hidden: false, sortable: false },
                    { name: 'DesDependencia', index: 'DesDependencia', align: 'center', hidden: false, sortable: false },
                    { name: 'DesDepartamento', index: 'DesDepartamento', align: 'center', hidden: false, sortable: false },
                    { name: 'DesArea', index: 'DesArea', align: 'center', hidden: false, sortable: false },
                    { name: 'Cargo', index: 'Cargo', align: 'center', hidden: false, sortable: false },
                    { name: 'Jefe', index: 'Jefe', align: 'center', hidden: false, sortable: false },
                    { name: 'Tipsol', index: 'Tipsol', align: 'center', hidden: false, sortable: false },
                    { name: 'Reemplaza', index: 'Reemplaza', align: 'center', hidden: false, sortable: false },
                    { name: 'FecReemplazo', index: 'FecReemplazo', align: 'center', hidden: false, sortable: false },
                    { name: 'MotivoReemplazo', index: 'MotivoReemplazo', align: 'center', hidden: false, sortable: false },
                    { name: 'AnalistaResp', index: 'AnalistaResp', align: 'center', hidden: false, sortable: false },
                    { name: 'PersonaIngresa', index: 'PersonaIngresa', align: 'center', hidden: false, sortable: false },
                    { name: 'FechaContratacion', index: 'FechaContratacion', align: 'center', hidden: false, sortable: false },
                    { name: 'Dias', index: 'Dias', align: 'center', hidden: false, sortable: false },
                    { name: 'Numdocumento', index: 'Numdocumento', align: 'center', hidden: false, sortable: false },
                    { name: 'Fono', index: 'Fono', align: 'center', hidden: false, sortable: false },
                    { name: 'ObsPsicologo', index: 'ObsPsicologo', align: 'center', hidden: false, sortable: false },
                    { name: 'ObsEntrevista', index: 'ObsEntrevista', align: 'center', hidden: false, sortable: false },
                    { name: 'FecSuceso', index: 'FecSuceso', align: 'center', hidden: true, sortable: false },
                    { name: 'MotivoCirreSol', index: 'MotivoCirreSol', align: 'center', hidden: false, sortable: false }

            ],
            pager: jQuery('#grdPagerListContratados'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'IdeSolReqpersonal',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,
            datatype:'local',
            postData: {
            }, loadComplete: function (data) {

                jQuery("#grdListContratados").jqGrid('setGridParam', {
                    datatype: function (postdata) {
                        var migrilla = new Object();
                        migrilla.page = postdata.page;
                        migrilla.rows = postdata.rows;
                        migrilla.sidx = postdata.sidx;
                        migrilla.sord = postdata.sord;
                        migrilla._search = postdata.isSearch;
                        migrilla.filters = postdata.filters;
                        migrilla.Rules = [
                               { field: 'cDesde', data: $("#ReporteSol_FechaInicio").val() },
                               { field: 'cHasta', data: $("#ReporteSol_FechaFin").val() },
                               { field: 'cTipSol', data: $("#ReporteSol_idTipSol").val() },
                               { field: 'cEstadoReq', data: $("#ReporteSol_idEstadoReq").val() },
                               { field: 'nIdResp', data: $("#ReporteSol_idAnalistaResp").val() },
                               { field: 'nIdDependencia', data: $("#ReporteSol_idDependencia").val() },
                               { field: 'nIdDepartamento', data: $("#ReporteSol_idDepartamento").val() },
                               { field: 'nIdArea', data: $("#ReporteSol_idArea").val() },
                               { field: 'cMotivoreemp', data: $("#ReporteSol_idMotivoReemplazo").val() },
                               { field: 'nIdSede', data: $("#ReporteSol_idSede").val() },
                               { field: 'cIndBusqueda', data: $("#indBusqueda").val() }

                        ];

                        if (migrilla._search == true) {
                            migrilla.searchField = postdata.searchField;
                            migrilla.searchOper = postdata.searchOper;
                            migrilla.searchString = postdata.searchString;
                        }

                        var params = { grid: migrilla };

                        $.ajax({
                            url: '@Url.Action("getListContratados", "ReporteSeleccion")',
                            type: 'post',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(params),
                            async: false,
                            success: function (data, st) {
                                if (st == 'success') {
                                    var jq = $('#grdListContratados')[0];
                                    jq.addJSONData(data);
                                }
                            },
                            error: function (e) {
                                console.log(e);
                            }
                        });
                    }
                });


            }
        });


      

        var grid = $("#grdListContratados"), headerRow, rowHight, resizeSpanHeight;

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() +
            'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });
                
    });


    function valida() {

        var fechaInicial = $('#ReporteSol_FechaInicio').val();
        var fechaFinal = $('#ReporteSol_FechaFin').val();

        if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {
           
            MostrarMensaje('Las fechas son obligatorias', "ALERTA");
            return false;
        }

        if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
            MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "ALERTA");
            return false;
        }

        dif = Funciones.diasEntreFechas(fechaInicial, fechaFinal);
        if (dif >= 180) {
            MostrarMensaje('La diferencia entre fechas no puede ser mayor a 180 días', "ALERTA");
            return false;
        }

        return true;

    }

    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }


</script>
    }
@using (Html.BeginForm("Index", "ReporteSeleccion", FormMethod.Post))
{
   <div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Reporte de Selección</h5>
            </div>
            @Html.TextBoxFor(model => model.indBusqueda, new { style = "display: none;" })
               <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="selectError">Fecha<span class="text-error">*</span></label>
                            <div class="controles">
                               
                              
                                <input type="text" class="input-small"  id="ReporteSol_FechaInicio" name="ReporteSol.FechaInicio" placeholder=" Inicial" >
                                <input type="text" class="input-small"  id="ReporteSol_FechaFin" name="ReporteSol.FechaFin" placeholder=" Final">

                      

                            </div>
                        </div>
                    </td>
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Dependecia</label>
                            <div class="controles">
                                  @Html.DropDownListFor(model => model.ReporteSol.idDependencia, new SelectList(Model.listaDependencia, "IdeDependencia", "NombreDependencia", Model.ReporteSol.idDependencia))    
                             </div>

                        </div>
                    </td>

                </tr>

               <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Sede</label>
                            <div class="controles">
                            
                                
                                @if (Visualicion.SI.Equals(Model.CampoSede))
                                {
                                   @Html.DropDownListFor(model => model.ReporteSol.idSede, new SelectList(Model.ListaSede, "CodigoSede", "DescripcionSede", Model.ReporteSol.idSede)) 
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ReporteSol.idSede, new SelectList(Model.ListaSede, "CodigoSede", "DescripcionSede", Model.ReporteSol.idSede), new { disabled="disabled"}) 
                                }
                                   
                            </div>
                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Departamento</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.ReporteSol.idDepartamento, new SelectList(Model.ListaDepartamento, "IdeDepartamento", "NombreDepartamento", Model.ReporteSol.idDepartamento))
                            </div>
                        </div>
                    </td>  

                </tr>

                   
               <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Tipo de solicitud</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.ReporteSol.idTipSol, new SelectList(Model.ListaTipoSol, "Valor", "Descripcion", Model.ReporteSol.idTipSol))
                            </div>
                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Área</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.ReporteSol.idArea, new SelectList(Model.ListaArea, "IdeArea", "NombreArea", Model.ReporteSol.idArea))
                            </div>
                        </div>
                    </td>  

                </tr>

                    <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Estado del req.</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.ReporteSol.idEstadoReq, new SelectList(Model.ListaEstadoReq, "Valor", "Descripcion", Model.ReporteSol.idEstadoReq))
                            </div>
                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Motivo reemplazo</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.ReporteSol.idMotivoReemplazo, new SelectList(Model.ListaMotivo, "Valor", "Descripcion", Model.ReporteSol.idMotivoReemplazo))
                            </div>
                        </div>
                    </td>  

                </tr>


                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Analista Responsable</label>
                            <div class="controles">
                                
                                @if (Visualicion.SI.Equals(Model.CampoAnalistaSeleccion))
                                {
                                  @Html.DropDownListFor(model => model.ReporteSol.idAnalistaResp, new SelectList(Model.ListaAnalistaResp, "IdUsuario", "NombreUsuario", Model.ReporteSol.idAnalistaResp))    
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ReporteSol.idAnalistaResp, new SelectList(Model.ListaAnalistaResp, "IdUsuario", "NombreUsuario", Model.ReporteSol.idAnalistaResp), new { disabled="disabled"})    
                                }

                                
                            </div>
                        </div>
                    </td>
                </tr>

                <tr class="formulario-accion offset9">
                    <td>
                    <a id="btnBuscar"  class="btn btn-info"><i class="icon-search icon-white"></i> Buscar</a>
                    <button id ="btnLimpiar" type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                    </td>
                </tr>

                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>

              </table>

            <div class="grilla-opciones">
                <div class="opciones">
                   
                    <a  id="btnPDF" class="btn btn-info" ><i class="icon-eye-open icon-white"></i>PDF</a>   
                    <a  id="btnExcel" class="btn btn-info" href="@Url.Action("ListaReporteSeleccion", "ReporteSeleccion")"><i class="icon-tasks  icon-white"></i>EXCEL</a>  
                                                   
                </div>
                <div style="clear:both"></div>
            </div>  


            <div class="tabla-datos">
                <table id="grdListContratados">
                </table>
                <div id="grdPagerListContratados">
                </div>
            </div>
            <div class="form-actions">
             
            </div>

        </div>

    </div>
</div>
    
}

<div id="divMensaje">
	<span id="spnMensaje"></span>
</div>