@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ReporteViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Reporte Seleccion";
}
@section Head{
    <style type="text/css">
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding: 2px;
        }
    </style>
}


@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#ReporteSol_FechaInicio,#ReporteSol_FechaFin').datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
        });


        $('#btnPDF').click(function () {
            window.open('@Url.Action("GetReportePDF", "ReporteResumeRQ")');
        });


        $('#ReporteSol_FechaInicio,#ReporteSol_FechaFin').attr("readonly", "readonly");

        $('#btnBuscar').click(function () {

            if (valida()) {

                $('#grdListResumen').trigger('reloadGrid');

                var count = $("#grdListResumen").getGridParam("reccount");
                if (count==0) {
                    MostrarMensaje('No se encontraron registros', "Mensaje");
                }

            }

        });


        $('select#ReporteSol_idSede').change(function () {
            var ideSede = $(this).val();
           
            $("select#ReporteSol_idAnalistaResp").empty();
            $("select#ReporteSol_idAnalistaResp").append("<option value='0'> Seleccionar </option>");

            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAnalistaResp", "ReporteResumeRQ", new { area = "Intranet"})',
                data: { ideSede: ideSede },
                success: function (respuesta) {
                    $("select#ReporteSol_idAnalistaResp").empty();
                    $("select#ReporteSol_idAnalistaResp").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#ReporteSol_idAnalistaResp").append("<option value='"
                        + item.IdUsuario + "'>" + item.NombreUsuario + "</option>");
                    }
                );
                }
            });

        })


        jQuery("#grdListResumen").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                       { field: 'cDesde', data: $("#ReporteSol_FechaInicio").val() },
                       { field: 'cHasta', data: $("#ReporteSol_FechaFin").val() },
                       { field: 'cSede', data: $("#ReporteSol_idSede").val() },
                       { field: 'cAnalista', data: $("#ReporteSol_idAnalistaResp").val() }
                       
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListResumen", "ReporteResumeRQ")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListResumen')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: [
                '',
                'PROFESIONAL',
                'SALDO A LA FECHA',
                'REQUERIMIENTOS DE NUEVO CARGO',
                'REQUERIMIENTOS DE REEMPLAZO',
                'REQUERIMIENTOS DE AMPLIACIÓN',
                'REQUERIMIENTOS FINALIZADOS A NIVEL PARCIAL O TOTAL',
                'PUESTOS CUBIERTOS',
                'NUEVO SALDO A LA FECHA'
            ],
            colModel: [

                    { name: 'idAnalistaResp', index: 'idAnalistaResp', align: 'center', hidden: true, sortable: false },
                    { name: 'AnalistaResp', index: 'AnalistaResp', align: 'center', hidden: false, sortable: false },
                    { name: 'Saldo', index: 'Saldo', align: 'center', hidden: false, sortable: false },
                    { name: 'CantVacPubNuevo', index: 'CantVacPubNuevo', align: 'center', hidden: false, sortable: false },
                    { name: 'CantVacPubReemplazo', index: 'CantVacPubReemplazo', align: 'center', hidden: false, sortable: false },
                    { name: 'CantVacPubAmpliacion', index: 'CantVacPubAmpliacion', align: 'center', hidden: false, sortable: false },
                    { name: 'CantVacFinalNo', index: 'CantVacFinalNo', align: 'center', hidden: false, sortable: false },
                    { name: 'CantVacFinalSi', index: 'CantVacFinalSi', align: 'center', hidden: false, sortable: false },
                    { name: 'Total', index: 'Total', align: 'center', hidden: false, sortable: false }
                    
            ],
            pager: jQuery('#grdPagerListResumen'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'idAnalistaResp',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,

            postData: {
            }, loadComplete: function (data) {

            }
        });


        var grid = $("#grdListResumen"), headerRow, rowHight, resizeSpanHeight;

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() +
            'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });
                
    });


    function valida() {

        var fechaInicial = $('#ReporteSol_FechaInicio').val();
        var fechaFinal = $('#ReporteSol_FechaFin').val();
        var sede = $('#ReporteSol_idSede').val();

        if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {
           
            MostrarMensaje('Las fechas son obligatorias', "Mensaje");
            return false;
        }

        if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
            MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
            return false;
        }

        dif = Funciones.diasEntreFechas(fechaInicial, fechaFinal);
        if (dif >= 30) {
            MostrarMensaje('La diferencia entre fechas no puede ser mayor a 30 días', "Mensaje");
            return false;
        }


        if (sede=="0") {
            MostrarMensaje('Seleccione una sede', "Mensaje");
            return false;
        }

        return true;

    }

    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }


</script>
    }
@using (Html.BeginForm("Index", "ReporteResumeRQ", FormMethod.Post))
{
   <div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Resume de requerimientos</h5>
            </div>
           
               <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="selectError">Periodo<span class="text-error">*</span></label>
                            <div class="controles">
                                <input type="text" class="input-small"  id="ReporteSol_FechaInicio" name="ReporteSol.FechaInicio" placeholder=" Inicial" >
                                <input type="text" class="input-small"  id="ReporteSol_FechaFin" name="ReporteSol.FechaFin" placeholder=" Final">
                            </div>
                        </div>
                    </td>
                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Sede<span class="text-error">*</span></label>
                            <div class="controles">
                                
                                @if (Visualicion.SI.Equals(Model.CampoSede))
                                {
                                  @Html.DropDownListFor(model => model.ReporteSol.idSede, new SelectList(Model.ListaSede, "CodigoSede", "DescripcionSede", Model.ReporteSol.idSede))   
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ReporteSol.idSede, new SelectList(Model.ListaSede, "CodigoSede", "DescripcionSede", Model.ReporteSol.idSede), new {disabled = "disabled" })
                                }
                                
                            </div>
                        </div>
                    </td>

                </tr>

                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Analista Responsable</label>
                            <div class="controles">
                                
                                @if (Visualicion.SI.Equals(Model.CampoAnalistaSeleccion))
                                {
                                  @Html.DropDownListFor(model => model.ReporteSol.idAnalistaResp, new SelectList(Model.ListaAnalistaResp, "IdUsuario", "NombreUsuario", Model.ReporteSol.idAnalistaResp))    
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ReporteSol.idAnalistaResp, new SelectList(Model.ListaAnalistaResp, "IdUsuario", "NombreUsuario", Model.ReporteSol.idAnalistaResp), new { disabled="disabled"})
                                }
                                
                            </div>
                        </div>
                    </td>
                </tr>

                <tr class="formulario-accion offset9">
                    <td>
                    <a id="btnBuscar"  class="btn btn-info"><i class="icon-search icon-white"></i> Buscar</a>
                    <button id ="btnLimpiar" type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                    </td>
                </tr>

                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>

              </table>

            <div class="grilla-opciones">
                <div class="opciones">
                   
                    <a  id="btnPDF" class="btn" >PDF</a>   
                    <a  id="btnExcel" class="btn" href="@Url.Action("ExcelReporteResumeRQ", "ReporteResumeRQ")">EXCEL</a>  
                                                   
                </div>
                <div style="clear:both"></div>
            </div>  


            <div class="tabla-datos">
                <table id="grdListResumen">
                </table>
                <div id="grdPagerListResumen">
                </div>
            </div>
            <div class="form-actions">
             
            </div>

        </div>

    </div>
</div>
    
}

<div id="divMensaje">
	<span id="spnMensaje"></span>
</div>