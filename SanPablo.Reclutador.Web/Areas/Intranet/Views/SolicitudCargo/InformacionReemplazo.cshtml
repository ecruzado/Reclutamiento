@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudRempCargoViewModel
@using SanPablo.Reclutador.Entity
@using System.Collections.Generic

@{
    ViewBag.Title = "Solicitud Personal";
    
    
    
}
@section Head{
}

@section Scripts{
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {



        $('select#SolReqPersonal_IdeDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#SolReqPersonal_IdeArea").empty();
            $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos", "SolicitudCargo", new { area = "Intranet"})',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeDepartamento").empty();
                    $("select#SolReqPersonal_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                );
                }
            });
        })

        $('select#SolReqPersonal_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","SolicitudCargo",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeArea").empty();
                    $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })



        $('select#SolReqPersonal_IdeArea').change(function () {
            var idArea = $(this).val();
            var idDependencia = $("#SolReqPersonal_IdeDependencia").val();
            var idDepartamento = $("#SolReqPersonal_IdeDepartamento").val();
               
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaCargoxSede","SolicitudCargo",new { area = "Intranet"})',
                data: {
                    idArea: idArea,
                    idDependencia: idDependencia,
                    idDepartamento: idDepartamento
                },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeCargo").empty();
                    $("select#SolReqPersonal_IdeCargo").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeCargo").append("<option value='"
                        + item.IdeCargo + "'>" + item.NombreCargo + "</option>");
                    }
                );
                }
            });
        })


        jQuery("#grdListCompetencias").jqGrid({
            url: '@Url.Action("ListarCompetencias", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Descripci&oacuten', 'Puntaje'],
            colModel: [
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', editable: false, sortable: false, width: 50 }
            ],
            pager: jQuery('#grdPagerCompetencia'),
            sortname: 'DescripcionCompetencia',
            sortorder: 'desc',
            viewrecords: false,
            //cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            },
            loadError: function (xhr, st, err) {

            }
        });


        jQuery("#grdListOfrecemos").jqGrid({
            url: '@Url.Action("ListarOfrecemos", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Codigo', 'Descripci&oacuten'],
            colModel: [
                    { name: 'Codigo', index: 'Codigo', align: 'center', editable: false, sortable: false, hidden: true },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
            ],
            pager: jQuery('#grdPagerOfrecemos'),
            sortname: 'DescripcionOfrecimiento',
            sortorder: 'desc',
            viewrecords: false,
            //cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListHorario").jqGrid({
            url: '@Url.Action("ListaHorario", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Descripci&oacuten', 'Puntaje'],
            colModel: [
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, editable: false },

            ],
            pager: jQuery('#grdPagerHorario'),
            sortname: 'IdeHorarioCargo',
            sortorder: 'desc',
            viewrecords: true,
            //cellEdit: true,
            height: 200,
            width: 890,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListUbigeo").jqGrid({
            url: '@Url.Action("ListaUbigeo", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Departamento', 'Provincia', 'Distrito', 'Puntaje'],
            colModel: [
                    { name: 'Departamento', index: 'Departamento', align: 'left', editable: false, sortable: false },
                    { name: 'Provincia', index: 'Provincia', align: 'left', editable: false, sortable: false },
                    { name: 'Distrito', index: 'Distrito', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
            ],
            pager: jQuery('#grdPagerUbigeo'),
            sortname: 'IdeUbigeoCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 890,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListNivelAcademico").jqGrid({
            url: '@Url.Action("ListaNivelAcademico", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo de Educación', 'Área de Estudios', 'Nivel Alcanzado', 'Ciclo/Semestre', 'Puntaje'],
            colModel: [
                    { name: 'TipoEducacion', index: 'TipoEducacion', align: 'left', editable: false, sortable: false },
                    { name: 'AreaEstudio', index: 'AreaEstudio', align: 'left', editable: false, sortable: false },
                    { name: 'NivelAlcanzado', index: 'NivelAlcanzado', align: 'left', editable: false, sortable: false },
                    { name: 'CicloSemestre', index: 'CicloSemestre', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerNivelAcademico'),
            sortname: 'IdeNivelAcademicoCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListCentroEstudio").jqGrid({
            url: '@Url.Action("ListaCentroEstudio", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo de Institución', 'Institución', 'Puntaje'],
            colModel: [
                    { name: 'Tipo', Tipo: 'Codigo', align: 'center', editable: false, sortable: false },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerCentroEstudio'),
            sortname: 'IdeCentroEstudioCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListOfimatica").jqGrid({
            url: '@Url.Action("ListaOfimatica", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo', 'Descripci&oacuten', 'Nivel', 'Puntaje'],
            colModel: [
                    { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerOfimatica'),
            sortname: 'IdeConocimientoGeneralCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListIdioma").jqGrid({
            url: '@Url.Action("ListaIdioma", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Descripci&oacuten', 'Tipo Conoc.', 'Nivel', 'Puntaje'],
            colModel: [
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'TipoConocimiento', index: 'TipoConocimiento', align: 'left', editable: false, sortable: false },
                    { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerIdioma'),
            sortname: 'IdeConocimientoGeneralCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListOtrosConocimientos").jqGrid({
            url: '@Url.Action("ListaOtrosConocimientos", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo', 'Descripci&oacuten', 'Nivel', 'Puntaje'],
            colModel: [
                    { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerOtrosConocimientos'),
            sortname: 'IdeConocimientoGeneralCargo',
            sortorder: 'desc',
            viewrecords: false,
            //  cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListExperiencia").jqGrid({
            url: '@Url.Action("ListaExperiencia", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Cargo', 'Años', 'Meses', 'Puntaje'],
            colModel: [
                    { name: 'Cargo', index: 'Cargo', align: 'left', editable: false, sortable: false },
                    { name: 'Anho', index: 'Anho', align: 'left', editable: false, sortable: false, width: 50 },
                    { name: 'Meses', index: 'Meses', align: 'left', editable: false, sortable: false, width: 50 },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
            ],
            pager: jQuery('#grdPagerExperiencia'),
            sortname: 'IdeExperienciaCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListDiscapacidad").jqGrid({
            url: '@Url.Action("ListaDiscapacidad", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo', 'Puntaje'],
            colModel: [
                    { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
            ],
            pager: jQuery('#grdPagerDiscapacidad'),
            sortname: 'IdeDiscapacidadCargo',
            sortorder: 'desc',
            viewrecords: false,
            // cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListEvaluacion").jqGrid({
            url: '@Url.Action("ListaEvaluaciones", "SolicitudCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Descripci&oacuten', 'Tipo', 'Nota Mínima', 'Responsable', 'Puntaje'],
            colModel: [
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                    { name: 'NotaMinima', index: 'NotaMinima', align: 'left', editable: false, sortable: false, width: 60 },
                    { name: 'Responsable', index: 'Responsable', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerEvaluacion'),
            sortname: 'TipoExamen',
            sortorder: 'desc',
            viewrecords: true,
            // cellEdit: true,
            /*caption: 'Horario de Trabajo',*/
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });








        jQuery("#grdListReemplazosReq").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                    { field: 'codigo', data: $("#SolReqPersonal_CodSolReqPersonal").val() }


                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListReemplazoReq", "SolicitudCargo", new { area = "Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListReemplazosReq')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
         colNames: ['', '', '', 'Fecha Inicio', 'Fecha Fin', 'Nombre', 'Apellido Paterno'],
         colModel: [

                  { name: 'IdReemplazo', index: 'IdReemplazo', align: 'left', editable: false, sortable: false, hidden: true },
                  { name: 'IdPersona', index: 'IdPersona', align: 'left', editable: false, sortable: false, hidden: true },
                  { name: 'IdeSolReqPersonal', index: 'IdeSolReqPersonal', align: 'left', editable: false, sortable: false, hidden: true },

                  { name: 'FecInicioReemplazo', index: 'FecInicioReemplazo', align: 'left', sortable: false, editable: false, width: 180 },
                  { name: 'FecFinalReemplazo', index: 'FecFinalReemplazo', align: 'left', sortable: false, editable: false, width: 180 },
                  { name: 'Nombres', index: 'Nombres', align: 'left', sortable: false, editable: false, width: 270 },
                  { name: 'ApePaterno', index: 'ApePaterno', align: 'left', sortable: false, width: 270, editable: false },

         ],


         pager: jQuery('#grdPagerReemplazosReq'),
         rowNum: 10,

         autowidth: true,
         rules: true,
         sortname: 'IdReemplazo',
         sortorder: 'desc',
         viewrecords: true,
         height: 250,
         cellsubmit: 'clientArray',
         hidegrid: false,
         rownumbers: true,
         shrinkToFit: false,

         postData: {
         },
         loadComplete: function (data) {
         }
     });




        $('#btnAprobarRechazarReemplazo').click(function () {

            if (validaEnvio()) {

                id = $("#SolReqPersonal_CodSolReqPersonal").val();

                if (id != null && id > 0) {
                    mostrarPopuprAprobacion(id);
                } else {
                    MostrarMensaje('Genere una Solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
                }
            }

        });


        $('#btnPublicarSolReemplazo').click(function () {
            var pagina = '@TipoSolicitud.Remplazo';

            if (validaEnvio()) {

                id = $("#SolReqPersonal_CodSolReqPersonal").val();

                if (id != null && id > 0) {
                    var url = '@Url.Action("Publica", "SolicitudCargo", new { id = "",area="Intranet" })?id=' + id + "&pagina=" + pagina;
                    window.location = url;
                    //window.location = '@Url.Action("Publica", "SolicitudCargo", new { id = ""})' + '/' + id;
                } else {
                    MostrarMensaje('Genere una Solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
                }
            }

        });


        $('#btnAgregarReemplazo').click(function () {

            id = $("#SolReqPersonal_CodSolReqPersonal").val();
            tipReemplazo = $("#SolReqPersonal_TipVacante").val();
            idReemplazo = 0;
            if (id != null && id > 0) {
                mostrarPopuprReemplazo(id, tipReemplazo, idReemplazo);
            } else {
                MostrarMensaje('Genere una Solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
            }


        });


        $('#btnEditar').click(function () {

            var id = $("#SolReqPersonal_CodSolReqPersonal").val();
            var tipReemplazo = $("#SolReqPersonal_TipVacante").val();

            var selRow = $('#grdListReemplazosReq').jqGrid('getGridParam', 'selrow');
            var rowData = jQuery('#grdListReemplazosReq').jqGrid('getRowData', selRow);
            var idReemplazo = rowData.IdReemplazo;

            var selr = jQuery('#grdListReemplazosReq').jqGrid('getGridParam', 'selrow');

            if (selr != null) {
                mostrarPopuprReemplazo(id, tipReemplazo, idReemplazo);
            } else {
                MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
            }


        });



        $('#btnEliminaReemplazo').click(function () {
            var selr = jQuery('#grdListReemplazosReq').jqGrid('getGridParam', 'selrow');
            if (selr != null) {

                $('#divEliminar').dialog('open');

            } else {
                MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });


        $("#spanEliminar").html("¿Desea eliminar el registro?")
        $('#divEliminar').dialogo({
            resizable: false,
            buttons: {
                "Aceptar": function () {
                    var selr = jQuery('#grdListReemplazosReq').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdListReemplazosReq').jqGrid('getRowData', selr);
                    var idReq = rowData.IdeSolReqPersonal;
                    var idPersona = rowData.IdPersona;
                    if (selr != null) {
                        EliminarReemplazo(selr, idReq, idPersona);
                    } else {
                        MostrarMensaje('Seleccione un usuario', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#popupDialogAprobReem').dialog({
            autoOpen: false,
            width: 420,
            //height: 400,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    var observacion = $("#LogSolReqPersonal_Observacion").val();
                    var aprobado = $('input[name="LogSolReqPersonal.Aprobado"]:checked').val();
                    if (aprobado == "false") {
                        aprobado = 2;
                    } else {
                        aprobado = 1;
                    }

                    var dato = validaAprobacion(observacion, aprobado);
                    if (dato) {
                        $('#DialogAprobReem').dialog('open');
                    } else {
                        MostrarMensaje('Ingrese una observación', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            },
            open: function () {
                $("#LogSolReqPersonal_Observacion").focus();
            }
        });



        $("#spanDialogAprobReem").html("¿Desea grabar los cambios?")
        $('#DialogAprobReem').dialog({
            autoOpen: false,
            modal: true,
            title: "Sistema de Reclutamiento Y Seleccion de Personal",
            resizable: false,
            buttons: {
                "Aceptar": function () {


                    $('#DialogAprobReem').dialog('close');
                    $('#popupDialogAprobReem').dialog('close');
                    //bloqueo
                    $.blockUI({
                        message: '<h1>Procesando...</h1>',
                        css: {
                            border: 'none',
                            padding: '15px',
                            backgroundColor: '#000',
                            '-webkit-border-radius': '10px',
                            '-moz-border-radius': '10px',
                            opacity: .5,
                            color: '#fff'
                        }
                    });



                    $.ajax({
                        data: $("#frmPopupAprobReem").serialize(),
                        type: "POST",

                        url: '@Url.Action("SetPopupAprobReem", "SolicitudCargo")',
                        traditional: true,
                        success: function (data) {

                            //desbloqueo
                            $.unblockUI();


                            if (data.Resultado) {
                                //$('#DialogAprobReem').dialog('close');
                                //$('#popupDialogAprobReem').dialog('close');

                                MensajeInformacion("divMensajeInfo", "spnMensajeInfo", data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                            }
                        }
                    });

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $("#spanEnviar").html("¿Esta seguro que desea enviar esta solicitud de reemplazo de Cargo?")
        $('#divEnviar').dialogo({
            resizable: false,
            buttons: {
                "Aceptar": function () {
                    enviaSolicitud();
                    $(this).dialog("close");
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#popupDialogReemplazo').dialog({
            autoOpen: false,
            width: 420,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    //if ($("#frmPopupReemplazo").valid()) {
                    var fechaInicial = $("#Reemplazo_FecInicioReemplazo").val();
                    var fechaFinal = $("#Reemplazo_FecFinalReemplazo").val();
                    var Nombres = $("#Reemplazo_Nombres").val();
                    var ApePaterno = $("#Reemplazo_ApePaterno").val();
                    var TipoReemplazo = $("#TipoReemplazo").val();


                    if (valida(fechaInicial, fechaFinal, Nombres, ApePaterno, TipoReemplazo)) {

                        $('#DialogReemplazo').dialog('open');

                    }

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $("#spanDialogReemplazo").html("¿Desea guardar los cambios?")
        $('#DialogReemplazo').dialog({
            autoOpen: false,
            modal: true,
            title: "CONFIRMACIÓN",
            resizable: false,
            buttons: {
                "Aceptar": function (e) {
                    e.preventDefault();
                    $.ajax({
                        data: $("#frmPopupReemplazo").serialize(),
                        type: "POST",
                        async : false,
                        url: '@Url.Action("SetPopupReemplazo", "SolicitudCargo")',
                            traditional: true,
                            success: function (data) {
                                if (data.Resultado) {
                                    //MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");

                                    $('#DialogReemplazo').dialog('close');
                                    $('#popupDialogReemplazo').dialog('close');
                                    $('#grdListReemplazosReq').trigger('reloadGrid');

                                }
                            }
                        });


                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });




    });
        function RadioFormatter(cellvalue, options, rowObject) {
            var strRdo = '<input type ="radio" name = "codigo">';
            return strRdo;
        }

        function irATab(tab) {
            $('a[href=#' + tab + ']').tab('show');
        }


        function valida(fechaInicial, fechaFinal, Nombres, ApePaterno, TipoReemplazo) {

            var fechaActual = $.datepicker.formatDate('dd/mm/yy', new Date());


            if (Nombres.trim().length==0) {
                MostrarMensaje('Ingreser un nombre', "Mensaje");
                return false;
            }

            if (ApePaterno.trim().length == 0) {
                MostrarMensaje('Ingreser un apellido', "Mensaje");
                return false;
            }

            if ("S" == TipoReemplazo) {

                if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {

                    MostrarMensaje('Las fechas son obligatorias', "Mensaje");
                    return false;
                }

                if (Funciones.compareDate(fechaActual, fechaInicial) == -1) {
                    MostrarMensaje('La fecha inicial debe ser mayor o igual a la fecha del día', "Mensaje");
                    return false;
                }




                if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                    MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                    return false;
                }



            } else {

                if ((fechaFinal.length == 0)) {

                    MostrarMensaje('La fechas es obligatoria', "Mensaje");
                    return false;
                }
            }

            if (Nombres.length == 0) {
                MostrarMensaje('Ingrese el Nombre', "Mensaje");
                return false;
            }

            if (Nombres.length == 0) {
                MostrarMensaje('Ingrese el apellido paterno', "Mensaje");
                return false;
            }

            return true;

        }


        //inicio
        function mostrarPopuprReemplazo(id, tipReemplazo, idReemplazo) {
            var dialogDiv = $('#popupDialogReemplazo');

            $.get('@Url.Action("InicioPopupReemplazo", "SolicitudCargo", new { area = "Intranet", id=""})?id=' + id + "&tipReemplazo=" + tipReemplazo + "&idReemplazo=" + idReemplazo, function (data) {

            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#popupDialogReemplazo"));
            dialogDiv.dialog('open');
        });
        return false;
    }


    function mostrarPopuprAprobacion(id) {

        var dialogDiv = $('#popupDialogAprobReem');

        $.get('@Url.Action("InicioPopupAprobReem", "SolicitudCargo", new { area = "Intranet", id=""})?id=' + id, function (data) {

            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#popupDialogAprobReem"));
            dialogDiv.dialog('open');
        });
        return false;
    }


    function EliminarReemplazo(selr, idReq, idPersona) {

        $.ajax({
            data: {
                id: selr,
                idReq: idReq,
                idPersona: idPersona

            },
            type: "POST",
            url: "@Url.Action("EliminarReemplazo", "SolicitudCargo")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == true) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdListReemplazosReq').trigger('reloadGrid');
                }
            }
        });

    }

    function validaAprobacion(observacion, aprobado) {

        var longitud = observacion.length;

        if (aprobado == 1) {
            return true;
        }
        else {

            if (observacion != null && longitud > 0) {
                return true;
            } else {
                return false;
            }

        }
    }



    function GeneraSolicitud() {
        if (validaEnvio()) {
            creaSolicitudReempCargo();
        }

    }


    function validaEnvio() {

        var tipVacante = $('#SolReqPersonal_TipVacante').val();
        var solReqIdeCargo = $('#SolReqPersonal_Idecargo').val();
        var numVacante = $('#SolReqPersonal_NumVacantes').val();

        var idCargo = $('#SolReqPersonal_IdeCargo').val();

        var countList = jQuery("#grdListReemplazosReq").jqGrid('getGridParam', 'records');

        var observ = $('#SolReqPersonal_Observacion').val();
        var tipoPuesto = $('#SolReqPersonal_TipPuesto').val();

        var idDependencia = $('#SolReqPersonal_IdeDependencia').val();
        var idDepartamento = $('#SolReqPersonal_IdeDepartamento').val();
        var idArea = $('#SolReqPersonal_IdeArea').val();

        if (tipVacante == "0") {
            MostrarMensaje("Seleccione un tipo de vacante", "Mensaje");
            return false;
        }

        if (solReqIdeCargo == 0) {
            MostrarMensaje("Seleccione cargo", "Mensaje");
            return false;
        }


        if (idCargo==0) {
            MostrarMensaje("Seleccione un cargo", "Mensaje");
            return false;
        }

        if (tipVacante == 0) {
            MostrarMensaje("Seleccione un tipo de vacante", "Mensaje");
            return false;
        }



        if (tipoPuesto == "0") {
            MostrarMensaje("Seleccione un tipo de puesto", "Mensaje");
            return false;
        }

        if (idDependencia == "0") {
            MostrarMensaje("Seleccione una dependencia", "Mensaje");
            return false;
        }
        if (idDepartamento == "0") {
            MostrarMensaje("Seleccione un departamento", "Mensaje");
            return false;
        }
        if (idArea == "0") {
            MostrarMensaje("Seleccione una area", "Mensaje");
            return false;
        }


        if (numVacante.length > 0 && numVacante==0) {
            MostrarMensaje("Ingrese un número de vacantes", "Mensaje");
            return false;
        }

        if (observ.length==0) {
            MostrarMensaje("Ingrese observaciones", "Mensaje");
            return false;
        }


        return true;

    }


    function EnvioSolicitud() {

        validaEnvio();

        var numVacante = $('#SolReqPersonal_NumVacantes').val();
        var countList = jQuery("#grdListReemplazosReq").jqGrid('getGridParam', 'records');

        if (numVacante.length >= 0) {

            var nVacante = parseInt(numVacante);
            if (nVacante == 0) {
                //notificacionExito("Ingrese el numero de vacantes");
                MostrarMensaje("Ingrese el número de vacantes", "Mensaje");
                return;
            }

            if (nVacante != countList) {
                MostrarMensaje("El número de vacantes no puede ser diferente al número de reemplazos", "Mensaje")
                //notificacionExito("El número de vacantes no puede ser diferente al número de reemplazos");
                return;
            }

        }

        $('#divEnviar').dialog('open');
      
    }


    function enviaSolicitud() {

        $.blockUI({
            message: '<h1>Enviando Solicitud...</h1>',
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            }
        });


        $.ajax({
            data: $("#frmSolReemplazoCargo").serialize(),
            type: "POST",
            url: '@Url.Action("EnviaSolReqPersonal", "SolicitudCargo", new { area="Intranet"})',
            traditional: true,
            success: function (data) {
                if (data.Resultado) {
                    $.unblockUI();
                    RedireccionaSol("divMensajeInfo", "spnMensajeInfo", data.Mensaje, "Información");
                }
            }
        });




    }



    function creaSolicitudReempCargo() {

        $.ajax({
            data: $("#frmSolReemplazoCargo").serialize(),
            type: "POST",
            url: '@Url.Action("SetSolReqPersonal", "SolicitudCargo", new { area="Intranet"})',
            traditional: true,
            success: function (data) {
                if (data.Resultado) {

                    if (data.IdDato != null && data.IdDato > 0) {

                        //$('#SolReqPersonal_TipVacante').attr("readonly", "readonly");
                        $("#SolReqPersonal_TipVacante").attr("disabled", true);
                        $("#SolReqPersonal_CodSolReqPersonal").val(data.IdDato);
                    }
                    


                    MostrarMensaje(data.Mensaje, "Información");
                    $('#grdListReemplazosReq').trigger('reloadGrid');
                }
            }
        });

    }

    function MensajeInformacion(selectorDiv, selectorSpan, msg, title) {
        $('#' + selectorSpan).html(msg);
        var opt = {
            title: title,
            autoOpen: false,
            modal: true,
            resizable: false,
            buttons: {
                "Aceptar": function () {
                    $(this).dialog("close");
                    RedireccionaBus();
                }
            }
        };
        $('#' + selectorDiv).dialog(opt).dialog('open');

    }


    function RedireccionaBus() {
        window.location = '@Url.Action("ListaReemplazo", "SolicitudCargo", new { area = "Intranet"})';
    }


    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensajeInfo", "spnMensajeInfo", mensaje, titulo);
    }



    function RedireccionaSol(selectorDiv, selectorSpan, msg, title) {
        $('#' + selectorSpan).html(msg);
        var opt = {
            title: title,
            autoOpen: false,
            modal: true,
            resizable: false,
            buttons: {
                "Aceptar": function () {
                    $(this).dialog("close");
                    SanPablo.Redirecciona('@Url.Action("ListaReemplazo", "SolicitudCargo")');
                }
            }
        };
        $('#' + selectorDiv).dialog(opt).dialog('open');

    }


    //fin

</script>
}
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Solicitud de Reemplazo de Cargo</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                </div>            
            </div>
            <h5>Motivo requerimiento</h5>
             
@using (Html.BeginForm("Index", "SolicitudReemplazoCargo", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmSolReemplazoCargo", @class = "formulario-busqueda" }))
{
    @Html.ValidationSummary(true)

     @Html.TextBoxFor(model => model.SolReqPersonal.IdeSolReqPersonal, new { style = "display: none;" })

    
                <table class="formulario-busqueda">
                    <tr class="formulario-fila">
                        <td class="span5">
                           
                            <label class="control-label" for="inputSuccess">Requerimiento</label>
                            <div class="controles">    
                                <input class="textoFormulario" id="SolReqPersonal_CodSolReqPersonal" name="SolReqPersonal.CodSolReqPersonal" readonly="readonly" type="text" value="@Model.SolReqPersonal.CodSolReqPersonal">
                            </div>
                            
                        </td>
                        <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Dependecia <span class="text-error">*</span></label>
                            
                            <div class="controles">
                            @if ( Accion.Aprobar.Equals(Model.Accion) || Accion.Publicar.Equals(Model.Accion))
                            {
                                 @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.listaDependencia, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia), new { disabled ="disabled" })                      
                            }
                            else
                            {

                                if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(Model.idRol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(Model.idRol))
                                {
                                  @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.listaDependencia, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia), new { @readonly="readonly"})    
                                }
                                else
                                {
                                  @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.listaDependencia, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia))
                                }
                                
                                
                            }
                                   
                            </div>
                        </td>
                    </tr>
                    <tr class="formulario-fila">
                       <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Cargo <span class="text-error">*</span></label>
                            <div class="controles">
                                
                            
                            @if ( Accion.Aprobar.Equals(Model.Accion) || Accion.Publicar.Equals(Model.Accion))
                            {
                                @Html.DropDownListFor(model => model.SolReqPersonal.IdeCargo, new SelectList(Model.listaTipCargo, "IdeCargo", "NombreCargo", Model.SolReqPersonal.IdeCargo), new { disabled ="disabled" })
                            }
                            else
                            {
                                 @Html.DropDownListFor(model => model.SolReqPersonal.IdeCargo, new SelectList(Model.listaTipCargo, "IdeCargo", "NombreCargo", Model.SolReqPersonal.IdeCargo))
                            }
                            </div>
                       
                        </td>
                        
                         <td class="span5">
                            <label class="control-label" for="inputSuccess">Departamento <span class="text-error">*</span></label>
                            <div class="controles">
                             

                            @if ( Accion.Aprobar.Equals(Model.Accion) || Accion.Publicar.Equals(Model.Accion))
                            {
                            @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.listaDepartamento, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento), new { disabled ="disabled" })                      
                            }
                            else
                            {

                                if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(Model.idRol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(Model.idRol))
                                {
                                  @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.listaDepartamento, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento), new { @readonly ="readonly"})                      
                                }
                                else
                                {
                                  @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.listaDepartamento, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento))                        
                                }
                            }


                            </div>
                           
                        </td>  
                        
                   
                    </tr>
                    <tr class="formulario-fila">
                        <td class="span5">
                        
                            <label class="control-label" for="selectError">Tipo Vacante <span class="text-error">*</span></label>
                            <div class="controles">
                                
                            
                            @if ( Accion.Aprobar.Equals(Model.Accion) || Accion.Publicar.Equals(Model.Accion))
                            {
                              @Html.DropDownListFor(model => model.SolReqPersonal.TipVacante, new SelectList(Model.listaTipVacante, "Valor", "Descripcion", Model.SolReqPersonal.TipVacante), new { disabled ="disabled"})
                            }
                            else
                            {
                              @Html.DropDownListFor(model => model.SolReqPersonal.TipVacante, new SelectList(Model.listaTipVacante, "Valor", "Descripcion", Model.SolReqPersonal.TipVacante))
                            }
                            
                            </div>
                        
                        </td>
                   
                           <td class="span5">
                            <label class="control-label" for="inputSuccess">Área <span class="text-error">*</span></label>
                            <div class="controles">
                                
                            @if ( Accion.Aprobar.Equals(Model.Accion) || Accion.Publicar.Equals(Model.Accion))
                            {
                              @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.listaArea, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea), new { disabled ="disabled" })                      
                            }
                            else
                            {

                                if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(Model.idRol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(Model.idRol))
                                { 
                                  @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.listaArea, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea), new {@readonly = "readonly" })                      
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.listaArea, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea))                      
                                }
                                
                                
                            }
                            
                            
                            </div>
                        </td>

                    </tr>
                    <tr class="formulario-fila">
                        <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Vacantes <span class="text-error">*</span></label>
                            <div class="controles">
                                
                                @if (!Accion.Publicar.Equals(Model.Accion))
                                {
                                    @Html.TextBoxFor(model => model.SolReqPersonal.NumVacantes, new { @class = "textoFormulario" ,onkeypress="return Funciones.isNumberKey(event)",maxlength = "2",style="width: 50px"})     
                                }
                                else
	                            {
                                   @Html.TextBoxFor(model => model.SolReqPersonal.NumVacantes, new { @class = "textoFormulario", onkeypress = "return Funciones.isNumberKey(event)", maxlength = "2", style = "width: 50px",@readonly = "readonly" })     
                                }
                                
                                
                            </div>
                        
                        </td> 
                        
                        <td class="span5">
                        
                            <label class="control-label" for="selectError">Tipo puesto <span class="text-error">*</span></label>
                            <div class="controles">
                            @if (!Accion.Publicar.Equals(Model.Accion))
                                {
                                
                                    @Html.DropDownListFor(model => model.SolReqPersonal.TipPuesto, new SelectList(Model.listaTipPuesto, "Valor", "Descripcion", Model.SolReqPersonal.TipPuesto))
                                
                                }
                            else
                            {
                                      @Html.DropDownListFor(model => model.SolReqPersonal.TipPuesto, new SelectList(Model.listaTipPuesto, "Valor", "Descripcion", Model.SolReqPersonal.TipPuesto), new { @readonly = "readonly"})
                            }
                        </div>
                        </td>                   
                        
                    </tr>
                    <tr class="formulario-fila">
                        <td class="span5">
                        <label class="control-label" for="inputSuccess">Observaciones <span class="text-error">*</span></label>
                        <div class="controles">
                               
                            
                            @if (!Accion.Publicar.Equals(Model.Accion))
                            {
                                 @Html.TextAreaFor(model => model.SolReqPersonal.Observacion, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize: none;", maxlength = "255" ,onblur="aMays(event, this)"}) 
                            }
                            else
                            {
                                 @Html.TextAreaFor(model => model.SolReqPersonal.Observacion, new { @readonly = "readonly",rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize: none;", maxlength = "255" ,onblur="aMays(event, this)"}) 
                            }
                            
                        </div>
                        </td>                    
                    </tr>
                    
                </table>
        
                    <div class="grilla-opciones">
                            <div class="opciones">
                                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina) || Accion.Publicar.Equals(Model.Accion))
                                {
                                    <span></span> 
                                }
                                else
                                {
                                    <a  class="btn btn-info" id="btnGrabarSolReq" onclick="GeneraSolicitud()"><i class="icon-screenshot icon-white"></i> Grabar</a>
                                }
                            </div>
                            <div style="clear:both"></div>
                    </div>
    
               <div id="SeccionReemplazos">
                     <div class="grilla-opciones">
                        <h6>Reemplazos</h6>
                            <div class="opciones">
                                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina) || Accion.Publicar.Equals(Model.Accion))
                                {
                                    <span></span> 
                                }
                                else
                                {
                                    <a class="btn btn-small btn-info" title="Agregar" id ="btnAgregarReemplazo"><i class="icon-plus icon-white"></i></a>
                                    <a id="btnEditar"  class ="btn btn-small btn-info" title="Editar"><i class="icon-edit icon-white"></i></a>  
                                    <a class="btn btn-small btn-info" title="Eliminar" id="btnEliminaReemplazo"><i class="icon-remove icon-white"></i></a>                                  
                                }
                            </div>
                            <div style="clear:both"></div>
                    </div>
                    <div class="tabla-datos" >
                    <table id="grdListReemplazosReq" >
                    </table>
                    <div id="grdPagerReemplazosReq">
                    </div>
                    </div>
               </div>
               
                             
}
           
           
          @if (Accion.Enviar.Equals(Model.Accion))
          {
		           <span></span>
          }
          else
          {
             
              <h5>Perfil</h5>
            <ul class="nav nav-tabs">
                <li><div style="width:110px;display:inline-block"></div></li>
                <li class=""><a href="#A" data-toggle="tab">Puesto</a></li>
                <li class=""><a href="#B" data-toggle="tab">General</a></li>
                <li class=""><a href="#C" data-toggle="tab">Estudios</a></li>
                <li class=""><a href="#D" data-toggle="tab">Experiencia</a></li>
                <li class=""><a href="#E" data-toggle="tab">Conocimientos</a></li>
                <li class=""><a href="#F" data-toggle="tab">Discapacidad</a></li>
                <li class=""><a href="#G" data-toggle="tab">Evaluación</a></li>
                <li class=""><a href="#H" data-toggle="tab">Conf.Perfil</a></li>
            </ul>
            <div class="tabbable" >
                <div class="tab-content">
                     <div class="tab-pane" id="A">
                     @Html.Partial("Puesto")
                    </div>
                    <div class="tab-pane" id="B">
                     @Html.Partial("General")
                    </div>
                    <div class="tab-pane" id="C">
                     @Html.Partial("Estudio")
                    </div>
                  <div class="tab-pane" id="D">
                    @Html.Partial("Experiencia")
                  </div>
                  <div class="tab-pane" id="E">
                    @Html.Partial("Conocimientos")
                  </div>
                  <div class="tab-pane" id="F">
                    @Html.Partial("Discapacidad")
                  </div>
                    <div class="tab-pane" id="G">
                    @Html.Partial("Evaluacion")
                  </div>
                  <div class="tab-pane" id="H">
                    @Html.Partial("ConfiguracionPerfil")
                  </div>
              
                </div>     
                <div class="container">
                </div>  
           </div>  
               
          
          }


            <div class="form-actions">
                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <a class="btn" href="@Url.Action("Index", "SolicitudConsulta")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                }
                else
                {
                   <a class="btn" href="@Url.Action("ListaReemplazo", "SolicitudCargo")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                }

                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <span></span> 
                }
                else
                {
                    if (Accion.Aprobar.Equals(Model.Accion))
                    {
                      <a  class="btn btn-info" id ="btnAprobarRechazarReemplazo"><i class="icon-list icon-white"></i> Aprob/Rech</a>    
                    }

                    if (Accion.Enviar.Equals(Model.Accion))
                    {
                      <a  class="btn btn-info" onclick="EnvioSolicitud()"><i class="icon-screenshot icon-white"></i> Enviar</a>    
                    }

                    if (Accion.Publicar.Equals(Model.Accion))
                    {
                    <a class="btn btn-info" id ="btnPublicarSolReemplazo"><i class="icon-circle-arrow-up icon-white"></i> Publicar</a>
                    }
                }
            </div>
        
        </div>
    </div>
</div>



@*Inicio*@
<div id="popupDialogReemplazo" title="Reemplazo"></div>
<div id="popupDialogAprobReem" title="Aprobar/Rechazar"></div>


<div id="DialogAprobReem"><span id="spanDialogAprobReem"></span></div>
<div id="DialogReemplazo"><span id="spanDialogReemplazo"></span></div>
<div id="divEliminar">
	<span id="spanEliminar"></span>
</div>

<div id="divEnviar">
	<span id="spanEnviar"></span>
</div>

<div id="divMensajeInfo">
        <span id="spnMensajeInfo"></span>
</div>


@*Fin*@