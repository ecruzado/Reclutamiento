@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudRempCargoViewModel
@using SanPablo.Reclutador.Entity
@using System.Collections.Generic


@{
    ViewBag.Title = "Listado Solicitudes Ampliacion";

    int idrol = (Session[ConstanteSesion.Rol]==null?0:Convert.ToInt32(Session[ConstanteSesion.Rol]));
    
    
  }
@section Head{
}

@section Scripts{

<script type="text/javascript">
    $("#txtfechainicio").datepicker();
    $("#txtfechafin").datepicker();

   
    $('#SolReqPersonal_FechaInicioBus,#SolReqPersonal_FechaFinBus').datepicker({
        showOn: "button",
        buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
    });

    $('#SolReqPersonal_FechaInicioBus,#SolReqPersonal_FechaFinBus').attr("readonly", "readonly");


    $('#btnBuscarReemplazo').click(function () {
        if (valida()) {
            $('#grdListBusquedaReemplazo').trigger('reloadGrid');
        }
    });



    $('#btnEliminar').click(function () {
       
        var selr = jQuery('#grdListBusquedaReemplazo').jqGrid('getGridParam', 'selrow');
        var rowData = jQuery('#grdListBusquedaReemplazo').jqGrid('getRowData', selr);
        var idSol = rowData.IdeSolReqPersonal;
        var Tipsol = rowData.Tipsol;

        $.ajax({
            data: {
                id: idSol,
                Tipsol: Tipsol
            },
            type: "POST",
            url: '@Url.Action("EliminaSolicitud", "SolicitudCargo", new { area="Intranet"})',
                traditional: true,
                success: function (data) {
                    @*if (data.redirecciona) {
                        SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }*@
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Selección de Personal");
                } else {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Selección de Personal");
                    $('#grdListBusquedaReemplazo').trigger('reloadGrid');
                }
            }
        });

    });
    


    $('#btnPreseleccion').click(function () {

        var selr = jQuery('#grdListBusquedaReemplazo').jqGrid('getGridParam', 'selrow');
        var rowData = jQuery('#grdListBusquedaReemplazo').jqGrid('getRowData', selr);

        var idSol = selr;
        var tipSol = rowData.Tipsol;
        var pagina = '@TipoSolicitud.Remplazo';
        var indPagina = '@Indicador.No';

             if (idSol != null) {

                 @* var url = '@Url.Action("Preseleccionado", "Ranking", new { id = "",area="Intranet" })?id=' + idSol + "&tipSol=" + tipSol + "&pagina=" + pagina + "&ind=" + indPagina;
                 window.location = url;*@

                 $.ajax({
                     type: "POST",
                     url: '@Url.Action("ValidaSol", "SolicitudCargo", new { area = "Intranet"})',
                    data: { idSol: selr },
                    success: function (data) {

                    if (data.Resultado) {

                        var url = '@Url.Action("Preseleccionado", "Ranking", new { id = "",area="Intranet" })?id=' + idSol + "&tipSol=" + tipSol + "&pagina=" + pagina + "&ind=" + indPagina;
                        window.location = url;

                    } else {
                        MostrarMensaje('La solicitud debe encontrarse publicada o finalizada', "Sistema de Reclutamiento Y Selección de Personal");
                    }

                   },
                      error: function (e) {
                          console.log(e);
                      }
                  });



             } else {
                 MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Selección de Personal");
             }

      });


    $('#btnRankingSol').click(function () {
        var selr = jQuery('#grdListBusquedaReemplazo').jqGrid('getGridParam', 'selrow');
        var rowData = jQuery('#grdListBusquedaReemplazo').jqGrid('getRowData', selr);
        var pagina = '@TipoSolicitud.Remplazo';
        if (selr != null) {
           
           
            @* var url = '@Url.Action("Index", "Ranking", new { id = "",area="Intranet" })?id=' + selr + "&tipSol=" + rowData.Tipsol + "&pagina=" + pagina;
            window.location = url;*@

            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidaSol", "SolicitudCargo", new { area = "Intranet"})',
                     data: { idSol: selr },
                     success: function (data) {

                         if (data.Resultado) {

                             var url = '@Url.Action("Index", "Ranking", new { id = "",area="Intranet" })?id=' + selr + "&tipSol=" + rowData.Tipsol + "&pagina=" + pagina;
                             window.location = url;

                    } else {
                        MostrarMensaje('La solicitud debe encontrarse publicada o finalizada', "Sistema de Reclutamiento Y Selección de Personal");
                    }

                    },
                error: function (e) {
                    console.log(e);
                }
            });

           

        } else {
            MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Selección de Personal");
        }

    }); 

    $('#btnRequerimintoSol').click(function () {
        var selr = jQuery('#grdListBusquedaReemplazo').jqGrid('getGridParam', 'selrow');
        var pagina = '@TipoSolicitud.Remplazo';
        if (selr != null) {


            $.ajax({
                type: "POST",
                url: '@Url.Action("ValidaEstadoSol", "SolicitudCargo", new { area = "Intranet"})',
                data: { idSol: selr },
                success: function (data) {
               
                    if (data.Resultado) {

                        var url = '@Url.Action("Edit", "SolicitudCargo", new { id = "",area="Intranet" })?id=' + selr + "&pagina=" + pagina;
                        window.location = url;

                    } else {
                        MostrarMensaje('La solicitud debe encontrarse activa', "Sistema de Reclutamiento Y Selección de Personal");
                    }

                },
            error: function (e) {
                console.log(e);
            }
            });



            
            



            
        } else {
            MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Selección de Personal");
        }

     });


    $('select#SolReqPersonal_IdeDependencia').change(function () {
        var ideDependencia = $(this).val();
        $("select#SolReqPersonal_IdeArea").empty();
        $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");

        $("select#SolReqPersonal_IdeDepartamento").empty();
        $("select#SolReqPersonal_IdeDepartamento").append("<option value='0'> Seleccionar </option>");



        $.ajax({
            type: "POST",
            url: '@Url.Action("listaDepartamentos", "SolicitudCargo", new { area = "Intranet"})',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeDepartamento").empty();
                    $("select#SolReqPersonal_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                    );
                },
                error: function (e) {
                    console.log(e);
                }
            });
     })

    $('select#SolReqPersonal_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","SolicitudCargo",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeArea").empty();
                    $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })


    jQuery("#grdListBusquedaReemplazo").jqGrid({
        datatype: function (postdata) {
            var migrilla = new Object();
            migrilla.page = postdata.page;
            migrilla.rows = postdata.rows;
            migrilla.sidx = postdata.sidx;
            migrilla.sord = postdata.sord;
            migrilla._search = postdata.isSearch;
            migrilla.filters = postdata.filters;
            migrilla.Rules = [

                { field: 'idUsuario', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') },
                { field: 'idCargo', data: $("#SolReqPersonal_IdeCargo").val() },
                { field: 'idDependencia', data: $("#SolReqPersonal_IdeDependencia").val() },
                { field: 'idArea', data: $("#SolReqPersonal_IdeArea").val() },
                { field: 'tipResp', data: $("#SolReqPersonal_TipResponsable").val() },
                { field: 'fecInicio', data: $("#SolReqPersonal_FechaInicioBus").val() },
                { field: 'fecFin', data: $("#SolReqPersonal_FechaFinBus").val() },
                { field: 'idDepartamento', data: $("#SolReqPersonal_IdeDepartamento").val() },
                { field: 'tipEtapa', data: $("#SolReqPersonal_TipEtapa").val() },
                { field: 'tipEstado', data: $("#SolReqPersonal_TipEstado").val() }

            ];
            if (migrilla._search == true) {
                migrilla.searchField = postdata.searchField;
                migrilla.searchOper = postdata.searchOper;
                migrilla.searchString = postdata.searchString;
            }
            var params = { grid: migrilla };

            $.ajax({
                url: '@Url.Action("ListBusquedaReemplazo", "SolicitudCargo", new { area="Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListBusquedaReemplazo')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
        colNames: ['Estado', '', '', 'Código', '', 'Cargo', '', 'Dependencia', '', 'Departamento', '', 'Área', 'Vac.', 'Post.', 'Pre Sel.', 'Eval.', 'Selec.', 'Cont.', 'Inicio', 'Cierre', '', 'Responsable', 'Nom.Responsable', 'Publicado', '', '', '', 'Etapa'],
        colModel: [
                { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatterSemaforo },
                { name: 'TipEstado', index: 'TipEstado', align: 'center', width: 50, hidden: true, sortable: false },
                { name: 'IdeSolReqPersonal', index: 'IdeSolReqPersonal', align: 'left', hidden: true, sortable: false },
                { name: 'CodSolReqPersonal', index: 'CodSolReqPersonal', align: 'left', width: 100, sortable: false },
                { name: 'Idecargo', index: 'Idecargo', align: 'left', hidden: true, sortable: false },
                { name: 'DesCargo', index: 'DesCargo', align: 'left', width: 250, sortable: false },
                { name: 'IdeDependencia', index: 'IdeDependencia', align: 'left', hidden: true, sortable: false },
                { name: 'Dependencia_des', index: 'Dependencia_des', align: 'left', width: 280, sortable: false },
                { name: 'IdeDepartamento', index: 'IdeDepartamento', align: 'left', hidden: true, sortable: false },
                { name: 'Departamento_des', index: 'Departamento_des', align: 'left', width: 280, sortable: false },
                { name: 'IdeArea', index: 'IdeArea', align: 'right', hidden: true, sortable: false },
                { name: 'Area_des', index: 'Area_des', align: 'left', width: 250, sortable: false },

                { name: 'NumVacantes', index: 'NumVacantes', align: 'right', width: 60, sortable: false },
                { name: 'CantPostulante', index: 'CantPostulante', align: 'right', width: 60, sortable: false },
                { name: 'CantPreSelec', index: 'CantPreSelec', align: 'right', width: 60, sortable: false },
                { name: 'CantEvaluados', index: 'CantEvaluados', align: 'left', width: 60, sortable: false },
                
                { name: 'CantSeleccionados', index: 'CantSeleccionados', align: 'left', width: 60, sortable: false },
                  { name: 'CantContratados', index: 'CantContratados', align: 'right', width: 60, sortable: false },
                { name: 'Feccreacion', index: 'Feccreacion', align: 'left', width: 90, sortable: false },
                { name: 'FecExpiracacion', index: 'FecExpiracacion', align: 'left', width: 90, sortable: false },
                { name: 'IdRol', index: 'IdRol', align: 'left', hidden: true, sortable: false },
                { name: 'DesRol', index: 'DesRol', align: 'left', width: 200, sortable: false },
                { name: 'NomPersonReemplazo', index: 'NomPersonReemplazo', align: 'left', width: 300, sortable: false },
                { name: 'FlagPublicado', index: 'FlagPublicado', align: 'center', width: 90, sortable: false },
                { name: 'TipEtapa', index: 'TipEtapa', align: 'center', width: 50, hidden: true, sortable: false },
                { name: 'idUsuarioResp', index: 'idUsuarioResp', align: 'center', hidden: true, sortable: false },
                { name: 'Tipsol', index: 'Tipsol', align: 'center', hidden: true, sortable: false },
                { name: 'Des_etapa', index: 'Des_etapa', align: 'center', hidden: false, sortable: false }
                
                
        ],
        pager: jQuery('#grdPagerBusquedaReemplazo'),
        rowNum: 10,
        //rowList: [10, 30, 50],
        autowidth: true,
        rules: true,
        sortname: 'IdeSolReqPersonal',
        sortorder: 'desc',
        viewrecords: true,
        height: 250,
        cellsubmit: 'clientArray',
        hidegrid: false,
        rownumbers: true,
        shrinkToFit: false,

        postData: {
        },
        loadComplete: function (data) {
        }
    });


    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }


    function valida() {

        var fechaInicial = $('#SolReqPersonal_FechaInicioBus').val();
        var fechaFinal = $('#SolReqPersonal_FechaFinBus').val();
       
        if (fechaInicial.length>0) {
            if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                return false;
            }
        }

        if (fechaFinal.length > 0) {
            if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                return false;
            }
        }
      
        return true;

    }



  
</script>
}
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Listado Solicitud de Reemplazo de Cargo</h5>
            </div>
           @* <form class="formulario-busqueda">*@
@using (Html.BeginForm("Index", "SolicitudReemplazoCargo", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmBusListaReemplazo", @class = "formulario-busqueda" }))
{
    @Html.ValidationSummary(true)
          <table class="formulario-busqueda">        
                  <tr class="formulario-fila">
                    <td class="span5">

                       

                            <label class="control-label" for="inputSuccess">Cargo</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolReqPersonal.IdeCargo, new SelectList(Model.listaTipCargo, "IdeCargo", "NombreCargo", Model.SolReqPersonal.IdeCargo),new {  data_val = "false"})
                            </div>
                    </td>
                    <td class="span5">
                            <label class="control-label" for="selectError">Fecha Solicitud</label>
                            <div class="controles">
                               
                                <input type="text" class="input-small"  id="SolReqPersonal_FechaInicioBus" name="SolReqPersonal.FechaInicioBus" placeholder=" Inicial" >
                                <input type="text" class="input-small"  id="SolReqPersonal_FechaFinBus" name="SolReqPersonal.FechaFinBus" placeholder=" Final">

                                @*@Html.EditorFor(model => model.SolReqPersonal.FechaInicioBus, new { @class = "textoFormulario" ,  maxlength="15", placeholder=" Inicial"})      
                                @Html.EditorFor(model => model.SolReqPersonal.FechaFinBus, new { @class = "textoFormulario" ,  maxlength="15", placeholder=" Final"})      *@

                            </div>
                     </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Dependencia</label>
                            <div class="controles">
                              
                                @if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(idrol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(idrol))
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia),new {  data_val = "false",disabled="disabled"})
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia),new {  data_val = "false"})
                                }
                            </div>
                        
                    </td>
                 
                    <td class="span5">
                       <label class="control-label" for="inputSuccess">Estado</label>
                        <div class="controles">
                            @Html.DropDownListFor(model => model.SolReqPersonal.TipEstado, new SelectList(Model.listaEstados, "Valor", "Descripcion", Model.SolReqPersonal.TipEstado),new {  data_val = "false"})
                        </div>
                       
                    </td>

                   

                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                       
                        
                            <label class="control-label" for="inputSuccess">Departamento</label>
                            <div class="controles">
                                @if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(idrol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(idrol))
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento),new {  data_val = "false",@disabled="disabled"})
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento),new {  data_val = "false"})
                                }
                                
                            </div>
                        
                    </td>
                      @if (Visualicion.SI.Equals(Model.CampoEtapa))
                    {
                        <td class="span5">
                        
                                <label class="control-label" for="inputSuccess">Etapa</label>
                                <div class="controles">
                                    @if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(idrol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(idrol) || SanPablo.Reclutador.Entity.Roles.Gerente_General_Adjunto.Equals(idrol))
                                    {
                                        @Html.DropDownListFor(model => model.SolReqPersonal.TipEtapa, new SelectList(Model.listaEtapas, "Valor", "Descripcion", Model.SolReqPersonal.TipEtapa),new {  data_val = "false",@disabled="disabled"})
                                    }
                                    else
                                    {
                                      @Html.DropDownListFor(model => model.SolReqPersonal.TipEtapa, new SelectList(Model.listaEtapas, "Valor", "Descripcion", Model.SolReqPersonal.TipEtapa),new {  data_val = "false"})    
                                    }
                                    
                                </div>
                      
                        </td>
                    }
                   
                  
                </tr>
                <tr class="formulario-fila">
                    
                    <td class="span5">
                      
                            <label class="control-label" for="inputSuccess">Área</label>
                            <div class="controles">
                                
                                @if (SanPablo.Reclutador.Entity.Roles.Jefe.Equals(idrol) || SanPablo.Reclutador.Entity.Roles.Gerente.Equals(idrol))
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea),new {  data_val = "false",disabled="disabled"})
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea),new {  data_val = "false"})
                                }

                            </div>
                      
                    </td>
                    
                   
                </tr>
             
             </table>
           
            <div class="formulario-accion offset9">
                <a class="btn btn-info" id="btnBuscarReemplazo"><i class="icon-search icon-white"></i> Buscar</a>
                <button type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
            </div>
    <div>
        &nbsp;
    </div>       
    
            <div class="tabla-datos">
                <table id="grdListBusquedaReemplazo">
                </table>
                
                <div id="grdPagerBusquedaReemplazo">
                </div>
            </div>
           
            <div class="form-actions">
                
                @if (Visualicion.SI.Equals(Model.btnRanking))
                {
                  <a class="btn btn-info" id="btnRankingSol"><i class="icon-eye-open icon-white"></i> Ranking</a>    
                }
                
                @if (Visualicion.SI.Equals(Model.btnPreselec))
                {
                  <a class="btn btn-info" id="btnPreseleccion"><i class="icon-tasks  icon-white"></i> Pre-select</a>    
                }
                
                @if (Visualicion.SI.Equals(Model.btnNuevo))
                {
                  <a class="btn btn-info" href="@Url.Action("CrearReemplazo", "SolicitudCargo")"><i class="icon-plus icon-white"></i> Nuevo</a>    
                }
                
                @if (Visualicion.SI.Equals(Model.btnRequerimiento))
                {
                  <a class="btn btn-info" id ="btnRequerimintoSol"><i class="icon-pencil icon-white"></i> Requerimiento</a>    
                }
                
               @* <button type="reset" class="btn btn-info"><i class="icon-check icon-white"></i> Activar / Desactivar</button>*@
              @*  <a class="btn btn-info" id ="btnEliminar"><i class="icon-remove icon-white"></i> Eliminar</a>*@
            </div>
        }
        </div>
     </div>
</div>
