@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudRempCargoViewModel
@using SanPablo.Reclutador.Entity
@using System.Collections.Generic


@{
    ViewBag.Title = "Listado Solicitudes Ampliacion";
}
@section Head{
}

@section Scripts{

<script type="text/javascript">
    $("#txtfechainicio").datepicker();
    $("#txtfechafin").datepicker();

    $('#btnBuscarReemplazo').click(function () {

        //validacionBuscar();
        $('#grdListBusquedaReemplazo').trigger('reloadGrid');
    });



    $('select#SolReqPersonal_IdeDependencia').change(function () {
        var ideDependencia = $(this).val();
        $("select#SolReqPersonal_IdeArea").empty();
        $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");
        $.ajax({
            type: "POST",
            url: '@Url.Action("listaDepartamentos", "SolicitudCargo", new { area = "Intranet"})',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeDepartamento").empty();
                    $("select#SolReqPersonal_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                );
                }
            });
     })

    $('select#SolReqPersonal_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","SolicitudCargo",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#SolReqPersonal_IdeArea").empty();
                    $("select#SolReqPersonal_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolReqPersonal_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })


    jQuery("#grdListBusquedaReemplazo").jqGrid({
        datatype: function (postdata) {
            var migrilla = new Object();
            migrilla.page = postdata.page;
            migrilla.rows = postdata.rows;
            migrilla.sidx = postdata.sidx;
            migrilla.sord = postdata.sord;
            migrilla._search = postdata.isSearch;
            migrilla.filters = postdata.filters;
            migrilla.Rules = [

                { field: 'idUsuario', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') },
                { field: 'idCargo', data: $("#SolReqPersonal_Idecargo").val() },
                { field: 'idDependencia', data: $("#SolReqPersonal_IdeDependencia").val() },
                { field: 'idArea', data: $("#SolReqPersonal_IdeArea").val() },
                { field: 'tipResp', data: $("#SolReqPersonal_TipResponsable").val() },
                { field: 'fecInicio', data: $("#SolReqPersonal_FechaInicioBus").val() },
                { field: 'fecFin', data: $("#SolReqPersonal_FechaFinBus").val() },
                { field: 'idDepartamento', data: $("#SolReqPersonal_IdeDepartamento").val() },
                { field: 'tipEtapa', data: $("#SolReqPersonal_TipEtapa").val() },
                { field: 'tipEstado', data: $("#SolReqPersonal_TipEstado").val() }

            ];
            if (migrilla._search == true) {
                migrilla.searchField = postdata.searchField;
                migrilla.searchOper = postdata.searchOper;
                migrilla.searchString = postdata.searchString;
            }
            var params = { grid: migrilla };

            $.ajax({
                url: '@Url.Action("ListBusquedaReemplazo", "SolicitudCargo", new { area="Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListBusquedaReemplazo')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
        colNames: ['Estado', '', '', 'Código', '', 'Cargo','', 'Dependencia','', 'Departamento','','Area', 'Num. Vacantes', 'Postulantes.', 'Pre Seleccionados', 'Evaluados', 'Seleccionados', 'Inicio','Cierre', '','Responsable', 'Nom.Responsable', 'Publicado','Etapa'],
        colModel: [
                { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                { name: 'TipEstado', index: 'TipEstado', align: 'center', width: 50, hidden: true },
                { name: 'IdeSolReqPersonal', index: 'IdeSolReqPersonal', align: 'left',hidden:true },
                { name: 'CodSolReqPersonal', index: 'CodSolReqPersonal', align: 'left', width: 200 },
                { name: 'Idecargo', index: 'Idecargo', align: 'left', hidden: true },
                { name: 'DesCargo', index: 'DesCargo', align: 'left', width: 250 },
                { name: 'IdeDependencia', index: 'IdeDependencia', align: 'left', hidden: true },
                { name: 'Dependencia_des', index: 'Dependencia_des', align: 'left', width: 300 },
                { name: 'IdeDepartamento', index: 'IdeDepartamento', align: 'left', hidden: true },
                { name: 'Departamento_des', index: 'Departamento_des', align: 'left', width: 300 },
                { name: 'IdeArea', index: 'IdeArea', align: 'right', hidden: true },
                { name: 'Area_des', index: 'Area_des', align: 'left', width: 300 },

                { name: 'NumVacantes', index: 'NumVacantes', align: 'right', width: 150 },
                { name: 'CantPostulante', index: 'CantPostulante', align: 'right', width: 150 },
                { name: 'CantPreSelec', index: 'CantPreSelec', align: 'right', width: 150 },
                { name: 'CantEvaluados', index: 'CantEvaluados', align: 'left', width: 150 },
                { name: 'CantSeleccionados', index: 'CantSeleccionados', align: 'left', width: 150 },
                { name: 'Feccreacion', index: 'Feccreacion', align: 'left', width: 200 },
                { name: 'FecExpiracacion', index: 'FecExpiracacion', align: 'left', width: 200 },
                { name: 'IdRol', index: 'IdRol', align: 'left', hidden: true },
                { name: 'DesRol', index: 'DesRol', align: 'left', width: 200 },
                { name: 'NomPersonReemplazo', index: 'NomPersonReemplazo', align: 'left', width: 300},
                { name: 'FlagPublicado', index: 'FlagPublicado', align: 'center', width: 200 },
                { name: 'TipEtapa', index: 'TipEtapa', align: 'center', width: 50 }
        ],
        pager: jQuery('#grdPagerBusquedaReemplazo'),
        rowNum: 10,
        //rowList: [10, 30, 50],
        autowidth: true,
        rules: true,
        sortname: 'IdeSolReqPersonal',
        sortorder: 'desc',
        viewrecords: true,
        height: 250,
        cellsubmit: 'clientArray',
        hidegrid: false,
        rownumbers: true,
        shrinkToFit: false,

        postData: {
        },
        loadComplete: function (data) {
        }
    });


    //inicio

    //function validacionBuscar() {
        
    //    var fechaInicial = $("#SolReqPersonal_FechaInicioBus").val()
    //    var fechaFinal = $("#SolReqPersonal_FechaFinBus").val()

    //    if (fechaInicial.length > 0 && fechaFinal.length) {



    //    }


    //}

    //Fin


    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }

    function HabilitarFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'enabled.png';
        var title = "Habilitar"
        if (rowObject[14] == "Activo") {
            archivo = 'enabled.png';
            var title = "Habilitar"
        } else {
            archivo = 'enabled.png';
            var title = "Habilitar"
        }

        var strImg = '<img src="' + imgPath + archivo + '" title="' + title + '" alt="' + title + '">';
        return strImg;
    }


    @*//-----------grilla anidada
    jQuery("#sg2").jqGrid({
        url: '@Url.Action("ListaSolicitudAmpliacion", "SolicitudCargo")',
        datatype: "xml",
        height: 190,
        colNames: [ 'Cargo', 'Dependencia', 'Departamento', 'Área', 'Vacan.', 'Postu.', 'Pre-Sel.', 'Eval.', 'Selec.', 'Inicio', 'Cierre', 'Responsable', 'Nom.Responsable', 'Etapa', 'Estado'],
        colModel: [
                { name: 'HabilitaDeshabilita', index: 'HabilitaDeshabilita', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                { name: 'Cargo', index: 'Cargo', align: 'left' },
                { name: 'Dependencia', index: 'Dependencia', align: 'left', width: 160 },
                { name: 'Departamento', index: 'Departamento', align: 'left', width: 100 },
                { name: 'Area', index: 'Area', align: 'left', width: 100 },
                { name: 'Vacantes', index: 'Vacantes', align: 'right', width: 60 },
                { name: 'Postulantes', index: 'Postulantes', align: 'right', width: 60 },
                { name: 'PreSeleccionados', index: 'PreSeleccionados', align: 'right', width: 60 },
                { name: 'Evaluados', index: 'Evaluados', align: 'right', width: 60 },
                { name: 'Seleccionados', index: 'Seleccionados', align: 'right', width: 60 },
                { name: 'Inicio', index: 'Inicio', align: 'left', width: 50 },
                { name: 'Cierre', index: 'Cierre', align: 'left', width: 50 },
                { name: 'Responsable', index: 'Responsable', align: 'left', width: 50 },
                { name: 'NombreResponsable', index: 'NombreResponsable', align: 'left', width: 150 },
                { name: 'Etapa', index: 'Etapa', align: 'center', width: 50 }
        ],
        rowNum: 8,
        rowList: [8, 10, 20, 30],
        pager: '#psg2',
        sortname: 'id',
        viewrecords: true,
        sortorder: "desc",
        multiselect: false,
        subGrid: true,
        caption: "Custom Icons in Subgrid",
        // define the icons in subgrid
        subGridOptions: {
            "plusicon": "ui-icon-triangle-1-e",
            "minusicon": "ui-icon-triangle-1-s",
            "openicon": "ui-icon-arrowreturn-1-e",
            //expand all rows on load
            "expandOnLoad": true
        },
        subGridRowExpanded: function (subgrid_id, row_id) {
            var subgrid_table_id, pager_id;
            subgrid_table_id = subgrid_id + "_t";
            pager_id = "p_" + subgrid_table_id;
            $("#" + subgrid_id).html("<table id='" + subgrid_table_id + "' class='scroll'></table><div id='" + pager_id + "' class='scroll'></div>");
            jQuery("#" + subgrid_table_id).jqGrid({
                //url: "subgrid.php?q=2&id=" + row_id,
                datatype: "xml",
                colNames: ['Código', 'Cargo', 'Dependencia', 'Departamento', 'Área', 'Vacan.', 'Postu.', 'Pre-Sel.', 'Eval.', 'Selec.', 'Inicio', 'Cierre', 'Responsable', 'Nom.Responsable', 'Publicado', 'Etapa', 'Estado'],
                colModel: [
                        { name: 'HabilitaDeshabilita', index: 'HabilitaDeshabilita', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                        { name: 'Codigo', index: 'Codigo', align: 'center', width: 50 },
                        { name: 'Cargo', index: 'Cargo', align: 'left' },
                        { name: 'Dependencia', index: 'Dependencia', align: 'left', width: 160 },
                        { name: 'Departamento', index: 'Departamento', align: 'left', width: 100 },
                        { name: 'Area', index: 'Area', align: 'left', width: 100 },
                        { name: 'Vacantes', index: 'Vacantes', align: 'right', width: 60 },
                        { name: 'Postulantes', index: 'Postulantes', align: 'right', width: 60 },
                        { name: 'PreSeleccionados', index: 'PreSeleccionados', align: 'right', width: 60 },
                        { name: 'Evaluados', index: 'Evaluados', align: 'right', width: 60 },
                        { name: 'Seleccionados', index: 'Seleccionados', align: 'right', width: 60 },
                        { name: 'Inicio', index: 'Inicio', align: 'left', width: 50 },
                        { name: 'Cierre', index: 'Cierre', align: 'left', width: 50 },
                        { name: 'Responsable', index: 'Responsable', align: 'left', width: 50 },
                        { name: 'NombreResponsable', index: 'NombreResponsable', align: 'left', width: 150 },
                        { name: 'Publicado', index: 'Publicado', align: 'left', width: 50 },
                        { name: 'Etapa', index: 'Etapa', align: 'center', width: 50 }
                ],
                rowNum: 20,
                pager: pager_id,
                sortname: 'num',
                sortorder: "asc",
                height: '100%'
            });
            jQuery("#" + subgrid_table_id).jqGrid('navGrid', "#" + pager_id, { edit: false, add: false, del: false })
        }
    });
    jQuery("#sg2").jqGrid('navGrid', '#psg2', { add: false, edit: false, del: false });*@

    //------------fin de grilla anidada
</script>
}
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Listado Solicitud de Reemplazo de Cargo</h5>
            </div>
           @* <form class="formulario-busqueda">*@
@using (Html.BeginForm("Index", "SolicitudReemplazoCargo", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmBusListaReemplazo", @class = "formulario-busqueda" }))
{
    @Html.ValidationSummary(true)
          <table class="formulario-busqueda">        
                  <tr class="formulario-fila">
                    <td class="span5">

                       

                            <label class="control-label" for="inputSuccess">Cargo</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolReqPersonal.IdeCargo, new SelectList(Model.listaTipCargo, "IdeCargo", "NombreCargo", Model.SolReqPersonal.IdeCargo),new {  data_val = "false"})
                            </div>
                    </td>
                    <td class="span5">
                            <label class="control-label" for="selectError">Fecha Solicitud</label>
                            <div class="controles">
                                @*<input id="txtfechainicio" type="text" class="input-small" placeholder=" Inicial"/>
                                <input id="txtfechafin" type="text" class="input-small" placeholder=" Final"/>*@

                                @Html.EditorFor(model => model.SolReqPersonal.FechaInicioBus, new { @class = "textoFormulario" ,  maxlength="15", placeholder=" Inicial"})      
                                @Html.EditorFor(model => model.SolReqPersonal.FechaFinBus, new { @class = "textoFormulario" ,  maxlength="15", placeholder=" Final"})      



                            </div>
                     </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Dependencia</label>
                            <div class="controles">
                              @Html.DropDownListFor(model => model.SolReqPersonal.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolReqPersonal.IdeDependencia),new {  data_val = "false"})
                            </div>
                        
                    </td>
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Departamento</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolReqPersonal.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolReqPersonal.IdeDepartamento),new {  data_val = "false"})
                            </div>
                        
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                      
                            <label class="control-label" for="inputSuccess">Área</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolReqPersonal.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolReqPersonal.IdeArea),new {  data_val = "false"})
                            </div>
                      
                    </td>
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Etapa</label>
                            <div class="controles">
                                 @Html.DropDownListFor(model => model.SolReqPersonal.TipEtapa, new SelectList(Model.listaEtapas, "Valor", "Descripcion", Model.SolReqPersonal.TipEtapa),new {  data_val = "false"})
                            </div>
                      
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Responsable</label>
                            <div class="controles">
                                
                                 @Html.DropDownListFor(model => model.SolReqPersonal.TipResponsable, new SelectList(Model.listaRol, "IdRol", "CodRol", Model.SolReqPersonal.TipResponsable), new {  data_val = "false"})     
                            </div>
                       
                    </td>                    
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Estado</label>
                            <div class="controles">
                               @Html.DropDownListFor(model => model.SolReqPersonal.TipEstado, new SelectList(Model.listaEstados, "Valor", "Descripcion", Model.SolReqPersonal.TipEstado),new {  data_val = "false"})
                            </div>
                       
                    </td>
                </tr>
             
             </table>
           
            <div class="formulario-accion offset9">
                <a class="btn btn-info" id="btnBuscarReemplazo"><i class="icon-search icon-white"></i> Buscar</a>
                <button type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
            </div>
    <div>
        &nbsp;
    </div>       
    
            <div class="tabla-datos">
                <table id="grdListBusquedaReemplazo">
                </table>
                
                <div id="grdPagerBusquedaReemplazo">
                </div>
            </div>
            <div>
                <h5>GRILLA ANIDADA</h5>
                <table id="sg1"></table>
                <div id="psg1"></div>
            </div>
            <div class="form-actions">
                <a class="btn btn-info" href="@Url.Action("PostulantesPorRequerimiento", "SolicitudCargo")"><i class="icon-eye-open icon-white"></i> Ranking</a>
                <a class="btn btn-info" href="@Url.Action("PostulantesPreSeleccionados", "SolicitudCargo")"><i class="icon-tasks  icon-white"></i> Pre-select</a>
                <a class="btn btn-info" href="@Url.Action("CrearReemplazo", "SolicitudCargo")"><i class="icon-zoom-in icon-white"></i> Consultar</a>
                <a class="btn btn-info" href="@Url.Action("CrearReemplazo", "SolicitudCargo")"><i class="icon-plus icon-white"></i> Nuevo</a>
                <a class="btn btn-info" href="@Url.Action("CrearReemplazo", "SolicitudCargo")"><i class="icon-pencil icon-white"></i> Editar</a>
                <button type="reset" class="btn btn-info"><i class="icon-check icon-white"></i> Activar / Desactivar</button>
                <button type="submit" class="btn btn-danger"><i class="icon-remove icon-white"></i> Eliminar</button>
            </div>
        }
        </div>
     </div>
</div>
