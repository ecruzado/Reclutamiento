@model SanPablo.Reclutador.Web.Areas.Intranet.Models.CategoriaViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado Categorias";
}



@section Head{
}

@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        var flag = 0;
        var flag2 = 0;

        var dlgsubirarchivoimagen = $("#dlgsubirarchivoimagen").dialog(
          {
              autoOpen: false,
              modal: true,
              title: "Cargar Imagen",
              width: 500,
              height: 240,
              buttons: {
                  "Subir": function () {
                      //Guardar();
                      return true;
                  },
                  "Cancelar": function () {
                      $(this).dialog("close");
                      return false;
                  }
              }
          });



        $("#spanEliminar").html("¿Desea Eliminar la Subcategoria?")
        $('#divEliminar').dialogo({
            buttons: {
                "Si": function () {
                    var codCategoria = $("#Categoria_IDECATEGORIA").val();
                    var selr = $('#grdList').jqGrid('getGridParam', 'selrow');
                   
                    if (selr != null) {
                        EliminarSubCategoria(codCategoria, selr);
                    } else {
                        MostrarMensaje('Seleccione una subCategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });



        $("#spanEliminarSubCrit").html("¿Desea Eliminar el Criterio?")
        $('#divEliminarSubCrit').dialogo({
            buttons: {
                "Si": function () {
                    //var codCategoria = $("#Categoria_IDECATEGORIA").val();
                    //EliminarCritxSub
                    var selsub = $('#grdList').jqGrid('getGridParam', 'selrow');
                    var selCritxSub = $('#grdListCriterio').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selCritxSub);
                    if (rowData.CodigoCrit != null && selsub != null) {
                        EliminarCritxSub(selsub, rowData.CodigoCrit);
                    } else {
                        MostrarMensaje('Seleccione una subCategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#btnAgregarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            
            if (codigoCategoria != null && codigoCategoria > 0) {
                mostrarAgregar(codigoCategoria, 0);
            } else {
                MostrarMensaje('Ingrese una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                
            }
        });


        $('#btnEditarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            if (selr != null && selr > 0) {
                mostrarEditarSub(codigoCategoria, selr);
            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });





        $('#btnSubirSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var gridArr = $('#grdList').getDataIDs();

            if (selr != null && selr > 0) {
                
                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selr,
                        accion: "Subir",

                    },
                    type: "POST",
                    url: "/Intranet/Categoria/OrdenarSubCategorias",
                    traditional: true,
                    success: function () {
                        flag = selr;
                        $('#grdList').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });



        $('#btnBajarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var gridArr = $('#grdList').getDataIDs();

            if (selr != null && selr > 0) {
                

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selr,
                        accion: "Bajar",
                    },
                    type: "POST",
                    url: "/Intranet/Categoria/OrdenarSubCategorias",
                    traditional: true,
                    success: function (data) {
                      
                        flag = selr;
                        
                        $('#grdList').trigger('reloadGrid');
                       
                    }
                });

            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });


        $('#btnSubirCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selrSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
            var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);
          

            if (rowData.CodigoCrit != null && rowData.CodigoCrit > 0) {

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selrSub,
                        ideCriterio: rowData.CodigoCrit,
                        accion: "Subir",

                    },
                    type: "POST",
                    url: "/Intranet/Categoria/OrdenarCriterios",
                    traditional: true,
                    success: function (data) {
                        flag2 = selr;
                       
                        $('#grdListCriterio').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });

        
        $('#btnBajarCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selrSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');

            var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
            var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);


            if (rowData.CodigoCrit != null && rowData.CodigoCrit > 0) {

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selrSub,
                        ideCriterio: rowData.CodigoCrit,
                        accion: "Bajar",

                    },
                    type: "POST",
                    url: "/Intranet/Categoria/OrdenarCriterios",
                    traditional: true,
                    success: function (data) {
                        flag2 = selr;
                        
                        $('#grdListCriterio').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });




        $('#btnAgregarCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var codigoSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            if (codigoCategoria == null && codigoCategoria <= 0) {
                MostrarMensaje('Ingrese una categorría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }

            if (codigoSub == null) {
                MostrarMensaje('Seleccione una subcategoría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }

            if (codigoSub <= 0) {
                MostrarMensaje('Seleccione una subcategoría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }
            

            mostrarCriterios(codigoCategoria, codigoSub);

        });
        





        $('#updateDialog').dialog({
            autoOpen: false,
            width: 600,
            height: 300,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    $.post("/Intranet/Categoria/PopupSubCategoria",
                    $("#frmPopupSubCategoria").serialize(),
                        function (data) {
                            $("#updateDialog").html(data);
                            $('#grdList').trigger('reloadGrid');
                           
                        }
                    );

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#criterioDialog').dialog({
            autoOpen: false,
            width: 850,
            height: 700,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    $.ajax({
                        data: {
                            test: $("#grdListCriterios").jqGrid('getGridParam', 'selarrrow'),
                            subCategoria: $('#CriterioPorSubcategoria_IDESUBCATEGORIA').val()
                            
                        },
                        type: "POST",
                        url: "/Intranet/Criterio/GetListaCriterio",
                        traditional: true,
                        success: function(){
                           // $(this).dialog("close");
                             $('#grdListCriterio').trigger('reloadGrid');
                            
                           
                        }
                    });

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        jQuery("#grdList").jqGrid({
            url: '@Url.Action("ListaSubCategoria", "Categoria")' + '?idCategoria=' + $("#Categoria_IDECATEGORIA").val(),
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Codigo','Estado','Nombre', 'Descripci&oacuten', 'Orden de impresión', 'Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [

                    { name: 'IDESUBCATEGORIA', index: 'IDESUBCATEGORIA', align: 'center', sortable: false, hidden: true, width: 10 },
                    { name: 'ESTACTIVO', index: 'ESTACTIVO', align: 'center', sortable: false ,width: 100},
                    { name: 'NOMSUBCATEGORIA', index: 'NOMSUBCATEGORIA', align: 'center', sortable: false, width: 200 },
                    { name: 'DESCSUBCATEGORIA', index: 'DESCSUBCATEGORIA', align: 'left', sortable: false, width: 300 },
                    { name: 'ORDENIMPRESION', index: 'ORDENIMPRESION', align: 'left', sortable: false, width: 150 },
                    { name: 'FECCREACION', index: 'FECCREACION', align: 'left', sortable: false , width: 110},
                    { name: 'USRCREACION', index: 'USRCREACION', align: 'left', sortable: false, width: 180 },
                    { name: 'FECMODIFICACION', index: 'FECMODIFICACION', align: 'left', sortable: false, width: 130 },
                    { name: 'USRMODIFICACION', index: 'USRMODIFICACION', align: 'left', sortable: false, width: 180 }
            ],
            pager: jQuery('#grdPager'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            sortname: 'ORDENIMPRESION',
            sortorder: 'desc',
            viewrecords: true,
            height: 120,
            width: 736,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: false,
            shrinkToFit: false,
            onSelectRow: function (rowid, status) {
                if (rowid != null) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);
                    $('#grdListCriterio').trigger('reloadGrid');
                    $('#grdListCriterioxAlternativa').trigger('reloadGrid');
                }
            },

            postData: {

            },
            loadComplete: function (data) {
               // $("#grdList").setSelection($("#grdList").getDataIDs()[0], true);
                // $("#grdList").jqGrid('resetSelection');
                if (flag == 0) {
                    $("#grdList").setSelection($("#grdList").getDataIDs()[0], true);
                    
                } else {
                    $('#grdList').resetSelection().setSelection(flag, true);

                }
               // $("#grdListCriterio").trigger('reloadGrid');
                $('#grdListCriterio').trigger('reloadGrid');
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');
                
               
            }
        });

        //$("#Categoria_TEXTOEJEMPLO").hide();
        
        var dato = '@Session["Tipo"]';
        if (dato == 1) {
            $("#ejemplo").hide();
            $("#Categoria_TEXTOEJEMPLO").hide();
            $("#image").hide();
        }
        if (dato == "I") {
            $("#ejemplo").show();
            $("#Categoria_TEXTOEJEMPLO").hide();
            $("#image").show();
        }
        if (dato == "T") {
            $("#ejemplo").show();
            $("#Categoria_TEXTOEJEMPLO").show();
            $("#image").hide();
        }

       

        $("#Categoria_TIPOEJEMPLO").change(function () {
            var vvalor = $(this).val();

            if (vvalor == "01") {
                $("#ejemplo").show();
                $("#Categoria_TEXTOEJEMPLO").show();
                $("#image").hide();
            }
            else if (vvalor == "02") {
                $("#ejemplo").show();
                $("#Categoria_TEXTOEJEMPLO").hide();
                $("#image").show();
            }
            else {
                $("#ejemplo").hide();
                $("#Categoria_TEXTOEJEMPLO").hide();
                $("#image").hide();
            }
        });

        jQuery("#grdListCriterio").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                    { field: 'IdeSubCategoria', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListaCriterioxSub", "Categoria")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListCriterio')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['','','', 'Pregunta', 'Ptje.Max', 'Orden de impresión', 'Calificaci&oacute;n'],
            colModel: [
                    { name: 'Codigo', index: 'Codigo', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'CodigoSub', index: 'CodigoSub', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'CodigoCrit', index: 'CodigoCrit', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'Pregunta', index: 'Pregunta', align: 'left', sortable: false, width: 400 },
                    { name: 'PtjeMax', index: 'PtjeMax', align: 'left', width: 100, sortable: false },
                    { name: 'Prioridad', index: 'Prioridad', align: 'left', width: 180, sortable: false },
                    { name: 'Calificacion', index: 'Calificacion', align: 'center', width: 150, sortable: false },
            ],
            pager: jQuery('#grdPagerCriterio'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'PRIORIDAD',
            sortorder: 'desc',
            viewrecords: true,
            height: 120,
            width: 736,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,
            onSelectRow: function (rowid, status) {
                if (rowid != null) {
                    $('#grdListCriterioxAlternativa').trigger('reloadGrid');
                }
                
            },
            postData: {
            },loadComplete: function (data) {
               
                if (flag2 == 0) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);

                } else {
                    $('#grdListCriterio').resetSelection().setSelection(flag2, true);

                }
               
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');
            },
            gridComplete: function () {
               
                if (flag2 == 0) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);

                } else {
                    $('#grdListCriterio').resetSelection().setSelection(flag2, true);
                   
                }
               // $("#grdListCriterioxAlternativa tr").eq(1).trigger("click");
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');
            }
        });


      

        jQuery("#grdListCriterioxAlternativa").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
                var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;

                migrilla.Rules = [
                    { field: 'IdeCriterio', data: rowData.CodigoCrit }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListCriterioxAlternativa", "Categoria")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListCriterioxAlternativa')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['', 'Alternativa', 'Peso', 'Imagen'],
            colModel: [

                    { name: 'IdeAlternativa', index: 'IdeAlternativa', align: 'left', width: 10, editable: false, sortable: false, hidden: true },
                    { name: 'NombreAlternativa', index: 'NombreAlternativa', align: 'left', width: 600, editable: false, sortable: false },
                    { name: 'Peso', index: 'Peso', align: 'left', sortable: false, width: 50, editable: false },
                    { name: 'RutaDeImagen', index: 'RutaDeImagen', align: 'center', sortable: false, width: 300, editable: false, formatter: ImagenFormatter },
            ],
             pager: jQuery('#grdPagerAlternativa'),
             rowNum: 10,
             rowList: [10, 30, 50],
             autowidth: true,
             rules: true,
             sortname: 'IdeAlternativa',
             sortorder: 'desc',
             viewrecords: true,
             height: 120,
             width: 736,
             cellsubmit: 'clientArray',
             hidegrid: false,
             rownumbers: true,
             shrinkToFit: false,
            
             postData: {

             }, loadComplete: function (data) {
             }
         });


    
    }); // Fin

    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }


    function ImagenFormatter(cellvalue, options, rowObject) {

        var strboton = '<input type="button" value="Imagen.." onclick="mostrarsubirarchivoimagen();" class="btn btn-mini" />';
        return strboton;

    }
    function mostrarsubirarchivoimagen() {
        $("#dlgsubirarchivoimagen").dialog('open');
    }

    function HabilitarFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'enabled.png';
        var title = "Habilitar"
        if (rowObject[14] == "Activo") {
            archivo = 'enabled.png';
            var title = "Habilitar"
        } else {
            archivo = 'enabled.png';
            var title = "Habilitar"
        }

        var strImg = '<img src="' + imgPath + archivo + '" title="' + title + '" alt="' + title + '">';
        return strImg;
    }


    function EliminarSubCategoria(idCategoria, idSubCategoria) {
      
        $.ajax({
            data: { id: idCategoria,
                    codSub: idSubCategoria
                  },
            type: "POST",
            url: "@Url.Action("EliminarSubCategoria", "Categoria")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    $('#grdList').trigger('reloadGrid');
                }
            }
        });


        
    }
 


    function EliminarCritxSub(idSubCategoria, idCriterio) {
        
        $.ajax({
            data: {
                id: idCriterio,
                codSub: idSubCategoria
            },
            type: "POST",
            url: "@Url.Action("EliminarCritxSub", "Categoria")",
            traditional: true,
            success: function (data) {
                if (data.Resultado) {

                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdListCriterio').trigger('reloadGrid');


                }
            }
        });



    }

    function mostrarAgregar(id, idSubCategoria) {
        var dialogDiv = $('#updateDialog');
        $.get("/Intranet/Categoria/PopupSubCategoria/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#updateDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }

    function mostrarEditarSub(id, idSubCategoria) {
        var dialogDiv = $('#updateDialog');
        $.get("/Intranet/Categoria/PopupSubCategoria/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#updateDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }
    


    function mostrarCriterios(id, idSubCategoria) {
        var dialogDiv = $('#criterioDialog');
        $.get("/Intranet/Criterio/PopupListaCriterio/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#criterioDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }
   
    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }



</script>
}

@using (Html.BeginForm("Edit", "Categoria", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCategoria" }))
{
    @Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Categoría</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                </div>
            </div>
            <table class="formulario-busqueda">
            
                <tr class="formulario-fila">
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Categoría</label>
                            <div class="controles">
                              <input id="Categoria_IDECATEGORIA" name="Categoria.IDECATEGORIA" type="text" value="@Model.Categoria.IDECATEGORIA" readonly="readonly"> 
                              
                            </div>
                       
                    </td>
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Nombre</label>
                            <div class="controles">
                                
                                @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                                  @Html.TextBoxFor(model => model.Categoria.NOMCATEGORIA, new { @class = "textoFormulario", @maxlength = "10" }) 
                                }
                                else
                                {
                                  @Html.TextBoxFor(model => model.Categoria.NOMCATEGORIA, new { @class = "textoFormulario", @maxlength = "10" , @readonly = "readonly"})    
                                }
                                
                                <div class="tex-error" style="font-size:12px;color:red">    
                                @Html.ValidationMessageFor(model => model.Categoria.NOMCATEGORIA)
                                </div>
                           </div>
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Descripción</label>
                            <div class="controles">
                                
                                @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                                  @Html.TextBoxFor(model => model.Categoria.DESCCATEGORIA, new { @class = "textoFormulario", @maxlength = "255" }) 
                                }else{
                                  @Html.TextBoxFor(model => model.Categoria.DESCCATEGORIA, new { @class = "textoFormulario", @maxlength = "255" ,@readonly = "readonly" }) 
                                }
                                
                                 <div class="tex-error" style="font-size:12px;color:red"> 
                                @Html.ValidationMessageFor(model => model.Categoria.DESCCATEGORIA)
                                 </div>
                            </div>
                        
                    </td>
                   
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Tipo</label>
                            <div class="controles">
                                 @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                                  @Html.DropDownListFor(model => model.Categoria.TIPCATEGORIA, new SelectList(Model.TipoCategoria, "Valor", "Descripcion", Model.Categoria.TIPCATEGORIA)) 
                                 }
                                 else
                                 {
                                  @Html.DropDownListFor(model => model.Categoria.TIPCATEGORIA, new SelectList(Model.TipoCategoria, "Valor", "Descripcion", Model.Categoria.TIPCATEGORIA),new {disabled = "disabled"})       
                                 }
                                <div class="tex-error" style="font-size:12px;color:red"> 
                                @Html.ValidationMessageFor(model => model.Categoria.TIPCATEGORIA)
                                </div>
                            </div>
                        
                    </td>
                   
                </tr>

                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Tipo Ejemplo </label>
                            <div class="controles">
                               
                                 @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                                   @Html.DropDownListFor(model => model.Categoria.TIPOEJEMPLO, new SelectList(Model.TipoEjemplo, "Valor", "Descripcion", Model.Categoria.TIPOEJEMPLO)) 
                                 }
                                 else{
                                   @Html.DropDownListFor(model => model.Categoria.TIPOEJEMPLO, new SelectList(Model.TipoEjemplo, "Valor", "Descripcion", Model.Categoria.TIPOEJEMPLO), new { disabled = "disabled"}) 
                                 } 
                                     <div class="tex-error" style="font-size:12px;color:red"> 
                                @Html.ValidationMessageFor(model => model.Categoria.TIPOEJEMPLO)
                                </div>
                            </div>
                        
                    </td>
                   
                    <td class="span5">
                            
                            <label class="control-label" for="inputSuccess" id="ejemplo">Ejemplo</label>
                            <div class="controles">
                                
                                @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                                  @Html.TextBoxFor(model => model.Categoria.TEXTOEJEMPLO, new { @class = "textoFormulario", @maxlength = "150" }) 
                                  @Html.TextBoxFor(model => model.image, new { type = "file", accept = "image/*" })
                                }
                                else
                                {
                                  @Html.TextBoxFor(model => model.Categoria.TEXTOEJEMPLO, new { @class = "textoFormulario", @maxlength = "150", @readonly = "readonly"}) 
                                  @Html.TextBoxFor(model => model.image, new { type = "file", accept = "image/*", @readonly = "readonly" })
                                }    
                               
                                <div class="tex-error" style="font-size:12px;color:red"> 

                              @if ("01".Equals(Model.Categoria.TIPOEJEMPLO))
                                {
                                 @Html.ValidationMessageFor(model => model.Categoria.TEXTOEJEMPLO)
                                }
                                else
                                {
                                <span></span>
                                }
                                 </div>
                            </div>

                        
                    </td>

                </tr>
                <tr class="formulario-fila">
                    <td class="span12" >
                    <label class="control-label" for="inputSuccess" id="lblInstrucciones">Insruccciones</label>
                    <div class="controles">
                         
                        @if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                          @Html.TextAreaFor(model => model.Categoria.INSTRUCCIONES, new { rows = 4, cols = 10 , style="margin: 0px 0px 10px; width: 598px; height: 70px;",maxlength="255"}) 
                        }
                        else
                        {
                          @Html.TextAreaFor(model => model.Categoria.INSTRUCCIONES, new { rows = 4, cols = 10 , style="margin: 0px 0px 10px; width: 598px; height: 70px;",maxlength="255",@readonly = "readonly"}) 
                        }
                         <div class="tex-error" style="font-size:12px;color:red">  
                         @Html.ValidationMessageFor(model => model.Categoria.INSTRUCCIONES)
                         </div>
                    </div>
                    </td>
                </tr>

            </table>



            @if (Grilla.Tabla1.Equals(Session["Tabla1"]))
            {
                if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                    <div class="grilla-opciones">
                        <h6>Subcategorías</h6>
                        <div class="opciones">
                            <a id="btnAgregarSubCategoria" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a id="btnEditarSubCategoria"  class ="btn btn-small btn-info" title="Editar"><i class="icon-edit icon-white"></i></a>
                            <a id="btnSubirSubCategoria" class="btn btn-small btn-info" title="Subir"><i class="icon-arrow-up icon-white"></i></a>
                            <a id="btnBajarSubCategoria" class ="btn btn-small btn-info" title="Bajar"><i class=" icon-arrow-down icon-white"></i></a>
                            <a id="btnEliminaSubCategoria" class="btn btn-small btn-info" title="Eliminar" onclick="$('#divEliminar').dialog('open'); return false;"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                        <div style="clear:both"></div>
                    </div>
                }   
                    <div class="grilla-opciones">
                    </div>
                     <div class="tabla-datos">
                        <table id="grdList">
                        </table>
                        <div id="grdPager">
                        </div>
                    </div>
               
            } 
            @if (Grilla.Tabla2.Equals(Session["Tabla2"]))
            {  
            
                if(!Accion.Consultar.Equals(Session["AccionCategoria"])){
                    <div class="grilla-opciones">
                    <h6>Criterio</h6>
                        <div class="opciones">
                            <a id="btnAgregarCriterio" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a id="btnSubirCriterio"  class ="btn btn-small btn-info" title="Subir"><i class="icon-arrow-up icon-white"></i></a>
                            <a id="btnBajarCriterio" class ="btn btn-small btn-info" title="Bajar"><i class=" icon-arrow-down icon-white"></i></a>
                            <a id="btnEliminarCrit" onclick="$('#divEliminarSubCrit').dialog('open'); return false;"  class="btn btn-small btn-info" title="Eliminar"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                    <div style="clear:both"></div>
                    </div>
                }
            <div class="grilla-opciones">
            </div>  
            <div class="tabla-datos">
                <table id="grdListCriterio">
                </table>
                <div id="grdPagerCriterio">
                </div>
            </div>
           
            
             <div class="grilla-opciones">
                <h6>Alternativas</h6>
                <div class="opciones">
                </div>
                <div style="clear:both"></div>
            </div>
            <div class="tabla-datos">
                <table id="grdListCriterioxAlternativa">
                </table>
                <div id="grdPagerAlternativa"></div>

            </div>
            }
            
            <div class="form-actions">
                <a class="btn" href="@Url.Action("Index", "Categoria", new { area = "Intranet" })"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                <button  type="submit" id="btnGuardar" class="btn btn-info"><i class=" icon-hdd icon-white"></i> Grabar</button>
            </div>
        </div>
    </div>
</div>
   
}
<div id="updateDialog" title="Agregar SubCategoria"></div>
<div id="criterioDialog" title="Buscar Criterio"></div>
<div id="divEliminar"><span id="spanEliminar"></span></div>
<div id="divEliminarSubCrit"><span id="spanEliminarSubCrit"></span></div>



<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>
<div id="confirmacion"><span id="spanConfirmacion"></span></div>
<div id="dlgsubirarchivoimagen">
    <table style="width: 100%">      
        <tr>
            <td style="height: 30px; vertical-align: central;">Sólo se permiten archivos con extensión JPG, GIF. Tamaño máximo del archivo 1MB. El archivo debe tener 32px de ancho y 32 px de Largo</td>
        </tr>
          <tr>
            <td style="height: 10px;"></td>
        </tr> 
        <tr>
            <td>
             <input class="input-file" id="fileInput" type="file"></td>
        </tr>
        <tr>
            <td style="height: 10px;"></td>
        </tr>       
    </table>
</div>

