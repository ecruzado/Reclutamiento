@model SanPablo.Reclutador.Web.Areas.Intranet.Models.CategoriaViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado Categorias";
}



@section Head{
     <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/swfobject.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.v2.1.4.js")" type="text/javascript"></script>

<script type="text/javascript">


    $(document).ready(function () {

        

        $("#imgCategoria")
	        .css({
	            height: "150px",
	            width: "150px"

	        });


        var flag = 0;
        var flag2 = 0;

        var dlgsubirarchivoimagen = $("#dlgsubirarchivoimagen").dialog(
          {
              autoOpen: false,
              modal: true,
              title: "Cargar Imagen",
              width: 500,
              height: 240,
              buttons: {
                  "Subir": function () {
                      
                      return true;
                  },
                  "Cancelar": function () {
                      $(this).dialog("close");
                      return false;
                  }
              }
          });



        $("#spanEliminar").html("¿Desea Eliminar la Subcategoria?")
        $('#divEliminar').dialogo({
            buttons: {
                "Si": function () {
                    var codCategoria = $("#Categoria_IDECATEGORIA").val();
                    var selr = $('#grdList').jqGrid('getGridParam', 'selrow');
                   
                    if (selr != null) {
                        EliminarSubCategoria(codCategoria, selr);
                    } else {
                        MostrarMensaje('Seleccione una subCategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });



        $("#spanEliminarSubCrit").html("¿Desea Eliminar el Criterio?")
        $('#divEliminarSubCrit').dialogo({
            buttons: {
                "Si": function () {
                    
                    var selsub = $('#grdList').jqGrid('getGridParam', 'selrow');
                    var selCritxSub = $('#grdListCriterio').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selCritxSub);
                    if (rowData.CodigoCrit != null && selsub != null) {
                        EliminarCritxSub(selsub, rowData.CodigoCrit);
                    } else {
                        MostrarMensaje('Seleccione una subCategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#btnAgregarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            
            if (codigoCategoria != null && codigoCategoria > 0) {
                mostrarAgregar(codigoCategoria, 0);
            } else {
                MostrarMensaje('Ingrese una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                
            }
        });


        $('#btnEditarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            if (selr != null && selr > 0) {
                mostrarEditarSub(codigoCategoria, selr);
            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });





        $('#btnBajarSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var gridArr = $('#grdList').getDataIDs();

            if (selr != null && selr > 0) {
                
                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selr,
                        accion: "Subir",

                    },
                    type: "POST",
                    url: '@Url.Action("OrdenarSubCategorias", "Categoria", new { area="Intranet"})',
                    
                    traditional: true,
                    success: function () {
                        flag = selr;
                        $('#grdList').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });
        


        $('#btnSubirSubCategoria').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var gridArr = $('#grdList').getDataIDs();

            if (selr != null && selr > 0) {
                

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selr,
                        accion: "Bajar",
                    },
                    type: "POST",
                   
                    url: '@Url.Action("OrdenarSubCategorias", "Categoria", new { area="Intranet"})',
                    traditional: true,
                    success: function (data) {
                      
                        flag = selr;
                        
                        $('#grdList').trigger('reloadGrid');
                       
                    }
                });

            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });


        $('#btnBajarCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selrSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
            var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);
          

            if (rowData.CodigoCrit != null && rowData.CodigoCrit > 0) {

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selrSub,
                        ideCriterio: rowData.CodigoCrit,
                        accion: "Subir",

                    },
                    type: "POST",
                   

                    url: '@Url.Action("OrdenarCriterios", "Categoria", new { area="Intranet"})',
                    traditional: true,
                    success: function (data) {
                        flag2 = selr;
                       
                        $('#grdListCriterio').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });
        
        
        $('#btnSubirCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var selrSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');

            var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
            var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);


            if (rowData.CodigoCrit != null && rowData.CodigoCrit > 0) {

                $.ajax({
                    data: {
                        ideCategoria: codigoCategoria,
                        ideSubcategoria: selrSub,
                        ideCriterio: rowData.CodigoCrit,
                        accion: "Bajar",

                    },
                    type: "POST",
                    url: '@Url.Action("OrdenarCriterios", "Categoria", new { area="Intranet"})',
                    //url: "/Intranet/Categoria/OrdenarCriterios",
                    traditional: true,
                    success: function (data) {
                        flag2 = selr;
                        
                        $('#grdListCriterio').trigger('reloadGrid');
                    }
                });


            } else {
                MostrarMensaje('Seleccione una subcategoria', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });




        $('#btnAgregarCriterio').click(function () {
            var codigoCategoria = $("#Categoria_IDECATEGORIA").val();
            var codigoSub = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            
            if (codigoCategoria == null && codigoCategoria <= 0) {
                MostrarMensaje('Ingrese una categorría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }

            if (codigoSub == null) {
                MostrarMensaje('Seleccione una subcategoría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }

            if (codigoSub <= 0) {
                MostrarMensaje('Seleccione una subcategoría', "Sistema de Reclutamiento Y Seleccion de Personal");
                return;
            }
            

            mostrarCriterios(codigoCategoria, codigoSub);

        });
        

        $('#updateDialog').dialog({
            autoOpen: false,
            width: 600,
            height: 300,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    if ($("#frmPopupSubCategoria").validate().form()) {
                        $.post("@Url.Action("PopupSubCategoria", "Categoria", new { area = "Intranet"})",
                         $("#frmPopupSubCategoria").serialize(),
                           function (data) {
                               // $("#ValSubCat").dialog("close");
                               $("#updateDialog").dialog("close");
                               $("#updateDialog").html(data);
                               $("#Categoria_TIEMPO").val(data.IdDato);
                               $('#grdList').trigger('reloadGrid');

                           }
                       );
                    }


                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#criterioDialog').dialog({
            autoOpen: false,
            width: 850,
            height: 700,
            resizable: false,
            modal: true,
            buttons: {
                "Grabar": function () {
                    $('#ValCriterio').dialog('open');
                   

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        $("#spanValCriterio").html("¿Desea agregar los criterios?")
        $('#ValCriterio').dialog({
            autoOpen: false,
            modal: true,
            title: "Sistema de Reclutamiento Y Seleccion de Personal",
            buttons: {
                "Si": function () {
                    $.ajax({
                        data: {
                            test: $("#grdListCriterios").jqGrid('getGridParam', 'selarrrow'),
                            subCategoria: $('#CriterioPorSubcategoria_IDESUBCATEGORIA').val()

                        },
                        type: "POST",
                        //url: "/Intranet/Criterio/GetListaCriterio",
                        url: '@Url.Action("GetListaCriterio", "Criterio", new { area="Intranet"})',

                        traditional: true,
                        success: function () {
                            $('#ValCriterio').dialog("close");
                            $('#criterioDialog').dialog("close");
                            $('#grdListCriterio').trigger('reloadGrid');


                        }
                    });
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });



        jQuery("#grdList").jqGrid({
            url: '@Url.Action("ListaSubCategoria", "Categoria", new { area="Intranet"})' + '?idCategoria=' + $("#Categoria_IDECATEGORIA").val(),
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Codigo','Estado','Nombre', 'Descripci&oacuten', 'Orden de impresión','Duración(Min)','Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [

                    { name: 'IDESUBCATEGORIA', index: 'IDESUBCATEGORIA', align: 'center', sortable: false, hidden: true, width: 10 },
                    { name: 'ESTACTIVO', index: 'ESTACTIVO', align: 'center', sortable: false, width: 100, hidden: true },
                    { name: 'NOMSUBCATEGORIA', index: 'NOMSUBCATEGORIA', align: 'center', sortable: false, width: 350 },
                    { name: 'DESCSUBCATEGORIA', index: 'DESCSUBCATEGORIA', align: 'left', sortable: false, width: 300 },
                    { name: 'ORDENIMPRESION', index: 'ORDENIMPRESION', align: 'left', sortable: false, width: 150 },
                    { name: 'TIEMPO', index: 'TIEMPO', align: 'left', sortable: false, width: 110 },
                    { name: 'FECCREACION', index: 'FECCREACION', align: 'left', sortable: false, width: 110, hidden: true },
                    { name: 'USRCREACION', index: 'USRCREACION', align: 'left', sortable: false, width: 180, hidden: true },
                    { name: 'FECMODIFICACION', index: 'FECMODIFICACION', align: 'left', sortable: false, width: 130, hidden: true },
                    { name: 'USRMODIFICACION', index: 'USRMODIFICACION', align: 'left', sortable: false, width: 180, hidden: true }
            ],
            pager: jQuery('#grdPager'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            sortname: 'ORDENIMPRESION',
            sortorder: 'asc',
            viewrecords: true,
            height: 250,
            width: 736,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: false,
            shrinkToFit: false,
            onSelectRow: function (rowid, status) {
                if (rowid != null) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);
                    $('#grdListCriterio').trigger('reloadGrid');
                    $('#grdListCriterioxAlternativa').trigger('reloadGrid');
                }
            },

            postData: {

            },
            loadComplete: function (data) {
               
                if (flag == 0) {
                    $("#grdList").setSelection($("#grdList").getDataIDs()[0], true);
                    
                } else {
                    $('#grdList').resetSelection().setSelection(flag, true);

                }
               
                $('#grdListCriterio').trigger('reloadGrid');
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');

                
                
               
            }
        });

       
        
        var dato = '@Session["Tipo"]';
        if (dato == 1) {
            $("#ejemplo").hide();
            $("#Categoria_TEXTOEJEMPLO").hide();
            $("#nombreImagen").hide();
            $("#selecImagen").hide();
            $("#verImagen").hide();
        }
        if (dato == "I") {
            $("#ejemplo").show();
            $("#Categoria_TEXTOEJEMPLO").hide();
            $("#nombreImagen").show();
            $("#selecImagen").show();
            $("#verImagen").show();
        }
        if (dato == "T") {
            $("#ejemplo").show();
            $("#Categoria_TEXTOEJEMPLO").show();
            $("#nombreImagen").hide();
            $("#selecImagen").hide();
            $("#verImagen").hide();
        }

       

        $("#Categoria_TIPOEJEMPLO").change(function () {
            var vvalor = $(this).val();

            if (vvalor == "01") {
                $("#ejemplo").show();
                $("#Categoria_TEXTOEJEMPLO").show();
                $("#nombreImagen").hide();
                $("#selecImagen").hide();
                $("#verImagen").hide();
            }
            else if (vvalor == "02") {
                $("#ejemplo").show();
                $("#Categoria_TEXTOEJEMPLO").hide();
               
                $("#nombreImagen").show();
                $("#selecImagen").show();
                $("#verImagen").show();
            }
            else {
                $("#ejemplo").hide();
                $("#Categoria_TEXTOEJEMPLO").hide();
                $("#nombreImagen").hide();
                $("#selecImagen").hide();
                $("#verImagen").hide();
            }
        });

        jQuery("#grdListCriterio").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                    { field: 'IdeSubCategoria', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListaCriterioxSub", "Categoria", new { area="Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListCriterio')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['','','', 'Pregunta', 'Ptje.Max', 'Orden de impresión'],
            colModel: [
                    { name: 'Codigo', index: 'Codigo', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'CodigoSub', index: 'CodigoSub', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'CodigoCrit', index: 'CodigoCrit', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'Pregunta', index: 'Pregunta', align: 'left', sortable: false, width: 600 },
                    { name: 'PtjeMax', index: 'PtjeMax', align: 'left', width: 100, sortable: false },
                    { name: 'Prioridad', index: 'Prioridad', align: 'left', width: 180, sortable: false }
                   
            ],
            pager: jQuery('#grdPagerCriterio'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'PRIORIDAD',
            sortorder: 'asc',
            viewrecords: true,
            height: 250,
            width: 736,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,


            afterInsertRow: function (rowid, aData) {

                if (aData.Pregunta.length > 70) {
                    var cPreguntaSub = aData.Pregunta.substring(0, 70) + " ...";
                    jQuery("#grdListCriterio").jqGrid('setCell', rowid, 'Pregunta', cPreguntaSub);
                }

            },


            onSelectRow: function (rowid, status) {
                if (rowid != null) {
                    $('#grdListCriterioxAlternativa').trigger('reloadGrid');
                }
                
            },
            postData: {
            },loadComplete: function (data) {
               
                if (flag2 == 0) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);

                } else {
                    $('#grdListCriterio').resetSelection().setSelection(flag2, true);

                }
               
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');
            },
            gridComplete: function () {
               
                if (flag2 == 0) {
                    $("#grdListCriterio").setSelection($("#grdListCriterio").getDataIDs()[0], true);

                } else {
                    $('#grdListCriterio').resetSelection().setSelection(flag2, true);
                   
                }
               
                $('#grdListCriterioxAlternativa').trigger('reloadGrid');
            }
        });


      

        jQuery("#grdListCriterioxAlternativa").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                var selr = jQuery('#grdListCriterio').jqGrid('getGridParam', 'selrow');
                var rowData = jQuery('#grdListCriterio').jqGrid('getRowData', selr);
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;

                migrilla.Rules = [
                    { field: 'IdeCriterio', data: rowData.CodigoCrit }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListCriterioxAlternativa", "Categoria", new { area="Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListCriterioxAlternativa')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['', 'Alternativa', 'Imagen', 'Peso', ''],
            colModel: [

                    { name: 'IdeAlternativa', index: 'IdeAlternativa', align: 'left', width: 10, editable: false, sortable: false, hidden: true },
                    { name: 'NombreAlternativa', index: 'NombreAlternativa', align: 'left', width: 750, editable: false, sortable: false },
                    { name: 'RutaDeImagen', index: 'RutaDeImagen', align: 'center', sortable: false, editable: false, formatter: ImagenFormatter, width: 750 },
                    { name: 'Peso', index: 'Peso', align: 'left', sortable: false, width: 50, editable: false },
                    { name: 'TipoModo', index: 'TipoModo', align: 'center', sortable: false, width: 80, editable: false, hidden: true },

            ],
             pager: jQuery('#grdPagerAlternativa'),
             rowNum: 10,
             rowList: [10, 30, 50],
             autowidth: true,
             rules: true,
             sortname: 'IdeAlternativa',
             sortorder: 'desc',
             viewrecords: true,
             height: 250,
             width: 736,
             cellsubmit: 'clientArray',
             hidegrid: false,
             rownumbers: true,
             shrinkToFit: false,
            
             afterInsertRow: function (rowid, aData) {
                
                if ("01" != aData.TipoModo) {
                    $("#grdListCriterioxAlternativa").showCol("RutaDeImagen")
                    jQuery("#grdListCriterioxAlternativa").jqGrid('hideCol', ["NombreAlternativa"]);
                    jQuery("#grdListCriterioxAlternativa").jqGrid('showCol', ["RutaDeImagen"]);
                    

                } else {
                    $("#grdListCriterioxAlternativa").hideCol("RutaDeImagen")
                    jQuery("#grdListCriterioxAlternativa").jqGrid('hideCol', ["RutaDeImagen"]);
                    jQuery("#grdListCriterioxAlternativa").jqGrid('showCol', ["NombreAlternativa"]);

                }
                
             },



             postData: {

             }, loadComplete: function (data) {

                

             }





         });

        $("#fileCategoria").uploadify({
            'uploader': '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
             'script': '@Url.Action("Upload","Categoria")',
             'scriptData': { ext: '.jpeg;.jpg;.gif;.bmp;.png' },
             'fileDataName': 'file',
             'buttonText': 'Subir',
             'fileDesc': 'Image Files',
             'fileExt': '*.jpeg;*.jpg;*.gif;*.bmp;*.png;',
             'multi': false,
             'auto': true,
             'queueSizeLimit': '90',
             'sizeLimit': 2147483647,
             'removeCompleted': true,
             'cancelImg': '@Url.Content("~/Scripts/uploadify/cancel.png")',

                    'onError': function (a, b, c, d) {
                        if (d.status == 404)
                            alert("Could not find upload script. Use a path relative to: " + "<?= getcwd() ?>");
                        else if (d.type === "HTTP")
                            alert("error " + d.type + ": " + d.status);
                        else if (d.type === "File Size")
                            alert(c.name + " " + d.type + " Limit: " + Math.round(d.info / (1024 * 1024)) + "MB");
                        else
                            alert("error " + d.type + ": " + d.text);
                    },
                    'onSelect': function (e, q, f) {
                        var estado = true;
                        var fileName = f.name;
                        var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1).toLowerCase();
                        switch (fileNameExt) {
                            case 'jpeg':
                                break;
                            case 'jpg':
                                break;
                            case 'gif':
                                break;
                            case 'bmp':
                                break;
                            case 'png':
                                break;
                            default:
                                //Funciones.ShowAlert('', "extensión no válida");
                                $("#fileInput").uploadifyCancel(q);
                                $("#fileInput").uploadifyClearQueue();
                                estado = false;
                                break;
                        }

                        return estado;

                    },
                    'onComplete': function (event, queueId, fileObj, response, data) {

                        var rsp = jQuery.parseJSON(response);

                        if (rsp.Success == true) {

                            $("#Categoria_NOMBREIMAGEN").val(rsp.Data.NombreArchivo);
                            $("#NombreTempImgCategoria").val(rsp.Data.NombreTemporalArchivo);


                        }
                        else {

                        }
                    }
         });


    
    }); // Fin

    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }


    function ImagenFormatter(cellvalue, options, rowObject) {

        var strboton = '<input type="button" value="Imagen.." onclick="mostrarsubirarchivoimagen();" class="btn btn-mini" />';
        return strboton;

    }

    function validacion() {

        var nombreTem = $('#NombreTempImgCategoria').val();
        var tipo = $('#Categoria_TIPOEJEMPLO').val();
        var texto = $('#Categoria_TEXTOEJEMPLO').val();
        var nombreImagen = $('#Categoria_NOMBREIMAGEN').val();


        var tipoCategoria = $('#Categoria_TIPCATEGORIA').val();
        
        if ("02"!=tipoCategoria) {

            if ("02" == tipo) {
                if (nombreImagen.length > 0) {

                    $('#btnGuardar').trigger('click');
                } else {
                    MostrarMensaje("Ingrese una imagen de ejemplo", "Sistema de Reclutamiento Y Seleccion de Personal");
                }
            
            }
            if ("01" == tipo) {
            
                if (texto.length > 0) {
                    $('#btnGuardar').trigger('click');
                } else {
                    MostrarMensaje("Ingrese una texto de ejemplo", "Sistema de Reclutamiento Y Seleccion de Personal");
                }
            }
        
            if (tipo==0) {
                MostrarMensaje("Ingrese una tipo de ejemplo", "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        
        
        }

        if ("02" == tipoCategoria) {
            $('#btnGuardar').trigger('click');
        }
        

       
    
    }

    function ImagenFormatter(cellvalue, options, rowObject) {
        var tipo = rowObject[4] == null ? "" : rowObject[4];
        var test = "";
        var idAlter = cellvalue;
        if ("01" != tipo) {
            test = "<img height ='50' width='50' src='@Url.Action("ObtenerSubImagen", "Criterio", new {area="Intranet" })/" + idAlter + "' />";
        }

        return test;

    }


    function mostrarsubirarchivoimagen() {
        $("#dlgsubirarchivoimagen").dialog('open');
    }

    function HabilitarFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'enabled.png';
        var title = "Habilitar"
        if (rowObject[14] == "Activo") {
            archivo = 'enabled.png';
            var title = "Habilitar"
        } else {
            archivo = 'enabled.png';
            var title = "Habilitar"
        }

        var strImg = '<img src="' + imgPath + archivo + '" title="' + title + '" alt="' + title + '">';
        return strImg;
    }


    function EliminarSubCategoria(idCategoria, idSubCategoria) {
      
        $.ajax({
            data: { id: idCategoria,
                    codSub: idSubCategoria
                  },
            type: "POST",
            url: '@Url.Action("EliminarSubCategoria", "Categoria", new {area="Intranet" })',
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    $("#Categoria_TIEMPO").val(data.IdDato);
                    $('#grdList').trigger('reloadGrid');
                }
            }
        });


        
    }
 


    function EliminarCritxSub(idSubCategoria, idCriterio) {
        
        $.ajax({
            data: {
                id: idCriterio,
                codSub: idSubCategoria
            },
            type: "POST",
            url: "@Url.Action("EliminarCritxSub", "Categoria", new {area="Intranet" })",
            traditional: true,
            success: function (data) {
                if (data.Resultado) {

                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdListCriterio').trigger('reloadGrid');

                }
            }
        });



    }

    function mostrarAgregar(id, idSubCategoria) {
        var dialogDiv = $('#updateDialog');
        

        //$.get("/Intranet/Categoria/PopupSubCategoria/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
        $.get('@Url.Action("PopupSubCategoria", "Categoria", new { area = "Intranet"})?id=' + id + "&idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#updateDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }

    function mostrarEditarSub(id, idSubCategoria) {
        var dialogDiv = $('#updateDialog');
        //$.get("/Intranet/Categoria/PopupSubCategoria/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
        $.get('@Url.Action("PopupSubCategoria", "Categoria", new { area = "Intranet"})?id=' + id + "&idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#updateDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }
    


    function mostrarCriterios(id, idSubCategoria) {
        var dialogDiv = $('#criterioDialog');

        //$.get("/Intranet/Criterio/PopupListaCriterio/" + id + "?idSubCategoria=" + idSubCategoria, function (data) {
        $.get('@Url.Action("PopupListaCriterio", "Criterio", new { area = "Intranet"})?id=' + id + "&idSubCategoria=" + idSubCategoria, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#criterioDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }
   
    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }



</script>
}

@using (Html.BeginForm("Edit", "Categoria", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCategoria" }))
{
    @Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Categoría</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                </div>
            </div>
            <table class="formulario-busqueda">
            
                <tr class="formulario-fila">
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Categoría</label>
                            <div class="controles">
                              <input id="Categoria_IDECATEGORIA" name="Categoria.IDECATEGORIA" type="text" value="@Model.Categoria.IDECATEGORIA" readonly="readonly"> 
                              
                            </div>
                       
                    </td>
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Nombre</label>
                            <div class="controles">
                                
                                @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                {
                                  @Html.TextBoxFor(model => model.Categoria.NOMCATEGORIA, new { @class = "textoFormulario", @maxlength = "10",onkeyup="aMays(event, this)" }) 
                                }
                                else
                                {
                                  @Html.TextBoxFor(model => model.Categoria.NOMCATEGORIA, new { @class = "textoFormulario", @maxlength = "10", @readonly = "readonly" ,onkeyup="aMays(event, this)"})    
                                }
                                
                                <div class="tex-error" style="font-size:12px;color:red">    
                                @Html.ValidationMessageFor(model => model.Categoria.NOMCATEGORIA)
                                </div>
                           </div>
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Descripción</label>
                            <div class="controles">
                                
                                @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                {
                                  @Html.TextBoxFor(model => model.Categoria.DESCCATEGORIA, new { @class = "textoFormulario", @maxlength = "255",onkeyup="aMays(event, this)" }) 
                                }
                                else
                                {
                                  @Html.TextBoxFor(model => model.Categoria.DESCCATEGORIA, new { @class = "textoFormulario", @maxlength = "255", @readonly = "readonly" ,onkeyup="aMays(event, this)"}) 
                                }
                                
                                 <div class="tex-error" style="font-size:12px;color:red"> 
                                @Html.ValidationMessageFor(model => model.Categoria.DESCCATEGORIA)
                                 </div>
                            </div>
                        
                    </td>
                   
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Tipo</label>
                            <div class="controles">
                                 @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                 {
                                  @Html.DropDownListFor(model => model.Categoria.TIPCATEGORIA, new SelectList(Model.TipoCategoria, "Valor", "Descripcion", Model.Categoria.TIPCATEGORIA)) 
                                 }
                                 else
                                 {
                                  @Html.DropDownListFor(model => model.Categoria.TIPCATEGORIA, new SelectList(Model.TipoCategoria, "Valor", "Descripcion", Model.Categoria.TIPCATEGORIA), new { disabled = "disabled" })       
                                 }
                                <div class="tex-error" style="font-size:12px;color:red"> 
                                @Html.ValidationMessageFor(model => model.Categoria.TIPCATEGORIA)
                                </div>
                            </div>
                        
                    </td>
                   
                </tr>

                <tr class="formulario-fila">
                  
                    <td >
                        <label class="control-label" for="inputSuccess" id="lblInstrucciones">Insruccciones</label>
                        <div class="controles">
                         
                            @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                            {
                              @Html.TextAreaFor(model => model.Categoria.INSTRUCCIONES, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", maxlength = "255",onkeyup="aMays(event, this)" }) 
                            }
                            else
                            {
                              @Html.TextAreaFor(model => model.Categoria.INSTRUCCIONES, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", maxlength = "255", @readonly = "readonly",onkeyup="aMays(event, this)" }) 
                            }
                             <div class="tex-error" style="font-size:12px;color:red">  
                             @Html.ValidationMessageFor(model => model.Categoria.INSTRUCCIONES)
                             </div>
                        </div>
                    </td>
                   
                
                </tr>
                <tr class="formulario-fila">
                  
                     <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Tipo Ejemplo </label>
                            <div class="controles">
                               
                                 @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                 {
                                   @Html.DropDownListFor(model => model.Categoria.TIPOEJEMPLO, new SelectList(Model.TipoEjemplo, "Valor", "Descripcion", Model.Categoria.TIPOEJEMPLO)) 
                                 }
                                 else
                                 {
                                   @Html.DropDownListFor(model => model.Categoria.TIPOEJEMPLO, new SelectList(Model.TipoEjemplo, "Valor", "Descripcion", Model.Categoria.TIPOEJEMPLO), new { disabled = "disabled" }) 
                                 } 
                                     <div class="tex-error" style="font-size:12px;color:red"> 
                                @*@Html.ValidationMessageFor(model => model.Categoria.TIPOEJEMPLO)*@
                                </div>
                            </div>
                        
                    </td>
                     <td class="span5">
                            <label class="control-label" for="inputSuccess">Duración(Min)</label>
                            <div class="controles">
                                @Html.TextBoxFor(model => model.Categoria.TIEMPO, new { @class = "textoFormulario", @maxlength = "5",@readonly = "readonly" ,onkeypress="return Funciones.isNumberKey(event)"    })  
                            </div>
                    </td>
                    
                </tr>
                    <tr class="formulario-fila">
                        <td class="span5">
                            
                                <label class="control-label" for="inputSuccess" id="ejemplo">Ejemplo</label>
                                <div class="controles">
                                    
                                        @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                                {
                                          @Html.TextAreaFor(model => model.Categoria.TEXTOEJEMPLO, new { @maxlength = "255", rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", data_val = "false",onkeyup="aMays(event, this)" }) 
                                                }
                                        else
                                        {
                                           @Html.TextAreaFor(model => model.Categoria.TEXTOEJEMPLO, new { @maxlength = "255", rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", data_val = "false" ,@readonly="readonly",onkeyup="aMays(event, this)"}) 
                                        }
                                        @* @Html.TextBoxFor(model => model.image, new { type = "file", accept = "image/*" })*@
                                        <table>
                                            <tr id="nombreImagen">
                                   
                                                <td class="colEtiqueta">
                                                  <label class="etiquetaFormulario" for="setInstitucion">Nombre Imagen</label>
                                                </td>
                                                <td class="colInput;input-xxlarge">
                                                  @Html.TextBoxFor(model => model.Categoria.NOMBREIMAGEN, new { @class = "textoFormulario", @readonly = "readonly" })
                                                </td>
                                 
                                            </tr>
       
                                             @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                                            {
                                            <tr id="selecImagen">
                                              <td class="colEtiqueta">
                                                <label class="etiquetaFormulario">Imagen</label>
                                              </td>
                                              <td >
                                              <div id="divImagen">
                                                  <input type="file" name="fileCategoria" id="fileCategoria" />
                                       
                                              @Html.TextBoxFor(model => model.NombreTempImgCategoria, new { style = "display: none;" })
                                              </div>
                                              </td>
                                              <td>
                                              </td>
                                            </tr>
                                             }
                                            <tr id="verImagen">
                                            @if (Model.Categoria.IMAGENEJEMPLO != null)
                                            {
                                            <td class="colEtiqueta"></td>
                                            <td class ="colInput" >
                                                <img id="imgCategoria"  height ="150" width="150" onmouseover="this.width=500;this.height=400;" onmouseout="this.width=150;this.height=150;" src="@Url.Action("GetImage", "Categoria", new { id = Model.Categoria.IDECATEGORIA })" /> 
                                            </td>
                                            
                                            }
                                            </tr>
                                       </table> 
                                   @* }
                                    else
                                    {
                                      @Html.TextAreaFor(model => model.Categoria.TEXTOEJEMPLO, new { @maxlength = "150", @readonly = "readonly", rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", data_val = "false" }) 
                                     
                                       
                                    }    *@
                               
                                
                                </div>

                        
                        </td>
                    </tr>

               

            </table>



            @if (Grilla.Tabla1.Equals(Session["Tabla1"]))
            {
                if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                {
                    <div class="grilla-opciones">
                        <h6>Subcategorías</h6>
                        <div class="opciones">
                            <a id="btnAgregarSubCategoria" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a id="btnEditarSubCategoria"  class ="btn btn-small btn-info" title="Editar"><i class="icon-edit icon-white"></i></a>
                            <a id="btnSubirSubCategoria" class="btn btn-small btn-info" title="Subir"><i class="icon-arrow-up icon-white"></i></a>
                            <a id="btnBajarSubCategoria" class ="btn btn-small btn-info" title="Bajar"><i class=" icon-arrow-down icon-white"></i></a>
                            <a id="btnEliminaSubCategoria" class="btn btn-small btn-info" title="Eliminar" onclick="$('#divEliminar').dialog('open'); return false;"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                        <div style="clear:both"></div>
                    </div>
                }   
                    <div class="grilla-opciones">
                    </div>
                     <div class="tabla-datos">
                        <table id="grdList">
                        </table>
                        <div id="grdPager">
                        </div>
                    </div>
               
            } 
            @if (Grilla.Tabla2.Equals(Session["Tabla2"]))
            {

                if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                {
                    <div class="grilla-opciones">
                    <h6>Criterio</h6>
                        <div class="opciones">
                            <a id="btnAgregarCriterio" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a id="btnSubirCriterio"  class ="btn btn-small btn-info" title="Subir"><i class="icon-arrow-up icon-white"></i></a>
                            <a id="btnBajarCriterio" class ="btn btn-small btn-info" title="Bajar"><i class=" icon-arrow-down icon-white"></i></a>
                            <a id="btnEliminarCrit" onclick="$('#divEliminarSubCrit').dialog('open'); return false;"  class="btn btn-small btn-info" title="Eliminar"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                    <div style="clear:both"></div>
                    </div>
                }
            <div class="grilla-opciones">
            </div>  
            <div class="tabla-datos">
                <table id="grdListCriterio">
                </table>
                <div id="grdPagerCriterio">
                </div>
            </div>
           
            
             <div class="grilla-opciones">
                <h6>Alternativas</h6>
                <div class="opciones">
                </div>
                <div style="clear:both"></div>
            </div>
            <div class="tabla-datos">
                <table id="grdListCriterioxAlternativa">
                </table>
                <div id="grdPagerAlternativa"></div>

            </div>
            }
            
            <div class="form-actions">
                <a class="btn" href="@Url.Action("Index", "Categoria", new { area = "Intranet" })"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
               @if (!Accion.Consultar.Equals(Session["AccionCategoria"]))
                {
                 <a   class="btn btn-info"   onclick="validacion()"><i class=" icon-hdd icon-white"></i> Grabar</a>
                <input id="btnGuardar" type="submit" style="visibility: hidden" />
                }

            </div>
        </div>
    </div>
</div>
   
}
<div id="updateDialog" title="Agregar SubCategoria"></div>
<div id="criterioDialog" title="Buscar Criterio"></div>
<div id="divEliminar"><span id="spanEliminar"></span></div>
<div id="divEliminarSubCrit"><span id="spanEliminarSubCrit"></span></div>



<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>


<div id="ValSubCat">
        <span id="spanValSubCat"></span>
</div>

<div id="ValCriterio">
        <span id="spanValCriterio"></span>
</div>



<div id="confirmacion"><span id="spanConfirmacion"></span></div>
<div id="dlgsubirarchivoimagen">
    <table style="width: 100%">      
        <tr>
            <td style="height: 30px; vertical-align: central;">Sólo se permiten archivos con extensión JPG, GIF. Tamaño máximo del archivo 1MB. El archivo debe tener 32px de ancho y 32 px de Largo</td>
        </tr>
          <tr>
            <td style="height: 10px;"></td>
        </tr> 
        <tr>
            <td>
             <input class="input-file" id="fileInput" type="file"></td>
        </tr>
        <tr>
            <td style="height: 10px;"></td>
        </tr>       
    </table>
</div>

