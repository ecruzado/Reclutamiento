@model SanPablo.Reclutador.Web.Areas.Intranet.Models.RankingViewModel
@using SanPablo.Reclutador.Entity
@using System.Collections.Generic

@using System.Configuration;
@{
    ViewBag.Title = "PostulantesPorRequerimiento";
}
@section Head{
}

@section Scripts{
    <script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
    <script type="text/javascript">

        $(document).ready(function () {


         $('#btnAgregarRanking').click(function () {
             var idSol = $("#Solicitud_IdeSolReqPersonal").val();
             var tipSol = $("#Solicitud_Tipsol").val();
             if (idSol != null && idSol > 0) {
                 mostrarPopupCvPost(idSol, 0, tipSol);
            } else {
                MostrarMensaje('Ingrese un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

         });


         $('#btnAprobarPost').click(function () {

             var selr = jQuery('#grdListRankingPost').jqGrid('getGridParam', 'selrow');
             if (selr != null && selr > 0) {
                 $('#confirmacionAprob').dialog('open');
             } else {
                 MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

         });


         $('#btnAprobarPre').click(function () {
             var idSol = $("#Solicitud_IdeSolReqPersonal").val();
             var tipSol = $("#Solicitud_Tipsol").val();
             var pagina = $("#pagina").val();
             var indPagina = '@Indicador.Si';

             if (idSol != null) {
               
                 var url = '@Url.Action("Preseleccionado", "Ranking", new { id = "",area="Intranet" })?id=' + idSol + "&tipSol=" + tipSol + "&pagina=" + pagina + "&ind="+indPagina;
                window.location = url;

            } else {
                MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

        });

         


         $('#btnBuscarPostulantes').click(function () {
             $('#grdListRankingPost').trigger('reloadGrid');
        });

         

         $("#spanConfirmacionAprob").html("¿Desea realizar la aprobación?")
         $('#confirmacionAprob').dialog({
             autoOpen: false,
             modal: true,
             title: "Sistema de Reclutamiento Y Seleccion de Personal",
             buttons: {
                 "Si": function () {
                      var selr = jQuery('#grdListRankingPost').jqGrid('getGridParam', 'selrow');
                      var rowData = jQuery('#grdListRankingPost').jqGrid('getRowData', selr);
                      var idPostulante = rowData.IdePostulante;
                      var idSede = rowData.IdSede;

                     if (selr != null && selr > 0) {
                         AprobarPostulante(selr, idPostulante, idSede);
                     } else {
                         MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
                     }
                     $(this).dialog("close");
                 },
                 "No": function () {
                     $(this).dialog("close");
                 }
             }
         });


         $("#spanConfirmacionPos").html("¿Desea eliminar el registro?")
         $('#confirmacionPos').dialog({
             autoOpen: false,
             modal: true,
             title: "Sistema de Reclutamiento Y Seleccion de Personal",
             buttons: {
                 "Si": function () {

                     var selr = jQuery('#grdListCvPostulante').jqGrid('getGridParam', 'selrow');

                     if (selr != null && selr > 0) {
                         EliminarPostulante(selr);
                     } else {
                         MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
                     }
                     $(this).dialog("close");
                 },
                 "No": function () {
                     $(this).dialog("close");
                 }
             }
         });


         $('#btnEliminarPos').click(function () {

             var selr = jQuery('#grdListCvPostulante').jqGrid('getGridParam', 'selrow');
             if (selr != null && selr > 0) {
                 $('#confirmacionPos').dialog('open');
             } else {
                 MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

         });


         $('#btnCitaPos').click(function () {

             var selr = jQuery('#grdListCvPostulante').jqGrid('getGridParam', 'selrow');
             if (selr != null && selr > 0) {
                 citaPostulante(selr);
             } else {
                 MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

         });

         $('#btnAsistioPos').click(function () {

             var selr = jQuery('#grdListCvPostulante').jqGrid('getGridParam', 'selrow');
             if (selr != null && selr > 0) {
                 asistePostulante(selr);
             } else {
                 MostrarMensaje('Seleccione un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

         });


         $('#btnEditarRanking').click(function () {
             
             var selr = jQuery('#grdListCvPostulante').jqGrid('getGridParam', 'selrow');
             var rowData = jQuery('#grdListCvPostulante').jqGrid('getRowData', selr);
             var idpost = rowData.IdCvPostulante;
             var idSol = rowData.IdSolicitud;
             var tipSol = rowData.TipSol;



             if (idSol != null && idSol > 0) {
                 mostrarPopupCvPost(idSol, idpost, tipSol);
             } else {
                 MostrarMensaje('Ingrese un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

         });

            

         $('#popupDialogCv').dialog({
             autoOpen: false,
             width: 520,
             height: 500,
             resizable: false,
             modal: true,
             buttons: {
                 "Grabar": function () {
                     if ($("#frmPopupCvPostulante").validate().form()) {
                         $('#confCv').dialog('open');
                     }
                 },
                 "Cancelar": function () {
                     $(this).dialog("close");
                 }
             }
         });


            $("#spanConfCv").html("¿Desea guardar los cambios?")
            $('#confCv').dialog({
            autoOpen: false,
            modal: true,
            title: "Sistema de Reclutamiento Y Seleccion de Personal",
            buttons: {
                "Si": function () {
                    if ($("#frmPopupCvPostulante").validate().form()) {
                        $.ajax({
                            type: "POST",
                            data: $("#frmPopupCvPostulante").serialize(),
                            url: '@Url.Action("SetCvPostulante", "Ranking", new { area = "Intranet"})',
                            traditional: true,
                            success: function (data) {
                        if (data.Resultado) {
                            $('#confCv').dialog("close");
                            $('#popupDialogCv').dialog("close");
                            $('#grdListCvPostulante').trigger('reloadGrid');
                            
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        } else {
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        }

                    }
                });
                }
            },
            "No": function () {
            $(this).dialog("close");
            }
            }
            });

       
            jQuery("#grdListCvPostulante").jqGrid({
                datatype: function (postdata) {
                    var migrilla = new Object();
                    migrilla.page = postdata.page;
                    migrilla.rows = postdata.rows;
                    migrilla.sidx = postdata.sidx;
                    migrilla.sord = postdata.sord;
                    migrilla._search = postdata.isSearch;
                    migrilla.filters = postdata.filters;
                    migrilla.Rules = [

                        { field: 'idSol', data: $("#Solicitud_IdeSolReqPersonal").val() },
                        { field: 'tipPuesto', data: $("#Solicitud_Tipsol").val() }


                    ];

                    if (migrilla._search == true) {
                        migrilla.searchField = postdata.searchField;
                        migrilla.searchOper = postdata.searchOper;
                        migrilla.searchString = postdata.searchString;
                    }

                    var params = { grid: migrilla };

                    $.ajax({
                        url: '@Url.Action("ListaCvPostulante", "Ranking", new { area = "Intranet"})',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListCvPostulante')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
                colNames: ['', '', '', 'Apellido Paterno', 'Apellido Materno', 'Nombres', 'DNI', 'Telefono', 'Fecha Cita', 'Hora Cita ', 'Citado', 'Asistio'],
                colModel: [
                        { name: 'IdCvPostulante', index: 'IdCvPostulante', align: 'left', editable: false, sortable: false, hidden: true },
                        { name: 'IdSolicitud', index: 'IdSolicitud', align: 'left', editable: false, sortable: false, hidden: true },
                        { name: 'TipSol', index: 'TipSol', align: 'center', editable: false, sortable: false, hidden: true },
                        { name: 'ApePaterno', index: 'ApePaterno', align: 'center', editable: false, sortable: false, width: 300 },
                        { name: 'ApeMaterno', index: 'ApeMaterno', align: 'center', editable: false, sortable: false, width: 300 },
                        { name: 'Nombre', index: 'Nombre', align: 'center', editable: false, sortable: false, width: 300 },
                        { name: 'Dni', index: 'Dni', align: 'center', editable: false, sortable: false, width: 150 },
                        { name: 'Telefono', index: 'Telefono', align: 'center', editable: false, sortable: false, width: 150 },
                        { name: 'Fechacita', index: 'Fechacita', align: 'center', editable: false, sortable: false, width: 150 },
                        { name: 'HoraCita', index: 'HoraCita', align: 'center', editable: false, sortable: false, width: 150 },
                        { name: 'IndicadorCitado', index: 'IndicadorCitado', align: 'center', sortable: false, width: 50, edittype: 'checkbox', formatter: "checkbox", formatoptions: { disabled: true } },
                        { name: 'IndicadorAsistio', index: 'IndicadorAsistio', align: 'center', sortable: false, width: 50, edittype: 'checkbox', formatter: "checkbox", formatoptions: { disabled: true } }

                ],


                 pager: jQuery('#grdPagerCvPostulante'),
                 rowNum: 10,
                 rowList: [10, 30, 50],
                 autowidth: true,
                 rules: true,
                 sortname: 'IdCvPostulante',
                 sortorder: 'desc',
                 viewrecords: true,
                 height: 350,
                 cellsubmit: 'clientArray',
                 hidegrid: false,
                 rownumbers: true,
                 shrinkToFit: false,

                 postData: {
                 }, loadComplete: function (data) {
                 }
            });



            jQuery("#grdListRankingPost").jqGrid({
                datatype: function (postdata) {
                    var migrilla = new Object();
                    migrilla.page = postdata.page;
                    migrilla.rows = postdata.rows;
                    migrilla.sidx = postdata.sidx;
                    migrilla.sord = postdata.sord;
                    migrilla._search = postdata.isSearch;
                    migrilla.filters = postdata.filters;
                    migrilla.Rules = [

                        { field: 'idSol', data: $("#Solicitud_IdeSolReqPersonal").val() },
                        { field: 'tipSol', data: $("#Solicitud_Tipsol").val() },
                        { field: 'apePaterno', data: $("#ReclutaPersonal_ApePaterno").val() },
                        { field: 'apeMaterno', data: $("#ReclutaPersonal_ApeMaterno").val() },
                        { field: 'nombre', data: $("#ReclutaPersonal_Nombre").val() },
                        { field: 'estadoPos', data: $("#ReclutaPersonal_EstPostulante").val() }

                    ];

                    if (migrilla._search == true) {
                        migrilla.searchField = postdata.searchField;
                        migrilla.searchOper = postdata.searchOper;
                        migrilla.searchString = postdata.searchString;
                    }

                    var params = { grid: migrilla };

                    $.ajax({
                        url: '@Url.Action("ListPostulantesRanking", "Ranking", new { area = "Intranet"})',
                        type: 'post',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(params),
                        async: false,
                        success: function (data, st) {
                            if (st == 'success') {
                                var jq = $('#grdListRankingPost')[0];
                                jq.addJSONData(data);
                            }
                        },
                        error: function (e) {
                            console.log(e);
                        }
                    });
                },
                colNames: ['', '', '','','', 'Apellidos', 'Nombres','CV', '','Estado', 'Comentario', 'Puntaje','Postulaciones previas'],
                colModel: [
                        { name: 'IdeReclutaPersona', index: 'IdeReclutaPersona', align: 'left', editable: false, sortable: false, hidden: true },
                        { name: 'IdePostulante', index: 'IdePostulante', align: 'left', editable: false, sortable: false, hidden: true },
                        { name: 'IdeSol', index: 'IdeSol', align: 'center', editable: false, sortable: false, hidden: true },
                        { name: 'IdSede', index: 'IdSede', align: 'center', editable: false, sortable: false, width: 300, hidden: true },
                        { name: 'IdeCargo', index: 'IdeCargo', align: 'center', editable: false, sortable: false, width: 300, hidden: true },
                        { name: 'Apellidos', index: 'Apellidos', align: 'center', editable: false, sortable: false, width: 300 },
                        { name: 'Nombres', index: 'Nombres', align: 'center', editable: false, sortable: false, width: 150 },

                        { name: 'FormatoCv', index: 'FormatoCv', align: 'center', editable: false, width: 50, sortable: false, formatter: ImprimirFormatter },



                        { name: 'EstPostulante', index: 'EstPostulante', align: 'center', editable: false, sortable: false, hidden: true },
                        { name: 'DesEstadoPostulante', index: 'DesEstadoPostulante', align: 'center', editable: false, sortable: false, width: 200 },
                        { name: 'Comentario', index: 'Comentario', align: 'center', sortable: false, width: 300 },
                        { name: 'PtoTotal', index: 'PtoTotal', align: 'center', sortable: false, width: 100 },
                        { name: 'PostulacionParalelo', index: 'PostulacionParalelo', align: 'center', sortable: false, width: 300 }

                ],

                pager: jQuery('#grdPagerRankingPost'),
                rowNum: 10,
                rowList: [10, 30, 50],
                autowidth: true,
                rules: true,
                sortname: 'IdeReclutaPersona',
                sortorder: 'desc',
                viewrecords: true,
                height: 350,
                cellsubmit: 'clientArray',
                hidegrid: false,
                rownumbers: true,
                shrinkToFit: false,

                postData: {
                }, loadComplete: function (data) {
                }
            });



        });

        function ImprimirFormatter(cellvalue, options, rowObject) {
            var imgPath = '@Url.Content("~/Content/images/")';
            var archivo = 'printer.png';
            //var strImg = '<img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV">';
            var strImg = '<a target="_blank" href=' + '@Url.Action("GetCvPDF", "Ranking")' + '/' + rowObject[1] + '><img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV"></a>';
            return strImg;
        }

        


        function CellCheckBox(cellvalue, options, rowObject) {
            return '<input type="checkbox" name="selectedPostulantes"  value="' + cellvalue + '" />';
        }

         //   });
        
        function mostrarPopupCvPost(idSol, selr, tipSol) {
            var dialogDiv = $('#popupDialogCv');

            $.get('@Url.Action("inicoPopupCv", "Ranking", new { area = "Intranet"})?id=' + idSol + "&idPos=" + selr + "&tipSol=" + tipSol, function (data) {

            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#popupDialogCv"));
            dialogDiv.dialog('open');
        });
        return false;
        }

        
        

        function citaPostulante(selr) {

            $.ajax({
                data: {
                    id: selr

                },
                type: "POST",
                url: '@Url.Action("CitaPostulanteCv", "Ranking")',
                traditional: true,
                success: function (data) {
                @*if (data.redirecciona) {
                    SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }*@
                        if (data.Resultado) {
                            $('#grdListCvPostulante').trigger('reloadGrid');
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        } else {
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        }
                    }
            });

        }


        function asistePostulante(selr) {

            $.ajax({
                data: {
                    id: selr

                },
                type: "POST",
                url: '@Url.Action("AsistioPostulanteCv", "Ranking")',
                traditional: true,
                success: function (data) {
                @*if (data.redirecciona) {
                    SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }*@
                    if (data.Resultado) {
                        $('#grdListCvPostulante').trigger('reloadGrid');
                        MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    } else {
                        MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                }
            });

        }

        

        function AprobarPostulante(selr, idPostulante,idSede) {

            $.ajax({
                data: {
                    id: selr,
                    idPostulante: idPostulante,
                    idSede : idSede
                },
                type: "POST",
                url: '@Url.Action("ApruebaPostulante", "Ranking")',
                traditional: true,
                success: function (data) {
                if (data.redirecciona) {
                    SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }
                        if (data.Resultado) {
                            $('#grdListRankingPost').trigger('reloadGrid');
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        } else {
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        }
                    }
            });

            }



        function EliminarPostulante(selr) {

            $.ajax({
                data: {
                    id: selr
                    
                },
                type: "POST",
                url: '@Url.Action("EliminarPopupCv", "Ranking")',
                    traditional: true,
                    success: function (data) {
                if (data.redirecciona) {
                    SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }
                    if (data.Resultado) {
                        $('#grdListCvPostulante').trigger('reloadGrid');
                        MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    } else {
                        MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
            }
        });

        }

             
    </script>
}
<div class="row">
    <div class="span12">
        <div class="widget-box">
@using (Html.BeginForm("Index", "Ranking", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmRanking" }))
{
    @Html.ValidationSummary(true)


            <div class="widget-title">
                <h5>Ranking de Postulantes</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <a class="btn btn-primary btn-small disabled"  id="@Model.Solicitud.DesEstado"  >@Model.Solicitud.DesEstado</a>
                </div>
            </div>
           
            <div class="grilla-opciones" style="margin-top:0px;">
                <h6>Solicitud</h6>
                <div style="clear:both"></div>
            </div>
    
            @Html.TextBoxFor(model => model.pagina, new { style = "display: none;" }) 
            @Html.TextBoxFor(model => model.Solicitud.IdeSolReqPersonal, new { style = "display: none;" }) 
            @Html.TextBoxFor(model => model.Solicitud.Tipsol, new { style = "display: none;" })  
           <table class="formulario-busqueda">
	            
                 
                
                <tr class="formulario-fila">
		            <td class="span5">
			
			            <label class="control-label" for="inputSuccess">Solicitud</label>
			            <div class="controles">
				            @*<input type="text" class="input-medium" id="txtcodigo" disabled="disabled" value="REQ0001">*@
                            @Html.TextBoxFor(model => model.Solicitud.CodSolReqPersonal, new { @class = "textoFormulario" ,disabled ="disabled" }) 

			            </div>
		   
		            </td>
		            <td class="span5">
		   
			            <label class="control-label" for="selectError">Cargo</label>
			            <div class="controles">
				            @*<input type="text" class="input-medium" id="txtcargo" disabled="disabled" value="Técnico Enfermería.">*@
                            @Html.TextBoxFor(model => model.Solicitud.nombreCargo, new { @class = "textoFormulario" ,disabled ="disabled" }) 
                        </div>
		   
		            </td>
	            </tr>
	            <tr class="formulario-fila">
		            <td class="span5">
		  
			            <label class="control-label" for="inputSuccess">Sede</label>
			            <div class="controles">
				           @* <input type="text" class="input-medium" id="txtsede" disabled="disabled" value="CHSP - Cusco">*@
                           @Html.TextBoxFor(model => model.Solicitud.Sede_des, new { @class = "textoFormulario" ,disabled ="disabled" }) 

			            </div>
			
		            </td>
		            <td class="span5">
		   
			            <label class="control-label" for="selectError">Dependencia</label>
			            <div class="controles">
				            @*<input type="text" class="input-medium" id="txtdependencia" disabled="disabled" value="Gerencia Médica">*@
                            @Html.TextBoxFor(model => model.Solicitud.Dependencia_des, new { @class = "textoFormulario" ,disabled ="disabled" }) 

			            </div>
			
		            </td>
	            </tr>
	            <tr class="formulario-fila">
		            <td class="span5">
		   
			            <label class="control-label" for="inputSuccess">Departamento</label>
			            <div class="controles">
				            @*<input type="text" class="input-medium" id="txtdepartamento" disabled="disabled" value="Enfermería">*@
                            @Html.TextBoxFor(model => model.Solicitud.Departamento_des, new { @class = "textoFormulario" ,disabled ="disabled" }) 
			            </div>
		   
		            </td>
		            <td class="span5">
		   
			            <label class="control-label" for="selectError">Area</label>
			            <div class="controles">
				            @*<input type="text" class="input-medium" id="txtarea" disabled="disabled" value="Cuidados Intensivos">*@
                            @Html.TextBoxFor(model => model.Solicitud.Area_des, new { @class = "textoFormulario" ,disabled ="disabled" }) 
			            </div>
			
		            </td>
	            </tr>
            </table>    
            <div class="grilla-opciones">
                <h6>CV Externos</h6>
                <div class="opciones">
                    @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.pagina))
                    {
                        <span></span> 
                    }
                    else
                    {
                    <a class="btn btn-small btn-info" id="btnAgregarRanking" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                    <a class="btn btn-small btn-info" id="btnEditarRanking" title="Editar"><i class="icon-edit icon-white"></i></a>
                    <a class="btn btn-small btn-info" id="btnEliminarPos" title="Eliminar"><i class="icon-remove icon-white"></i></a>                                  
                    }
                </div>
                <div style="clear:both"></div>
            </div>
            <div class="tabla-datos">
                <div>
                    <table id="grdListCvPostulante">
                    </table>
                    <div id="grdPagerCvPostulante">
                    </div>
                </div>
             <div class="Opciones">
            </div>
                <div class="form-actions">
                    @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.pagina))
                    {
                        <span></span> 
                    }
                    else
                    {
                    <a class="btn btn-info"  id="btnCitaPos" title="Citado" onclick=""><i class="icon-edit icon-white" ></i> Citado</a> 
                    <a class="btn btn-info" id="btnAsistioPos" title="Asistio" onclick=""><i class="icon-edit icon-white" ></i> Asistió</a> 
                    }
                </div> 
            </div>
                        
       
               <div class="grilla-opciones">
                    <h6>Postulantes</h6>
                    <div style="clear:both"></div>
                </div>
                
            <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    <td class="span5">
		   
			            <label class="control-label" for="inputSuccess">Apellido Paterno</label>
			            <div class="controles">
				           
                            @Html.TextBoxFor(model => model.ReclutaPersonal.ApePaterno, new { @class = "textoFormulario"}) 
			            </div>
		   
		            </td>
                    <td class="span5">
		   
			            <label class="control-label" for="inputSuccess">Nombre</label>
			            <div class="controles">
				           
                            @Html.TextBoxFor(model => model.ReclutaPersonal.Nombre, new { @class = "textoFormulario"}) 
			            </div>
		   
		            </td>
                </tr>
                <tr class="formulario-fila">
                      <td class="span5">
		   
			            <label class="control-label" for="inputSuccess">Apellido Materno</label>
			            <div class="controles">
				           
                            @Html.TextBoxFor(model => model.ReclutaPersonal.ApeMaterno, new { @class = "textoFormulario"}) 
			            </div>
		   
		            </td>
                    
                    <td class="span5">
		   
			            <label class="control-label" for="inputSuccess">Estado</label>
			            <div class="controles">
				           
                           @Html.DropDownListFor(model => model.ReclutaPersonal.EstPostulante, new SelectList(Model.listaEstaPost, "Valor", "Descripcion", Model.ReclutaPersonal.EstPostulante),new {  data_val = "false"})
			            </div>
		   
		            </td>
                    
                </tr>
            </table>
    
                <div class="formulario-accion">
                    <div class="opciones">
                        <a class="btn btn-info" href="#" id="btnBuscarPostulantes"><i class="icon-search icon-white"></i> Buscar</a>
                    </div>
                </div>
                <div style="clear:both"></div>
                <div class="tabla-datos">
                            <table id="grdListRankingPost">
                            </table>
                            <div id="grdPagerRankingPost">
                            </div>
                </div>
                
}
                                                                                               
                 <div class="form-actions">
                     @if (TipoSolicitud.Remplazo.Equals(Model.pagina))
                     {
                       <a class="btn" href="@Url.Action("ListaReemplazo", "SolicitudCargo")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>         
                     }
                
                     @if (TipoSolicitud.Ampliacion.Equals(Model.pagina))
                     {
                       <a class="btn" href="@Url.Action("Index", "SolicitudAmpliacionCargo")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                     }

                      @if (TipoSolicitud.Nuevo.Equals(Model.pagina))
                     {
                       <a class="btn" href="@Url.Action("Index", "SolicitudNuevoCargo")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                     }
                     @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.pagina))
                     {
                       <a class="btn" href="@Url.Action("Index", "SolicitudConsulta")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>   
                     }

                <a class="btn btn-info" id="btnAprobarPost"><i class="icon-edit icon-white"></i> CV-Aprobado</a> 
                <a class="btn btn-info" id="btnAprobarPre"><i class="icon-edit icon-white"></i> CV-Preselección</a>                             
            </div>
        </div>
    </div>
</div>

<div id="popupDialogCv" title="Postulante CV"></div>
<div id="confCv"><span id="spanConfCv"></span></div>
<div id="confirmacionPos"><span id="spanConfirmacionPos"></span></div>
<div id="confirmacionAprob"><span id="spanConfirmacionAprob"></span></div>
