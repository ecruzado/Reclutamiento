@using SanPablo.Reclutador.Entity
@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudNuevoCargoViewModel
@{
    ViewBag.Title = "Solicitud Nuevo Cargo";
}
@section Head{
}

@section Scripts{
<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

       

        SanPablo.Numeros('SolicitudNuevoCargo_NumeroPosiciones');
        var estado = $('#SolicitudNuevoCargo_EstadoActivo').val();
        if (estado == "I")
        { deshabilitarControles(); }
        else
        { habilitarControles();}

        var aprobacion = $('#SolicitudNuevoCargo_IdeSolicitudNuevoCargo').val();
        if (aprobacion != "0")
        { deshabilitarControles(); }
        else
        { habilitarControles(); }

        $('#updateDialogAprobacion').dialog({
            autoOpen: false,
            width: 400,
            resizable: false,
            modal: true,
            buttons: {
                "Enviar": function (e) {
                    e.preventDefault();
                    var result = $('#LogSolicitudNuevoCargoForm').valid();
                    if (result) {
                        
                        $("#spanMensaje").html("¿Seguro que quiere enviar la Aprobacion/Rechazo de la solicitud?");
                        $("#divMensaje").dialog({
                            title: 'Sistema de reclutamiento y Selección de personal',
                            modal: true,
                            buttons: [{
                                text: "Si",
                                click: function () {
                                    $(this).dialog("close");
                                    
                                    $.blockUI({
                                        message: '<h1>Enviando...</h1>',
                                        css: {
                                            border: 'none',
                                            padding: '15px',
                                            backgroundColor: '#000',
                                            '-webkit-border-radius': '10px',
                                            '-moz-border-radius': '10px',
                                            opacity: .5,
                                            color: '#fff'
                                        }
                                    });
                                        enviarAprobacionRechazo();
                                }},{
                                text:"No",
                                click: function () { $(this).dialog("close"); }
                                }]
                            });
                       
                    }
                    else {
                        $.unblockUI();
                        notificacionError("ERROR: Verifique que los datos ingresados son correctos");
                    }
                },
                "Cancelar": function () {
                    $('#updateDialogAprobacion').dialog("close");
                }
            }
                });

        $('#updateDialogConfirmacion').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            buttons: {
                "Aceptar": function (e) {
                    e.preventDefault();
                    var result = $('#solicitudNuevoCargoForm').valid();
                    var codigo = $('#SolicitudNuevoCargo_CodigoCargo').val();
                    if (result) {
                        $("#updateDialogConfirmacion").dialog("close");
                        $.blockUI({
                            message: '<h1>Enviando...</h1>',
                            css: {
                                border: 'none',
                                padding: '15px',
                                backgroundColor: '#000',
                                '-webkit-border-radius': '10px',
                                '-moz-border-radius': '10px',
                                opacity: .5,
                                color: '#fff'
                            }
                        });
                        $.post('@Url.Action("Edit", "SolicitudNuevoCargo")',
                        $("#solicitudNuevoCargoForm").serialize(),
                        function (respuesta) {
                            $.unblockUI();
                            if (respuesta.Resultado) {
                                $("#SolicitudNuevoCargo_IdeSolicitudNuevoCargo").value = respuesta.IdDato;
                                //actualizarCodigo(codigo);
                                mensajeRedirecciona("Solicitud enviada exitosamente", "Sistema de reclutamiento y selección de personal");
                                
                            }
                            else {
                                MostrarMensaje(respuesta.Mensaje, "Sistema de reclutamiento y selección de personal");
                            }
                        });
                    }
                    else {
                        $('#updateDialogConfirmacion').dialog("close");
                        MostrarMensaje("ERROR: Verifique que los datos ingresados son correctos", "Sistema de reclutamiento y selección de personal");
                    }
                   
                 },
                 "Cancelar": function () {
                     $('#updateDialogConfirmacion').dialog("close");
                  }
            }
         });

        $('select#SolicitudNuevoCargo_IdeDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#SolicitudNuevoCargo_IdeArea").empty();
            $("select#SolicitudNuevoCargo_IdeArea").append("<option value='0'> Seleccionar </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos","SolicitudNuevoCargo")',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {
                    $("select#SolicitudNuevoCargo_IdeDepartamento").empty();
                    $("select#SolicitudNuevoCargo_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudNuevoCargo_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                );
                }
            });
        })

        $('select#SolicitudNuevoCargo_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();        
            $.ajax({
                async: "false",
                type: "POST",
                url: '@Url.Action("listaAreas","SolicitudNuevoCargo")',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#SolicitudNuevoCargo_IdeArea").empty();
                    $("select#SolicitudNuevoCargo_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudNuevoCargo_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })

        
    });

    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }

    function mostrarAprobarDesaprobar() {

        
        var estado = $('#SolicitudNuevoCargo_EstadoActivo').val();
        if (estado == "A") {
            var dialogDiv = $('#updateDialogAprobacion');
            var ideSolicitud = $('#SolicitudNuevoCargo_IdeSolicitudNuevoCargo').val();
            if (guardarDatosEditados()) {
                $.get('@Url.Action("Edit", "LogSolicitudNuevoCargo")', { ideSolicitud: ideSolicitud }, function (data) {
                    dialogDiv.html(data);
                    $.validator.unobtrusive.parse($("#updateDialogAprobacion"));
                    dialogDiv.dialog('open');
                });
            }
            else {
                MostrarMensaje("Verifique los datos ingresados e intente nuevamente", "Sistema de reclutamiento y selección de personal");
            }
        }
        else {
            MostrarMensaje("No puede realizar esta accion en una solicitud en estado 'INACTIVO' o no Enviado", "Sistema de reclutamiento y selección de personal");
        }
        return false;
    }

    function guardarDatosEditados()
    {
        var result = $('#solicitudNuevoCargoForm').valid();
        if (result) {

            var formdata = jQuery("#solicitudNuevoCargoForm").serialize();
            var resultado = false;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Edit", "SolicitudNuevoCargo")',
                data: formdata,
                async: false,
                success: function (respuesta) {
                    if (respuesta.Resultado) {
                        resultado = true;
                    }
                    else {
                        resultado= false;
                    }
                }
            });

            return resultado;
        }
        else { return false}
    }


    function enviarAprobacionRechazo()
    {
        $('#updateDialogAprobacion').dialog("close");
        $.post('@Url.Action("Edit", "LogSolicitudNuevoCargo")',
             $('#LogSolicitudNuevoCargoForm').serialize(),
             function (respuesta) {
                 if (respuesta.Resultado) {
                    
                     $.unblockUI();
                     mensajeRedirecciona("Aprobación/Rechazo enviado exitosamente", "Sistema de reclutamiento y selección de personal");
                     //notificacionExito();
                 }
                 else {
                     $.unblockUI();
                     MostrarMensaje(respuesta.Mensaje, "Sistema de reclutamiento y selección de personal");
                     // notificacionError(respuesta.Mensaje);
                 }
              }
        );
    }



    function mostrarConfirmacion() {
        var dialogDiv = $('#updateDialogConfirmacion');
            dialogDiv.dialog('open');
    }

    function ocultarAprobarDesaprobar() {
        $('#modalAprobarRechazar').modal('hide');
    }


    function deshabilita() {
        document.getElementById('idB1').style.display = "none";
    }
    function habilita() {
        document.getElementById('idB1').style.display = "block";
    }

    function verificarCodigo()
    {
        var idSolicitud = $('#SolicitudNuevoCargo_IdeSolicitudNuevoCargo').val();
        
        var codCodigo = $("#SolicitudNuevoCargo_CodigoCargo").val();
        $.ajax({
            async: "false",
            data: { codCodigo: codCodigo, id: idSolicitud},
            type: "POST",
            url: '@Url.Action("verificarCodigo", "SolicitudNuevoCargo")',
            traditional: true,
            success: function (data) {
                if (data.Resultado) {
                    $("#SolicitudNuevoCargo_CodigoCargo").val("");
                    MostrarMensaje(data.Mensaje, "Sistema de reclutamiento y selección de personal");
                } 
            }
        });
    }
    function validarFormulario() {
        if ($('#SolicitudNuevoCargo_EstadoActivo').val() != "I") {
            if ($("#solicitudNuevoCargoForm").validate().form()) {
                mostrarConfirmacion();
            }
            else { MostrarMensaje("Verifique que los campos esten llenados correctamente", "Sistema de reclutamiento y selección de personal"); }
        }
        else {
            MostrarMensaje("Solicitud en estado: 'INACTIVO'", "Sistema de reclutamiento y selección de personal");
        }
    }
    function actualizarCodigo(codigo) {
        $.ajax({
            async: "false",
            data: { codigo: codigo },
            type: "POST",
            url: '@Url.Action("recuperarCodigoSolicitud", "SolicitudNuevoCargo")',
            traditional: true,
                success: function (data) {
                    if (data.Resultado) {
                        $('#SolicitudNuevoCargo_IdeSolicitudNuevoCargo').val(data.Mensaje);
                    } else {
                        MostrarMensaje(data.Mensaje, "Sistema de reclutamiento y selección de personal");
                    }
                }
        });

    }
    function deshabilitarControles()
    {
        //$('#SolicitudNuevoCargo_CodigoCargo').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_NombreCargo').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_DescripcionCargo').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_TipoRangoSalarial').attr("disabled", "disabled");
        $('#Dependencias').attr("disabled", "disabled");
        $('#Departamentos').attr("disabled", "disabled");
        $('#SolicitudNuevoCargo_IdeArea').attr("disabled", "disabled");
        $('#SolicitudNuevoCargo_IdeDependencia').attr("disabled", "disabled");
        $('#SolicitudNuevoCargo_IdeDepartamento').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_DescripcionEstudios').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_DescripcionCompetencias').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_DescripcionFunciones').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_DescripcionObservaciones').attr("disabled", "disabled");
        //$('#SolicitudNuevoCargo_NumeroPosiciones').attr("disabled", "disabled");
        //$('#btnEnviar').attr("disabled", "disabled");

    }

    function habilitarControles() {
        $('#SolicitudNuevoCargo_CodigoCargo').removeAttr("disabled");
        $('#SolicitudNuevoCargo_NombreCargo').removeAttr("disabled");
        $('#SolicitudNuevoCargo_DescripcionCargo').removeAttr("disabled");
        $('#SolicitudNuevoCargo_TipoRangoSalarial').removeAttr("disabled");
        $('#Dependencias').removeAttr("disabled");
        $('#Departamentos').removeAttr("disabled");
        $('#SolicitudNuevoCargo_IdeArea').removeAttr("disabled");
        $('#SolicitudNuevoCargo_IdeDependencia').removeAttr("disabled");
        $('#SolicitudNuevoCargo_IdeDepartamento').removeAttr("disabled");
        $('#SolicitudNuevoCargo_DescripcionEstudios').removeAttr("disabled");
        $('#SolicitudNuevoCargo_DescripcionCompetencias').removeAttr("disabled");
        $('#SolicitudNuevoCargo_DescripcionFunciones').removeAttr("disabled");
        $('#SolicitudNuevoCargo_DescripcionObservaciones').removeAttr("disabled");
        $('#SolicitudNuevoCargo_NumeroPosiciones').removeAttr("disabled");
        $('#btnEnviar').removeAttr("disabled");
    }

    function mensajeRedirecciona(mensaje, titulo)
    {
        $("#spanMensaje").html(mensaje);
        $("#divMensaje").dialog({
            title: titulo,
            modal: true,
            buttons: {
                "Ok": function () {
                    $(this).dialog("close");
                    SanPablo.Redirecciona('@Url.Action("Index","SolicitudNuevoCargo")');
                }
            }
        });
    }

</script>
}
@using (Html.BeginForm("Edit", "SolicitudNuevoCargo", FormMethod.Post, new { @id = "solicitudNuevoCargoForm" }))
{
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Solicitud Nuevo Cargo</h5>
                <div class="opciones">
                    <label>Estado</label>
                    @Html.HiddenFor(model=>model.SolicitudNuevoCargo.EstadoActivo)
                    @Html.TextBoxFor(model => model.Pagina, new { style = "display:none" })
                    @Html.TextBoxFor(model =>model.Estado, new {@class="btn btn-primary btn-small disabled", @disabled = "disabled", @style ="width:60px"})
                </div>
            </div>
            
                <table  class="formulario-busqueda">
                    <tbody>
                        <tr class="formulario-fila">
                            <td></td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Solicitud</label>
                                    @Html.HiddenFor(model=>model.SolicitudNuevoCargo.IdeSolicitudNuevoCargo)
                                    <div class="controles">
                                        @Html.TextBoxFor(model => model.SolicitudNuevoCargo.IdeSolicitudNuevoCargo, new { @class ="input-small", @disabled="disabled" })
                                    </div>
                                </div>
                            </td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Código de Cargo</label>
                                    <div class="controles">
                                        @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.TextBoxFor(model => model.SolicitudNuevoCargo.CodigoCargo, new { @class = "input-small", maxlength = "10", @onblur = "verificarCodigo()", onkeyup = "aMays(event, this)" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.SolicitudNuevoCargo.CodigoCargo, new { @class = "input-small", maxlength = "10", disabled = "disabled" })
                                            
                                        }
                                    </div>
                                </div>
                            </td>
                            
                        </tr>
                        <tr class="formulario-fila">
                            <td></td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Cargo</label>
                                    <div class="controles">
                                         @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                             @Html.TextBoxFor(model => model.SolicitudNuevoCargo.NombreCargo, new { maxlength = "50", onkeyup = "aMays(event, this)" })
                                             <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.NombreCargo)
                                             </div>
                                        }
                                        else
                                        {
                                              @Html.TextBoxFor(model => model.SolicitudNuevoCargo.NombreCargo, new { disabled = "disabled" })
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="selectError">Dependencia</label>
                                    <div class="controles">
                                        @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudNuevoCargo.IdeDependencia))
                                            <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.IdeDependencia)
                                            </div>
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudNuevoCargo.IdeDependencia), new { disabled = "disabled" })
                                        }
                                    </div>
                                </div>
                            </td>
                           
                        </tr>
                        <tr class="formulario-fila">
                            <td></td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Descripción</label>
                                    <div class="controles">
                                         @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.TextBoxFor(model => model.SolicitudNuevoCargo.DescripcionCargo, new { maxlength = "100", onkeyup = "aMays(event, this)" })
                                            <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.DescripcionCargo)
                                            </div>
                                         }
                                        else
                                        {
                                             @Html.TextBoxFor(model => model.SolicitudNuevoCargo.DescripcionCargo, new { disabled = "disabled" })
                                         }
                                    </div>
                                </div>
                            </td>
                             <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Departamento</label>
                                    <div class="controles">
                                        @*@Html.TextBoxFor(model => model.DepartamentoSession.NombreDepartamento, new { @disabled = "disabled" })
                                        @Html.HiddenFor(model => model.DepartamentoSession.IdeDepartamento)*@
                                         @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                             @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudNuevoCargo.IdeDepartamento))
                                             <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.IdeDepartamento)
                                            </div>
                                         }
                                        else
                                        {
                                              @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudNuevoCargo.IdeDepartamento), new { disabled = "disabled" })
                                         }
                                    </div>
                                </div>
                            </td>
                            
                        </tr>
                        <tr class="formulario-fila">
                            <td></td>
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Nro. Posiciones</label>
                                    <div class="controles">
                                        @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.TextBoxFor(model => model.SolicitudNuevoCargo.NumeroPosiciones, new { @class = "input-mini", maxlength = "2" })
                                         }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.SolicitudNuevoCargo.NumeroPosiciones, new { disabled = "disabled" })
                                        }
                                    </div>
                                </div>
                            </td> 
                            <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Área</label>
                                    <div class="controles">
                                         @* @Html.TextBoxFor(model => model.AreaSession.NombreArea, new { @disabled = "disabled" })
                                        @Html.HiddenFor(model => model.AreaSession.IdeArea)*@
                                        @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudNuevoCargo.IdeArea))
                                            <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.IdeArea)
                                            </div>
                                         }
                                        else
                                        {
                                             @Html.DropDownListFor(model => model.SolicitudNuevoCargo.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudNuevoCargo.IdeArea), new { disabled = "disabled" })
                                         }
                                   </div>
                                </div>
                            </td>  
                                      
                        </tr>
                        <tr class="formulario-fila">
                        <td class="span5">
                                <div class="">
                                    <label class="control-label" for="inputSuccess">Rango salarial bruto propuesto (S/.)</label>
                                    <div class="controles">
                                        @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                                        {
                                            @Html.DropDownListFor(model => model.SolicitudNuevoCargo.TipoRangoSalarial, new SelectList(Model.RangosSalariales, "Valor", "Descripcion", Model.SolicitudNuevoCargo.TipoRangoSalarial))
                                            <div class="tex-error" style="font-size:12px;color:red"> 
                                                @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.TipoRangoSalarial)
                                            </div>
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(model => model.SolicitudNuevoCargo.TipoRangoSalarial, new SelectList(Model.RangosSalariales, "Valor", "Descripcion", Model.SolicitudNuevoCargo.TipoRangoSalarial), new { disabled = "disabled" })
                                        }
                                    </div>
                                </div>
                            </td>  
                        </tr>
                    </tbody>
                </table>



            <h5>Perfil</h5>
            
            <div>
                <div class="grilla-opciones">
                <h6>Estudios</h6>
                <div style="clear:both"></div>
                     @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                     {
                        @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionEstudios, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", maxlength = "255", onkeyup = "aMays(event, this)" })
                        <div class="tex-error" style="font-size:12px;color:red"> 
                            @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.DescripcionEstudios)
                        </div>
                     }
                    else
                    {
                          @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionEstudios, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", disabled = "disabled"})
                     }
                </div>
            </div>
            <div>
                <div class="grilla-opciones">
                <h6>Competencias</h6>
                <div style="clear:both"></div>
                 @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                 {
                    @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionCompetencias, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", maxlength = "255", onkeyup = "aMays(event, this)" })
                    <div class="tex-error" style="font-size:12px;color:red"> 
                        @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.DescripcionCompetencias)
                    </div>
                 }
                 else
                 {
                     @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionCompetencias, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", disabled = "disabled"})
                 }
                </div>
            </div>
            <div>
                <div class="grilla-opciones">
                <h6>Funciones</h6>
                <div style="clear:both"></div>
                @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                {
                    @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionFunciones, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px; ", maxlength = "255", onkeyup = "aMays(event, this)" })
                    <div class="tex-error" style="font-size:12px;color:red"> 
                        @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.DescripcionFunciones)
                    </div>
                }
                else
                {
                     @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionFunciones, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px; ", maxlength = "255", onkeyup = "aMays(event, this)" })
                }
                </div>
            </div>
            <div>
                <div class="grilla-opciones">
                <h6>Observaciones adicionales</h6>
                <div style="clear:both"></div>
                     @if (TipoSolicitud.Nuevo.Equals(Model.Pagina))
                     {
                        @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionObservaciones, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", maxlength = "255", onkeyup = "aMays(event, this)" })
                        <div class="tex-error" style="font-size:12px;color:red"> 
                            @Html.ValidationMessageFor(model => model.SolicitudNuevoCargo.DescripcionObservaciones)
                        </div>
                     }
                    else
                    {
                         @Html.TextAreaFor(model => model.SolicitudNuevoCargo.DescripcionObservaciones, new { @style = "margin: 10px 10px 10px; width: 890px; height: 54px;", disabled = "disabled" })
                     }
                </div>
            </div>
            <div class="form-actions"> 
                
                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <a class="btn" href="@Url.Action("Index", "SolicitudConsulta")" ><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                }
                else
                {    
                    <a class="btn" href="@Url.Action("Index", "SolicitudNuevoCargo")" ><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                }

                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <span></span>
                }
                else
                {
                    if (Accion.Aprobar.Equals(Model.Accion))
                    {
                        <a class="btn btn-info" onclick="mostrarAprobarDesaprobar();"><i class="icon-list icon-white"></i> Aprob/Rech</a>
                    }

                    if (Accion.Enviar.Equals(Model.Accion))
                    {
                       <a id="btnEnviar" class="btn btn-info" onclick="validarFormulario();"> <i class="icon-screenshot icon-white"></i> Enviar</a>
                    }
                }
                  
            </div>

        </div>
    </div>
</div>

}    

<div id="updateDialogAprobacion" title="Aprobacion/Rechazo Solicitud" ></div>
<div id="updateDialogConfirmacion" title="CONFIRMACIÓN" ><p>¿Está seguro de enviar la solicitud de nuevo cargo?</p></div>

@*<div id="divMensaje">
    <span id="spnMensaje"></span>
</div>  *@  
  
@*<div id="divMensajeOtro">
    <span id="spnMensajeOtro"></span>
</div> *@   