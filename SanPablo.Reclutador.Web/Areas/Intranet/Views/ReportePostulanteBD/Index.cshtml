@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ReportePostulanteViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Reporte de Postulantes BD";
}
@section Head{
         <style type="text/css">
        th.ui-th-column div {
            white-space: normal !important;
            height: auto !important;
            padding: 2px;
        }
    </style>
}


@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        SanPablo.Numeros('EdadInicio');
        SanPablo.Numeros('EdadFin');

        $('#btnPDF').click(function () {
           window.open('@Url.Action("ObtenerReportePDF", "ReportePostulanteBD")');
        });

        $('#btnLimpiar').click(function () {
            $('#grdListPostulantesBD').jqGrid('clearGridData');
        });

        $('#btnPDF').hide();
        $('#btnEXCEL').hide();

        $('#btnBuscarPostulantes').click(function () {
            var nombreCargo = $('#Solicitud_nombreCargo').val();
            var edadInicio = $('#EdadInicio').val();
            var edadFin = $('#EdadFin').val();

            if (nombreCargo.length > 0)
            {
                if (edadInicio>0) {
                    if (edadInicio > edadFin && edadFin!=0) {
                        MostrarMensaje('La edad Inicial debe ser menor a la edad final', "ALERTA");
                        return;
                    }
                }

                if (edadFin > 0) {
                    if (edadInicio > edadFin && edadFin != 0 && edadInicio!=0) {
                        MostrarMensaje('La edad Inicial debe ser menor a la edad final', "ALERTA");
                        return;
                    }
                }

                if (validarFecha()) {
                    $('#grdListPostulantesBD').trigger('reloadGrid');

                    var count = $("#grdListPostulantesBD").getGridParam("reccount");
                    if (count == 0) {
                        $('#btnPDF').hide();
                        $('#btnEXCEL').hide();

                        MostrarMensaje('No se encontrarón coincidencias, ingrese otros valores', "ALERTA");
                    }
                    else {
                        $('#btnPDF').show();
                        $('#btnEXCEL').show();
                    }
                }
            }
            else
            {
                MostrarMensaje('Ingresar un Cargo a buscar', "ALERTA");
            }
           
        });

        $('#Registro_Desde,#Registro_Hasta').datepicker({
            showOn: "button",
            buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
        });

        $('#Registro_Desde,#Registro_Hasta').attr("readonly", "readonly");

       
        $('select#Departamentos').change(function () {
            var ideDepartamento = $(this).val();
            $("select#Distritos").empty();
            $("select#Distritos").append("<option value='0'> SELECCIONAR </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listarUbigeos","ReportePostulanteBD")',
                data: { ideUbigeoPadre: ideDepartamento },
                success: function (respuesta) {
                    $("select#Provincias").empty();
                    $("select#Provincias").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#Provincias").append("<option value='"
                        + item.IdeUbigeo + "'>" + item.Nombre + "</option>");
                    }
                );
                }
            });
        })

        //Cargar Distritos
        $('select#Provincias').change(function () {
            var ideProvincia = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listarUbigeos","ReportePostulanteBD")',
                data: { ideUbigeoPadre: ideProvincia },
                success: function (respuesta) {
                    $("select#Distritos").empty();
                    $("select#Distritos").append("<option value='0'> SELECCIONAR </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#Distritos").append("<option value='"
                        + item.IdeUbigeo + "'>" + item.Nombre + "</option>");
                    }
                );
                }
            });
        })


        jQuery("#grdListPostulantesBD").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                       { field: 'nombreCargo', data: $("#Solicitud_nombreCargo").val() },
                       { field: 'areaEstudio', data: $("#AreasEstudio").val() },
                       { field: 'rangoSalario', data: $("#RangosSalariales").val() },
                       { field: 'departamento', data: $("#Departamentos").val() },
                       { field: 'provincia', data: $("#Provincias").val() },
                       { field: 'distrito', data: $("#Distritos").val() },
                       { field: 'fecDesde', data: $("#Registro_Desde").val() },
                       { field: 'fecHasta', data: $("#Registro_Hasta").val() },
                       { field: 'EdadInicio', data: $("#EdadInicio").val() },
                       { field: 'EdadFin', data: $("#EdadFin").val() }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("listaPostulantesBD", "ReportePostulanteBD")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdListPostulantesBD')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['IdePostulante','Fecha de registro de CV','Departamento','Provincia','Distrito','Nombres y Apellidos','Cel. / Fijo','Email','Cargo',
                       'Edad','Tipo de Estudios','Área de Estudios','Rango Salarial', 'CV'],
            colModel: [
                    { name: 'IdePostulante', index: 'IdePostulante', align: 'center', hidden: true, sortable: false },
                    { name: 'FechaRegistro', index: 'FechaRegistro', align: 'center', hidden: false, sortable: true },
                    { name: 'Departamento', index: 'Departamento', align: 'center', hidden: false, sortable: false },
                    { name: 'Provincia', index: 'Provincia', align: 'center', hidden: false, sortable: false },
                    { name: 'Distrito', index: 'Distrito', align: 'center', hidden: false, sortable: false },
                    { name: 'NombresApellidos', index: 'NombresApellidos', align: 'center', hidden: false, sortable: false },
                    { name: 'MovilFijo', index: 'MovilFijo', align: 'center', hidden: false, sortable: false },
                    { name: 'Email', index: 'Email', align: 'center', hidden: false, sortable: false },
                    { name: 'Cargo', index: 'Cargo', align: 'center', hidden: false, sortable: false },
                    { name: 'Edad', index: 'Edad', align: 'center', hidden: false, sortable: false },
                    { name: 'TipoEstudios', index: 'TipoEstudios', align: 'center', hidden: false, sortable: false },
                    { name: 'AreaEstudios', index: 'AreaEstudios', align: 'center', hidden: false, sortable: false },
                    { name: 'RangoSalarial', index: 'RangoSalarial', align: 'center', hidden: false, sortable: false },
                    { name: 'IdePostulante', index: 'IdePostulante', align: 'center', hidden: false, sortable: false, formatter: ImprimirFormatter }
            ],
            pager: jQuery('#grdPagerListPostulantesBD'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'IdePostulante',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,

            postData: {
            }, loadComplete: function (data) {
            }
        });


        var grid = $("#grdListPostulantesBD"), headerRow, rowHight, resizeSpanHeight;

        // get the header row which contains
        headerRow = grid.closest("div.ui-jqgrid-view")
            .find("table.ui-jqgrid-htable>thead>tr.ui-jqgrid-labels");

        // increase the height of the resizing span
        resizeSpanHeight = 'height: ' + headerRow.height() +
            'px !important; cursor: col-resize;';
        headerRow.find("span.ui-jqgrid-resize").each(function () {
            this.style.cssText = resizeSpanHeight;
        });

        // set position of the dive with the column header text to the middle
        rowHight = headerRow.height();
        headerRow.find("div.ui-jqgrid-sortable").each(function () {
            var ts = $(this);
            ts.css('top', (rowHight - ts.outerHeight()) / 2 + 'px');
        });

        
    });


    function ImprimirFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
                var archivo = 'printer.png';
                //var strImg = '<img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV">';
                var strImg = '<a target="_blank" href=' + '@Url.Action("GetCvPDF", "Ranking")' + '/' + rowObject[13] + '><img src="' + imgPath + archivo + '" width="16" height="16" title="Ver CV" alt="Ver CV"></a>';
            return strImg;
  }

    function validarFecha() {

        var fechaInicial = $('#Registro_Desde').val();
        var fechaFinal = $('#Registro_Hasta').val();

        if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {

            MostrarMensaje('Las fechas son obligatorias', "ALERTA");
            return false;
        }

        if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
            MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "ALERTA");
            return false;
        }

        dif = Funciones.diasEntreFechas(fechaInicial, fechaFinal);
        if (dif >= 90) {
            MostrarMensaje('La diferencia entre fechas no puede ser mayor a 3 meses', "ALERTA");
            return false;
        }

        return true;

    }

    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }


    //AUTOCOMPLETAR

    $(function () {
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }
        $("#Solicitud_nombreCargo").bind("keydown", function (event) {
            if (event.keyCode === $.ui.keyCode.TAB && $(this).data("autocomplete").menu.active) {
                event.preventDefault();
            }
        })
        $("#Solicitud_nombreCargo").autocomplete({
            source: function (request, response) {
                //define a function to call your Action (assuming UserController)
                $.ajax({
                    url: '@Url.Action("autoCompletarCargo", "ReportePostulanteBD")',
                    type: "GET",
                    dataType: "json",
                    //query will be the param used by your action method
                    data: { query: request.term },
                    term: extractLast(request.term),
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item, value: item };
                        }))
                    }
                })
            },
            search: function () {
                // custom minLength
                var term = extractLast(this.value);
                if (term.length < 1) {
                    return false;
                }
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                    this.value = ui.item.value;
                    return false;
                //if u want to select items in comma separate then
                //                var terms = split(this.value);
                //                // remove the current input
                //                terms.pop();
                //                // add the selected item
                //                terms.push(ui.item.value);
                //                // add placeholder to get the comma-and-space at the end
                //                terms.push("");
                //                this.value = terms.join(", ");
                //                return false;
            }
        });
    });


</script>
    }
@using (Html.BeginForm("Index", "ReportePostulantesBD", FormMethod.Post))
{
   <div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Reporte de Postulantes de BD</h5>
            </div>
           
               <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    
                    <td class="span5" style="width:420px" >
                        <div class="">
                            <label class="control-label" for="selectError" style="width:145px;text-align:left">Cargo<span class="text-error">*</span></label>
                            <div class="controles">
                                @Html.TextBoxFor(model => model.Solicitud.nombreCargo, new { onkeydown="aMays(event, this)"})
                            </div>
                        </div>
                    </td>
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Departamento</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.Departamentos, new SelectList(Model.Departamentos, "IdeUbigeo", "Nombre", Model.Departamentos))
                            </div>
                        </div>
                    </td>

                </tr>

               <tr class="formulario-fila">
                    <td class="span5" style="width:420px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Área de Estudios</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.AreasEstudio, new SelectList(Model.AreasEstudio, "Valor", "Descripcion", Model.AreasEstudio))
                            </div>
                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Provincia</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.Provincias, new SelectList(Model.Provincias, "IdeUbigeo", "Nombre", Model.Provincias))
                            </div>
                        </div>
                    </td>  

                </tr>

                   
               <tr class="formulario-fila">
                    <td class="span5" style="width:420px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Rango Salarial</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.RangosSalariales, new SelectList(Model.RangosSalariales, "Valor", "Descripcion", Model.RangosSalariales))
                            </div>
                        </div>
                    </td>

                     <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Distrito</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.Distritos, new SelectList(Model.Distritos, "IdeUbigeo", "Nombre", Model.Distritos))
                            </div>
                        </div>
                    </td>  

                </tr>

                   <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Fecha registro CV <span class="text-error">*</span></label>
                            <div class="controles" style="width: 290px">
                                <input type="text" class="input-small"  id="Registro_Desde" name="Registro.Desde" placeholder=" Desde" >
                                 <input type="text" class="input-small"  id="Registro_Hasta" name="Registro.Hasta" placeholder=" Hasta">
                            </div>


                           

                        </div>
                    </td>
                       <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:145px;text-align:left">Rango Edad </label>
                            <div class="controles" style="width: 300px" >
                                @Html.DropDownListFor(model => model.EdadInicio, new SelectList(Model.listaEdad, "IdEdad", "DesEdad", Model.EdadInicio),new {maxlength="2" , style="width:100px;"})
                                &nbsp;a&nbsp;
                                @Html.DropDownListFor(model => model.EdadFin, new SelectList(Model.listaEdad, "IdEdad", "DesEdad", Model.EdadFin),new {maxlength="2" ,style="width:100px;"})
                                
                                @*@Html.TextBoxFor(model => model.EdadInicio, new {@class = "input-xmini",maxlength="2" })
                                
                                 @Html.TextBoxFor(model => model.EdadFin, new { @class = "input-xmini", style="display:inline-block",maxlength="2"})  *@
                            </div>
                            
                        </div>
                    </td> 
                    </tr>

                    <tr class="formulario-fila">
                    @*<td class="span5">
                        <div class="" >
                            <label class="control-label" for="inputSuccess" ></label>
                            <div class="controles" style="width: 300px">
                                
                            </div>
                        </div>
                    </td>*@
                     
                       @* <td class="" style="width:100px">
                        <div class="">
                            <label class="control-label" for="inputSuccess" style="width:90px">  a  </label>
                            <div class =" controles" >
                               
                            </div>
                            
                        </div>
                    </td> *@

                </tr>

                <tr class="formulario-accion offset9">
                    <td>
                    <a id="btnBuscarPostulantes"  class="btn btn-info"><i class="icon-search icon-white"></i> Buscar</a>
                    <button id ="btnLimpiar" type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                    </td>
                </tr>

                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>
                </table>
        

            @*<fieldset>
            <legend>Resultado </legend>
            <input type="text" />
                 <asp:Textbox runat="Server" id="txt1" />
   
            </fieldset>*@
             @*<div class="" style="margin-left:20px;">
                <h5 >Resultado</h5>
             
             </div>*@
            <div class="grilla-opciones">
                <div class="opciones">

                    <a class="btn btn-info" id="btnPDF"><i class="icon-eye-open icon-white"></i> PDF</a>
                    <a class="btn btn-info" id="btnEXCEL" href="@Url.Action("ObtenerReporteExcel", "ReportePostulanteBD")"><i class="icon-tasks  icon-white"></i> EXCEL</a>
                </div>
                <div style="clear:both"></div>
            </div>

            <div class="tabla-datos">
                <table id="grdListPostulantesBD">
                </table>
                <div id="grdPagerListPostulantesBD">
                </div>
            </div>
            <div class="form-actions">
             
            </div>

            

                
           

        </div>

    </div>
</div>
    
}

<div id="divMensaje">
	<span id="spnMensaje"></span>
</div>