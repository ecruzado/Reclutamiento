@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ExamenViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado de Examenes";
}

@section Head{
}

@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>

<script type="text/javascript">
    //Table initialisation 

   
    $(document).ready(function () {
    
    $('#btnAgregarCategoria').click(function () {
        var codigoExamen = $("#Examen_IdeExamen").val();
        
        if (codigoExamen != null && codigoExamen > 0) {
            mostrarCategoria(codigoExamen);
        } else {
            MostrarMensaje('Ingrese un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

    });


    $("#btnGuardarExamen").click(function () {
        //if ($("#frmCriterio").validate().form()) {
        if ($('#frmExamenEdicion').valid()) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("Edicion", "Examen")',
                data: $("#frmExamenEdicion").serialize(),
                traditional: true,
                success: function (data) {
                    if (data.redirecciona) {
                        SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                    }

                    if (data.Resultado) {
                        information("divMensaje", "spnMensaje", data.Mensaje, "INFORMATIVO", data.IdDato);
                    }
                    else {
                        MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    }

                }
            });
        }
              
    });



    $('#btnEliminarCategoria').click(function () {
        var codigoExamen = $("#Examen_IdeExamen").val();
        var codigoCategoria = jQuery('#grdListaCatxExamen').jqGrid('getGridParam', 'selrow');
       
        if (codigoCategoria != null && codigoCategoria > 0) {
            $('#confirmacion').dialog('open');
        } else {
            MostrarMensaje('Seleccione una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

    });

   

    $("#spanConfirmacion").html("¿Desea eliminar el registro?")
    $('#confirmacion').dialog({
        autoOpen: false,
        resizable:false,
        modal: true,
        title: "CONFIRMACIÓN",
        buttons: {
            "Aceptar": function () {
                var codigoExamen = $("#Examen_IdeExamen").val();

                var selr = jQuery('#grdListaCatxExamen').jqGrid('getGridParam', 'selrow');
                var rowData = jQuery('#grdListaCatxExamen').jqGrid('getRowData', selr);
                var codigoCategoria = rowData.IDECATEGORIA;

                if (codigoCategoria != null && codigoCategoria > 0) {
                    EliminarCategoria(codigoExamen, codigoCategoria);
                } else {
                    MostrarMensaje('Seleccione una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                }
                $(this).dialog("close");
            },
            "Cancelar": function () {
                $(this).dialog("close");
            }
        }
    });
    

       

    $('#categoriaDialog').dialog({
        autoOpen: false,
        width: 740,
        height: 700,
        resizable: false,
        modal: true,
        buttons: {
            "Grabar": function () {
                $('#confSelc').dialog('open');
               

            },
            "Cancelar": function () {
                $(this).dialog("close");
            }
        }
    });

    
    $("#spanConfSelc").html("¿Desea agregar las categorías?")
    $('#confSelc').dialog({
        autoOpen: false,
        resizable:false,
        modal: true,
        title: "CONFIRMACIÓN",
        buttons: {
            "Aceptar": function () {
                  $.ajax({
                    data: { 
                        selc: $("#grdListaCategoriaPopup").jqGrid('getGridParam', 'selarrrow'),
                        codExamen: $('#Examen_IdeExamen').val()
                    },
                    type: "POST",
                    url: '@Url.Action("GetListaCategoria", "Examen")',
                    traditional: true,
                    success: function () {
                        $('#confSelc').dialog("close");
                        $('#categoriaDialog').dialog("close");
                        $('#grdListaCatxExamen').trigger('reloadGrid');

                    }
                });
            },
            "Cancelar": function () {
                $(this).dialog("close");
            }
        }
    });





    jQuery("#grdListaCatxExamen").jqGrid({
         url: '@Url.Action("ListaCatxExamen", "Examen")' + '?id=' + $("#Examen_IdeExamen").val(),
         datatype: 'json',
         mtype: 'POST',
         colNames: ['','', 'Nombre', 'Descripción'],
         colModel: [
                 { name: 'IdeExamenxCategoria', index: 'IdeExamenxCategoria', align: 'center', editable: false, sortable: false, hidden: true },
                 { name: 'IDECATEGORIA', index: 'IDECATEGORIA', align: 'left', editable: false, hidden: true },
                 { name: 'Nombre', index: 'Nombre', align: 'left', editable: false, width: 350 },
                 { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, width: 450 }
                // { name: 'Detalle', index: 'Detalle', align: 'center', editable: false, width: 50, sortable: false, formatter: DetalleFormatter },
                   
         ],
         pager: jQuery('#grdPager'),
         rownumbers: true,
         sortname: 'IdeExamenxCategoria',
         sortorder: 'desc',
         viewrecords: true,
        
         rules: true ,
         height: 160,
         autowidth: true,
         cellsubmit: 'clientArray',
         hidegrid: false,
         rowNum: 10,
         autowidth: true,
         shrinkToFit: false,




         postData: {
         },
         loadComplete: function (data) {
             getTiempoExamen();
         }


     });


    });

    function DetalleFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'application.gif';
        var strImg = '<a target="_blank" href=' + '@Url.Action("GetExamenPDF", "Examen")' + '/' + rowObject[0] + '><img src="' + imgPath + archivo + '" width="16" height="16" title="Ver detalle" alt="Ver detalle"></a>';
         return strImg;

    }


    function RedireccionaExamen(selr) {
        var loc = window.location.href
        console.log(loc);

       
        window.location = '@Url.Action("Edicion", "Examen", new { id = ""})' + '/' + selr;
       

    }


    function information(selectorDiv, selectorSpan, msg, title, selr) {
        $('#' + selectorSpan).html(msg);
        var opt = {
            title: title,
            autoOpen: false,
            resizable: false,
            modal: true,
            buttons: {
                "Aceptar": function () {
                    $(this).dialog("close");
                    RedireccionaExamen(selr);
                }
            }
        };
        $('#' + selectorDiv).dialog(opt).dialog('open');

    }



    function getTiempoExamen() {
        var codigoExamen = $("#Examen_IdeExamen").val();

        $.ajax({
            data: {
                id: codigoExamen
            },
            type: "POST",
            url: "@Url.Action("getTiempoExamen", "Examen")",
            traditional: true,
            success: function (data) {
                if (data.Resultado) {
                    $("#Examen_Duracion").val(data.IdDato);
                }
            }
        });
    }


    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }


    function mostrarCategoria(id) {
        var dialogDiv = $('#categoriaDialog');
        //$.get("/Intranet/Categoria/IniciaPopupCategoria/" + id, function (data) {
        
            $.get('@Url.Action("IniciaPopupCategoria", "Categoria",new { area = "Intranet" })?id=' + id, function (data) {

            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#categoriaDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }


    function EliminarCategoria(codigoExamen, codigoCategoria) {

        $.ajax({
            data: {
                id: codigoExamen,
                codCat: codigoCategoria
            },
            type: "POST",
            url: "@Url.Action("EliminarCategoriaxExamen", "Examen")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "ALERTA");
                } else {
                    $('#grdListaCatxExamen').trigger('reloadGrid');
                }
            }
        });

    }


</script>
}

@using (Html.BeginForm("Edicion", "Examen", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExamenEdicion" }))
{
    @Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Examen</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">@Model.Examen.DesEstado</button>
                </div>
            </div>
            <table class="formulario-busqueda">
               <tr class="formulario-fila">
                    <td class="span5">
                        
                    <label class="control-label" for="inputSuccess">Código</label>
                    <div class="controles">
                        <input id="Examen_IdeExamen" name="Examen.IdeExamen" type="text" value="@Model.Examen.IdeExamen" readonly="readonly" > 
                   
                    </div>
                        
                    </td>
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Nombre<span class="text-error">*</span></label>
                            <div class="controles">
                                
                                @if (Accion.Consultar.Equals(Session["Accion"]))
                                {
                                    @Html.TextBoxFor(model => model.Examen.NomExamen, new { @class = "textoFormulario", @maxlength = "20",disabled = "disabled",onblur="aMays(event, this)"}) 
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Examen.NomExamen, new { @class = "textoFormulario", @maxlength = "20",onblur="aMays(event, this)" }) 
                                    <div class="text-error" style="font-size:12px;"> 
                                        @Html.ValidationMessageFor(model => model.Examen.NomExamen)
                                    </div>    
                                }

                                
                            </div>
                       
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Descripción<span class="text-error">*</span></label>
                            <div class="controles">
                                 @if (Accion.Consultar.Equals(Session["Accion"]))
                                 {
                                    @Html.TextBoxFor(model => model.Examen.DescExamen, new { @class = "textoFormulario", @maxlength = "150",disabled = "disabled",onblur="aMays(event, this)" }) 
                                 }
                                 else
                                 {
                                    @Html.TextBoxFor(model => model.Examen.DescExamen, new { @class = "textoFormulario", @maxlength = "150",onblur="aMays(event, this)" })  
                                     <div class="text-error" style="font-size:12px;"> 
                                        @Html.ValidationMessageFor(model => model.Examen.DescExamen)
                                    </div> 
                                 }
                            </div>
                        
                    </td>
                    <td class="span5">
                      
                            <label class="control-label" for="inputSuccess">Tipo<span class="text-error">*</span></label>
                            <div class="controles">
                                
                                 @if (Accion.Consultar.Equals(Session["Accion"]))
                                 {
                                     @Html.DropDownListFor(model => model.Examen.TipExamen, new SelectList(Model.TipoExamen, "Valor", "Descripcion", Model.Examen.TipExamen), new { disabled = "disabled"}) 
                                 }
                                 else
                                 {
                                     @Html.DropDownListFor(model => model.Examen.TipExamen, new SelectList(Model.TipoExamen, "Valor", "Descripcion", Model.Examen.TipExamen)) 
                                     <div class="text-error" style="font-size:12px;"> 
                                        @Html.ValidationMessageFor(model => model.Examen.TipExamen)
                                    </div> 
                                 }
                                
                            </div>
                      
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                            <label class="control-label" for="inputSuccess">Duración</label>
                            <div class="controles">
                              <input  id="Examen_Duracion" maxlength="20" name="Examen.Duracion" type="text" value="@Model.Examen.Duracion" readonly="readonly"> 
                           </div>
                     </td>
                </tr>
               
            </table>

            <div class="form-actions">
            
                @if (Session["Accion"].Equals(Accion.Consultar))
                {
                  <div></div>
                }else
	            {
                  <a  id="btnGuardarExamen" class ="btn btn-info"><i class=" icon-hdd icon-white"></i>Grabar</a>
                }
                
            </div>


            @if (Session["Accion"].Equals(Accion.Editar) || Session["Accion"].Equals(Accion.Consultar))
            {

                if (Session["Accion"].Equals(Accion.Consultar))
                {
                    <div></div>
                }
                else
                {
                    <div class="grilla-opciones">
                        <h6>Categorías vinculadas</h6>
                        <div class="opciones">
                            <a  id="btnAgregarCategoria" class ="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a  id="btnEliminarCategoria" class ="btn btn-small btn-info" title="Eliminar"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                        <div style="clear:both"></div>
                    </div>     
                }
               
                <div class="tabla-datos">
                    <table id="grdListaCatxExamen">
                    </table>
                    <div id="grdPager"></div>
                </div>
            }

            <div class="form-actions">
            <a class="btn" href="@Url.Action("Index", "Examen", new { area = "Intranet" })"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
            
              
                
            </div>
            
        </div>
    </div>
</div>
}
<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>
<div id="categoriaDialog" title="Buscar Categoria"></div>
<div id="confirmacion"><span id="spanConfirmacion"></span></div>

<div id="confSelc"><span id="spanConfSelc"></span></div>

