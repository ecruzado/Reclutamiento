@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ExamenViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado de Examenes";
}

@section Head{
}

@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>

<script type="text/javascript">
    //Table initialisation 

   
    $(document).ready(function () {
    
    $('#btnAgregarCategoria').click(function () {
        var codigoExamen = $("#Examen_IdeExamen").val();
        
        if (codigoExamen != null && codigoExamen > 0) {
            mostrarCategoria(codigoExamen);
        } else {
            MostrarMensaje('Ingrese un registro', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

    });


    $('#btnEliminarCategoria').click(function () {
        var codigoExamen = $("#Examen_IdeExamen").val();
        var codigoCategoria = jQuery('#grdListaCatxExamen').jqGrid('getGridParam', 'selrow');
       
        if (codigoCategoria != null && codigoCategoria > 0) {
            $('#confirmacion').dialog('open');
        } else {
            MostrarMensaje('Seleccione una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

    });

   

    $("#spanConfirmacion").html("¿Desea eliminar el registro?")
    $('#confirmacion').dialog({
        autoOpen: false,
        modal: true,
        title: "Sistema de Reclutamiento Y Seleccion de Personal",
        buttons: {
            "Si": function () {
                var codigoExamen = $("#Examen_IdeExamen").val();

                var selr = jQuery('#grdListaCatxExamen').jqGrid('getGridParam', 'selrow');
                var rowData = jQuery('#grdListaCatxExamen').jqGrid('getRowData', selr);
                var codigoCategoria = rowData.IDECATEGORIA;

                if (codigoCategoria != null && codigoCategoria > 0) {
                    EliminarCategoria(codigoExamen, codigoCategoria);
                } else {
                    MostrarMensaje('Seleccione una categoria', "Sistema de Reclutamiento Y Seleccion de Personal");
                }
                $(this).dialog("close");
            },
            "No": function () {
                $(this).dialog("close");
            }
        }
    });
    

       

    $('#categoriaDialog').dialog({
        autoOpen: false,
        width: 800,
        height: 750,
        resizable: false,
        modal: true,
        buttons: {
            "Grabar": function () {
                $.ajax({
                    data: { 
                        selc: $("#grdListaCategoriaPopup").jqGrid('getGridParam', 'selarrrow'),
                        codExamen: $('#Examen_IdeExamen').val()
                    },
                    type: "POST",
                    url: '@Url.Action("GetListaCategoria", "Examen")',
                    traditional: true,
                    success: function () {
                       
                        $('#grdListaCatxExamen').trigger('reloadGrid');


                    }
                });

            },
            "Cancelar": function () {
                $(this).dialog("close");
            }
        }
    });

    jQuery("#grdListaCatxExamen").jqGrid({
         url: '@Url.Action("ListaCatxExamen", "Examen")' + '?id=' + $("#Examen_IdeExamen").val(),
         datatype: 'json',
         mtype: 'POST',
         colNames: ['','', 'Nombre', 'Descripción', 'Detalle'],
         colModel: [
                 { name: 'IdeExamenxCategoria', index: 'IdeExamenxCategoria', align: 'center', editable: false, sortable: false, hidden: true },
                 { name: 'IDECATEGORIA', index: 'IDECATEGORIA', align: 'left', editable: false, hidden: true },
                 { name: 'Nombre', index: 'Nombre', align: 'left', editable: false, width: 350 },
                 { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, width: 450 },
                 { name: 'Detalle', index: 'Detalle', align: 'center', editable: false, width: 50, sortable: false, formatter: DetalleFormatter },
                   
         ],
         pager: jQuery('#grdPager'),
         rownumbers: true,
         sortname: 'IdeExamenxCategoria',
         sortorder: 'desc',
         viewrecords: true,
         cellEdit: true,
         rules: true ,
         height: 160,
         autowidth: true,
         cellsubmit: 'clientArray',
         hidegrid: false,
         rowNum: 10,
         autowidth: true,
         shrinkToFit: false,

         postData: {
         },
         loadComplete: function (data) {

         }


     });


    });

    function DetalleFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'application.gif';
        var strImg = '<a href="../Archivos/Categoria.pdf"><img src="' + imgPath + archivo + '" width="16" height="16" title="Ver detalle" alt="Ver detalle"></a>';
        return strImg;
    }

    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }


    function mostrarCategoria(id) {
        var dialogDiv = $('#categoriaDialog');
        $.get("/Intranet/Categoria/IniciaPopupCategoria/" + id, function (data) {
            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#categoriaDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }


    function EliminarCategoria(codigoExamen, codigoCategoria) {

        $.ajax({
            data: {
                id: codigoExamen,
                codCat: codigoCategoria
            },
            type: "POST",
            url: "@Url.Action("EliminarCategoriaxExamen", "Examen")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    $('#grdListaCatxExamen').trigger('reloadGrid');
                }
            }
        });

    }


</script>
}

@using (Html.BeginForm("Edicion", "Examen", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExamenEdicion" }))
{
    @Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Examen</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                </div>
            </div>
            <table class="formulario-busqueda">
               <tr class="formulario-fila">
                    <td class="span5">
                        
                    <label class="control-label" for="inputSuccess">Código</label>
                    <div class="controles">
                        <input id="Examen_IdeExamen" name="Examen.IdeExamen" type="text" value="@Model.Examen.IdeExamen" readonly="readonly" > 
                    
                    
                    </div>
                        
                    </td>
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Nombre</label>
                            <div class="controles">
                                
                                @if (Accion.Consultar.Equals(Session["Accion"]))
                                {
                                    @Html.TextBoxFor(model => model.Examen.NomExamen, new { @class = "textoFormulario", @maxlength = "20",disabled = "disabled"}) 
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Examen.NomExamen, new { @class = "textoFormulario", @maxlength = "20" })     
                                }

                                
                            </div>
                       
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Descripción</label>
                            <div class="controles">
                                 @if (Accion.Consultar.Equals(Session["Accion"]))
                                 {
                                    @Html.TextBoxFor(model => model.Examen.DescExamen, new { @class = "textoFormulario", @maxlength = "150",disabled = "disabled" }) 
                                 }
                                 else
                                 {
                                    @Html.TextBoxFor(model => model.Examen.DescExamen, new { @class = "textoFormulario", @maxlength = "150" })  
                                 }
                            </div>
                        
                    </td>
                    <td class="span5">
                      
                            <label class="control-label" for="inputSuccess">Tipo</label>
                            <div class="controles">
                                
                                 @if (Accion.Consultar.Equals(Session["Accion"]))
                                 {
                                     @Html.DropDownListFor(model => model.Examen.TipExamen, new SelectList(Model.TipoExamen, "Valor", "Descripcion", Model.Examen.TipExamen), new { disabled = "disabled"}) 
                                 }
                                 else
                                 {
                                     @Html.DropDownListFor(model => model.Examen.TipExamen, new SelectList(Model.TipoExamen, "Valor", "Descripcion", Model.Examen.TipExamen)) 
                                 }
                                
                            </div>
                      
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                            <label class="control-label" for="inputSuccess">Duración</label>
                            <div class="controles">
                              <input  id="Examen_Duracion" maxlength="20" name="Examen.Duracion" type="text" value="@Model.Examen.Duracion" readonly="readonly"> 
                           </div>
                     </td>
                </tr>
               
            </table>

            @if (Session["Accion"].Equals(Accion.Editar) || Session["Accion"].Equals(Accion.Consultar))
            {

                if (Session["Accion"].Equals(Accion.Consultar))
                {
                    <div></div>
                }
                else
                {
                    <div class="grilla-opciones">
                        <h6>Categorías vinculadas</h6>
                        <div class="opciones">
                            <a  id="btnAgregarCategoria" class ="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a>  
                            <a  id="btnEliminarCategoria" class ="btn btn-small btn-info" title="Eliminar"><i class="icon-remove icon-white"></i></a>                                  
                        </div>
                        <div style="clear:both"></div>
                    </div>     
                }
               
                <div class="tabla-datos">
                    <table id="grdListaCatxExamen">
                    </table>
                    <div id="grdPager"></div>
                </div>
            }

            <div class="form-actions">
            <a class="btn" href="@Url.Action("Index", "Examen", new { area = "Intranet" })"><i class="icon-arrow-left icon-cog"></i> Anterior</a>
            <button   type="submit"  class ="btn btn-info"><i class=" icon-hdd icon-white"></i>Grabar</button>
            </div>
            
        </div>
    </div>
</div>
}
<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>
<div id="categoriaDialog" title="Buscar Categoria"></div>
<div id="confirmacion"><span id="spanConfirmacion"></span></div>