@model SanPablo.Reclutador.Web.Areas.Intranet.Models.ExamenViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado Examen";
}
@section Head{
}

@section Scripts{
    <script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">
    //Table initialisation 
    $(document).ready(function () {

        
        $("#spanActivarDesactivar").html("¿Desea Activar/Desactivar el registro?")
        $('#divActivarDesactivar').dialogo({
            buttons: {
                "Si": function () {
                    var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdList').jqGrid('getRowData', selr);
                    var estado = rowData.CodigoEstado;
                    if (selr != null) {
                        ActivarDesactivarExamen(selr,estado);
                    } else {
                        MostrarMensaje('Seleccione un Examen', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#spanEliminar").html("¿Desea eliminar el registro?")
        $('#divEliminar').dialogo({
            buttons: {
                "Si": function () {
                    var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdList').jqGrid('getRowData', selr);
                    var estado = rowData.CodigoEstado;
                    if (selr != null) {
                        EliminarExamen(selr, estado);
                    } else {
                        MostrarMensaje('Seleccione un Examen', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });

        

        jQuery("#grdList").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sortField;
                migrilla.sord = postdata.sortOrder;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                       { field: 'idExamen', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') },
                       { field: 'tipExamen', data: $("#Examen_TipExamen").val() },
                       { field: 'estado', data: $("#Examen_EstActivo").val() },
                       { field: 'descrip', data: $("#Examen_DescExamen").val() }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListaExamen", "Examen")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdList')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['Estado','','', 'Nombre', 'Descripci&oacuten', '','Tipo', 'Duraci&oacuten (min)', 'Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [
                    { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                    { name: 'CodigoEstado', index: 'CodigoEstado', align: 'center', sortable: false, width: 50,hidden: true },
                    { name: 'IdeExamen', index: 'IdeExamen', align: 'center', sortable: false, hidden: true },
                    { name: 'Nombre', index: 'Nombre', align: 'left', width: 250 },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', width: 250 },
                    { name: 'Tipo', index: 'Tipo', align: 'left', hidden: true },
                    { name: 'TipExamenDes', index: 'TipExamenDes', align: 'left', width: 120 },
                    { name: 'TiempoTotal', index: 'TiempoTotal', align: 'left' },
                    { name: 'FechaCreacion', index: 'FechaCreacion', align: 'left', width: 100, hidden: true },
                    { name: 'UsuarioCreacion', index: 'UsuarioCreacion', align: 'left', width: 100, hidden: true },
                    { name: 'FechaModificacion', index: 'FechaModificacion', align: 'left', width: 100, hidden: true },
                    { name: 'UsuarioModificacion', index: 'UsuarioModificacion', align: 'left', width: 100, hidden: true }
            ],
             pager: jQuery('#grdPager'),
             rowNum: 10,
             rowList: [10, 30, 50],
             autowidth: true,
             rules: true,
             sortname: 'IdeExamen',
             sortorder: 'desc',
             viewrecords: true,
             height: 350,
             cellsubmit: 'clientArray',
             hidegrid: false,
             rownumbers: true,
             shrinkToFit: false,

             postData: {
             }, loadComplete: function (data) {
             }
         });


        $('#btnNuevoExamen').click(function () {
            var selr = 0;
            if (selr != null) {
                window.location = '@Url.Action("Nuevo", "Examen")';
            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });



        $('#btnActivarDesactivar').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            if (selr != null) {
              
                $('#divActivarDesactivar').dialog('open');
               
            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });


        $('#btnEliminar').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');


            var rowData = $('#grdList').jqGrid('getRowData', selr);
            var indEstado = rowData.CodigoEstado;

            if (selr != null) {

                if ("I"==indEstado) {
                    MostrarMensaje('El registro se encuentra desactivado', "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    $('#divEliminar').dialog('open');
                }

               

            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });

        
        $('#btnEditarExamen').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');

            var rowData = $('#grdList').jqGrid('getRowData', selr);
            var indEstado = rowData.CodigoEstado;

            if (selr != null) {

                if ("I" == indEstado) {
                    MostrarMensaje('El registro se encuentra desactivado', "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    window.location = '@Url.Action("Edicion", "Examen", new { area = "Intranet", id = "" })' + '/' + selr;
                }

            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

         });

        
        

        $('#btnGetPDF').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            if (selr != null) {

                window.open('@Url.Action("GetExamenPDF", "Examen")' + '/' + selr);

            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });



        $('#btnConsultarExamen').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');

            if (selr != null) {
                window.location = '@Url.Action("Consulta", "Examen")' + '/' + selr;

            } else {
                MostrarMensaje('Seleccione un examen', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });
        


        $('#btnEditarEvaluacion').click(function () {
            var ideEvaluacion = jQuery('#grdListEvaluacion').jqGrid('getGridParam', 'selrow');
            if (ideEvaluacion != null) {
                mostrarEditarEvaluacion(ideEvaluacion);
            }
            else {
                MostrarMensaje("Seleccionar una solicitud a Editar", "SAN PABLO");
            }
        });

    });


    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }

    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }


    function ActivarDesactivarExamen(selr,estado) {

        $.ajax({
            data: {
                id: selr,
                codEstado : estado
            },
            type: "POST",
            url: "@Url.Action("ActivarDesactivar", "Examen")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdList').trigger('reloadGrid');
                }
            }
        });

    }

    function EliminarExamen(selr, estado) {

        $.ajax({
            data: {
                id: selr
            },
            type: "POST",
            url: "@Url.Action("EliminarExamen", "Examen")",
            traditional: true,
            success: function (data) {
                if (data.Resultado == false) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdList').trigger('reloadGrid');
                }
            }
        });

    }

    


   

   
   
    


</script>
}

@using (Html.BeginForm("Index", "Examen", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmExamenIndex" }))
{
    @Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Examen</h5>
            </div>
            <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Tipo</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.Examen.TipExamen, new SelectList(Model.TipoExamen, "Valor", "Descripcion", Model.Examen.TipExamen), new { data_val = "false" }) 
                            </div>
                        </div>
                    </td>
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Descripcion</label>
                            <div class="controles">
                                @Html.TextBoxFor(model => model.Examen.DescExamen, new { @class = "textoFormulario", @maxlength = "150", data_val = "false", onkeyup = "aMays(event, this)" }) 
                            </div>
                        </div>
                    </td>
                 </tr>
                 <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Estado</label>
                            <div class="controles">
                               @Html.DropDownListFor(model => model.Examen.EstActivo, new SelectList(Model.TipoEstado, "Valor", "Descripcion", Model.Examen.EstActivo), new { data_val = "false" }) 
                            </div>
                        </div>
                    </td>
                </tr>
                <tr class="formulario-accion offset9">
                    <td>
                    @if (Visualicion.SI.Equals(Model.btnBuscar))
                    {
                      <button id="btnBuscarExamen" type="submit" class="btn btn-info"><i class="icon-search icon-white"></i> Buscar</button>
                    }
                    @if (Visualicion.SI.Equals(Model.btnLimpiar))
                    {
                      <button id ="btnLimpiarExamen" type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                    }
                    </td>
                </tr>
                 <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            </table>
            <div class="tabla-datos">
                <table id="grdList">
                </table>
                <div id="grdPager"></div>
            </div>
            <div class="form-actions">
                
                @if (Visualicion.SI.Equals(Model.btnNuevo))
                {
                  <a  id="btnNuevoExamen"    class="btn btn-info" ><i class="icon-plus icon-white"></i> Nuevo</a>
                }
                @if (Visualicion.SI.Equals(Model.btnConsultar))
                {
                  <a  id ="btnConsultarExamen" class="btn btn-info" ><i class="icon-zoom-in icon-white"></i> Consultar</a>
                }
                @if (Visualicion.SI.Equals(Model.btnEditar))
                {
                  <a  id ="btnEditarExamen" class="btn btn-info" ><i class="icon-pencil icon-white"></i> Editar</a>
                }
                @if (Visualicion.SI.Equals(Model.btnActivarDesactivar))
                {
                  <a  id="btnActivarDesactivar" class="btn btn-info"><i class="icon-check icon-white"></i> Activar / Desactivar</a>
                }
                @if (Visualicion.SI.Equals(Model.btnEliminar))
                {
                  <a id="btnEliminar" class="btn btn-danger"><i class="icon-remove icon-white"></i> Eliminar</a>
                }
                @if (Visualicion.SI.Equals(Model.btnGetExamen))
                {
                  <a id="btnGetPDF" class="btn btn-danger"><i class="icon-remove icon-white"></i> GetPDF</a>
                }
                
            </div>
        </div>
    </div>
</div>
}
<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>
<div id="confirmacion"><span id="spanConfirmacion"></span></div>
<div id="divActivarDesactivar"><span id="spanActivarDesactivar"></span></div>
<div id="divEliminar"><span id="spanEliminar"></span></div>
@*<div id="DisplayPDF"/>*@