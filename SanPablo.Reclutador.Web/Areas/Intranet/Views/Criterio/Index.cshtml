@model SanPablo.Reclutador.Web.Areas.Intranet.Models.CriterioViewModel
@{
    ViewBag.Title = "Listado Criterio";
}
@section Head{
}

@section Scripts{

<script type="text/javascript">
    //Table initialisation 
    $(document).ready(function () {

        $('#btnBuscar').click(function () {
            $('#grdList').trigger('reloadGrid');
        });


        jQuery("#grdList").jqGrid({
            @*url: '@Url.Action("ListaCriterio", "Criterio")' + '?tipCriterio=' + $("#Criterio_TipoCriterio").val() + '& tipMed=' + $("#Criterio_TipoMedicion").val() + '& pregunta=' + $("#Criterio_Pregunta").val() + '&estado=' + $("#Criterio_EstadoRegistro").val(),*@
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sortField;
                migrilla.sord = postdata.sortOrder;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                    { field: 'tipCriterio', data: $("#Criterio_TipoCriterio").val() },
                    { field: 'tipMed', data: $("#Criterio_TipoMedicion").val() },
                    { field: 'pregunta', data: $("#Criterio_Pregunta").val() },
                    { field: 'estado', data: $("#Criterio_EstadoRegistro").val() }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListaCriterio", "Criterio")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdList')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function () {
                        alert('Error with AJAX callback');
                    }
                });
            },
            colNames: ['Estado', 'Codigo', 'Pregunta', 'Medición', 'Tipo', 'Modo', 'Calificación', 'Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [
                    { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                    { name: 'Codigo', index: 'Codigo', align: 'center', width: 50, sortable: false, hidden: true },
                    { name: 'Pregunta', index: 'Pregunta', align: 'left', width: 400 },
                    { name: 'Medicion', index: 'Medicion', align: 'left', width: 200 },
                    { name: 'Calificacion', index: 'Calificacion', align: 'left', width: 50 },
                    { name: 'Tipo', index: 'Tipo', align: 'left', width: 200 },
                    { name: 'Modo', index: 'Modo', align: 'left', width: 150 },
                    { name: 'FechaCreacion', index: 'FechaCreacion', align: 'left', width: 150 },
                    { name: 'UsuarioCreacion', index: 'UsuarioCreacion', align: 'left', width: 250 },
                    { name: 'FechaModificacion', index: 'FechaModificacion', align: 'left', width: 150 },
                    { name: 'UsuarioModificacion', index: 'UsuarioModificacion', align: 'left', width: 250 }
            ],
            pager: jQuery('#grdPager'),
            rowNum: 10,
            rules: true,
            rowList: [10, 30, 50],
            sortname: 'IdeCriterio',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            width: 920,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {
            },
            loadComplete: function (data) {

            }
        });

    });

    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }

    function HabilitarFormatter(cellvalue, options, rowObject) {
        var imgPath = '@Url.Content("~/Content/images/")';
        var archivo = 'enabled.png';
        var title = "Habilitar"
        if (rowObject[14] == "Activo") {
            archivo = 'enabled.png';
            var title = "Habilitar"
        } else {
            archivo = 'enabled.png';
            var title = "Habilitar"
        }

        var strImg = '<img src="' + imgPath + archivo + '" title="' + title + '" alt="' + title + '">';
        return strImg;
    }



</script>
}
<!--<div class="row"> -->
@using (Html.BeginForm("Index", "Criterio", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    <div class="span12">
       <div class="widget-box">
            <div class="widget-title">
                <h5>Criterio</h5>
            </div>
            <table style="margin-left:120px;">
                <tr>
                    <td colspan="8">&nbsp;</td>
                </tr>
                <tr>
                    <td class="colEtiqueta">
                      <label class="etiquetaFormulario" for="inputSuccess">Tipo</label>
                    </td>
                    <td class="colInput">
                              
                                @Html.DropDownListFor(model => model.Criterio.TipoCriterio, new SelectList(Model.TipoCriterio, "Valor", "Descripcion", Model.Criterio.TipoCriterio))
		                        @Html.ValidationMessageFor(model => model.Criterio.TipoCriterio)
                    </td>
                     <td style="width:40px;"></td>
                     <td class="colEtiqueta">
                        <label class="etiquetaFormulario" for="selectError">Medición</label>
                     </td>   
                     <td class="colInput">
                            @Html.DropDownListFor(model => model.Criterio.TipoMedicion, new SelectList(Model.Medicion, "Valor", "Descripcion", Model.Criterio.TipoMedicion))
		                    @Html.ValidationMessageFor(model => model.Criterio.TipoMedicion)
                     </td>
                <tr/>

                 <tr>
                    <td class="colEtiqueta">
                    <label class="etiquetaFormulario" for="inputSuccess">Pregunta</label>
                    </td>
                    <td class="colInput">
                        @Html.TextBoxFor(model => model.Criterio.Pregunta, new { @class = "textoFormulario" })  
                    </td>
                    <td style="width:40px;"></td>
                     <td class="colEtiqueta">
                            <label class="etiquetaFormulario" for="inputSuccess">Estado</label>
                     </td>
                     <td class="colInput">
                                @Html.DropDownListFor(model => model.Criterio.EstadoRegistro, new SelectList(Model.Estado, "Valor", "Descripcion", Model.Criterio.EstadoRegistro))
		                        @Html.ValidationMessageFor(model => model.Criterio.EstadoRegistro)
                     </td>
                  </tr>
              
                  
           </table>
            <table>
                <tr>
                  <td  class="formulario-accion offset9">
                     <button type="button" class="btn btn-info" id="btnBuscar"><i class="icon-search icon-white"></i> Buscar</button>
                     <button type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
                   </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            </table>

            <div class="tabla-datos">
                <table id="grdList">
                </table>
                <div id="grdPager">
                </div>
            </div>
            <div class="form-actions">
                <a class="btn btn-info" href="@Url.Action("Edit","Criterio",new { area = "Intranet"})"><i class="icon-plus icon-white"></i> Nuevo</a>
                <a class="btn btn-info" href="@Url.Action("Edit","Criterio",new { area = "Intranet"})"><i class="icon-zoom-in icon-white"></i> Consultar</a>
                <a class="btn btn-info"  href="@Url.Action("Edit","Criterio",new { area = "Intranet"})"><i class="icon-pencil icon-white"></i> Editar</a>
                <button type="reset" class="btn btn-info"><i class="icon-check icon-white"></i> Activar / Desactivar</button>
                <button type="submit" class="btn btn-danger"><i class="icon-remove icon-white"></i> Eliminar</button>
            </div>
        </div>
    </div>
}
<!--</div>-->
