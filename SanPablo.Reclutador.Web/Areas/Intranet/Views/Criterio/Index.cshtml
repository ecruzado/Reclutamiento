@model SanPablo.Reclutador.Web.Areas.Intranet.Models.CriterioViewModel
@using SanPablo.Reclutador.Entity
@{
    ViewBag.Title = "Listado Criterio";
}
@section Head{
}
@using (Html.BeginForm("Index", "Criterio", FormMethod.Post))
{
    @Html.ValidationSummary(true)
    <div class="span12">
       <div class="widget-box">
            <div class="widget-title">
                <h5>Listado de Criterios</h5>
            </div>
            <table style="margin-left:120px;">
                <tr>
                    <td colspan="8">&nbsp;</td>
                </tr>
                <tr>
                    <td class="colEtiqueta">
                      <label class="etiquetaFormulario" for="inputSuccess">Tipo</label>
                    </td>
                    <td class="colInput">
                        @Html.DropDownListFor(model => model.Criterio.TipoCriterio, new SelectList(Model.TipoCriterio, "Valor", "Descripcion", Model.Criterio.TipoCriterio), new { data_val = "false" })
                    </td>
                     <td style="width:40px;"></td>
                     <td class="colEtiqueta">
                        <label class="etiquetaFormulario" for="selectError">Medición</label>
                     </td>   
                     <td class="colInput">
                         @Html.DropDownListFor(model => model.Criterio.TipoMedicion, new SelectList(Model.Medicion, "Valor", "Descripcion", Model.Criterio.TipoMedicion), new { data_val = "false" })
                     </td>
                <tr/>
                 <tr>
                    <td class="colEtiqueta">
                    <label class="etiquetaFormulario" for="inputSuccess">Pregunta</label>
                    </td>
                    <td class="colInput">
                        @Html.TextBoxFor(model => model.Criterio.Pregunta, new { @class = "textoFormulario", data_val = "false", onkeyup = "aMays(event, this)",@maxlength = "50" })  
                    </td>
                    <td style="width:40px;"></td>
                    <td class="colEtiqueta">
                        <label class="etiquetaFormulario" for="inputSuccess">Estado</label>
                    </td>
                    <td class="colInput">
                        @Html.DropDownListFor(model => model.Criterio.IndicadorActivo, new SelectList(Model.Estado, "Valor", "Descripcion", Model.Criterio.IndicadorActivo), new { data_val = "false" })
                    </td>
                  </tr>
           </table>
            <table>
                <tr>
                  <td  class="formulario-accion offset9">
                     @if (Visualicion.SI.Equals(Model.btnBuscar))
                     {
                       <a  class="btn btn-info" id="btnBuscar"><i class="icon-search icon-white"></i> Buscar</a>
                     } 

                     @if (Visualicion.SI.Equals(Model.btnLimpiar))
                     {
                       <a  id="btnLimpiar"  class="btn"><i class="icon-trash"></i> Limpiar</a>
                     }
                   </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            </table>
            <div class="tabla-datos">
                <table id="grdList">
                </table>
                <div id="grdPager">
                </div>
            </div>
            <div class="form-actions">
                @if (Visualicion.SI.Equals(Model.btnNuevo))
                {
                  <a id="btnNuevo" class="btn btn-info" ><i class="icon-plus icon-white"></i> Nuevo</a>    
                }
                
                @if (Visualicion.SI.Equals(Model.btnConsultar))
                {
                  <a id="btnConsultar"  class="btn btn-info"><i class="icon-zoom-in icon-white"></i> Consultar</a>
                }

                @if (Visualicion.SI.Equals(Model.btnEditar))
                {
                  <a id="btnEditar" class="btn btn-info" ><i class="icon-pencil icon-white"></i> Editar</a>
                }

                @if (Visualicion.SI.Equals(Model.btnActivarDesactivar))
                {
                  <a id="btnActivaDesactiva" class="btn btn-info"><i class="icon-check icon-white"></i> Activar / Desactivar</a>
                }

                @if (Visualicion.SI.Equals(Model.btnEliminar))
                {
                  <a id="btnEliminar" class="btn btn-danger" ><i class="icon-remove icon-white"></i> Eliminar</a>
                }
            </div>
        </div>
    </div>
}

<div id="confirmacion"><span id="spanConfirmacion"></span></div>
<div id="divEliminar"><span id="spanEliminar"></span></div>
<div id="divMensaje"><span id="spnMensaje"></span></div>

@section Scripts{
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>

<script type="text/javascript">

    $(document).ready(function () {
       

        @*jQuery("#grdList").jqGrid({
            datatype: function (postdata) {
                var migrilla = new Object();
                migrilla.page = postdata.page;
                migrilla.rows = postdata.rows;
                migrilla.sidx = postdata.sidx;
                migrilla.sord = postdata.sord;
                migrilla._search = postdata.isSearch;
                migrilla.filters = postdata.filters;
                migrilla.Rules = [
                       { field: 'tipCriterio', data: $("#Criterio_TipoCriterio").val() },
                       { field: 'tipMed', data: $("#Criterio_TipoMedicion").val() },
                       { field: 'pregunta', data: $("#Criterio_Pregunta").val() },
                       { field: 'estado', data: $("#Criterio_IndicadorActivo").val() }
                ];

                if (migrilla._search == true) {
                    migrilla.searchField = postdata.searchField;
                    migrilla.searchOper = postdata.searchOper;
                    migrilla.searchString = postdata.searchString;
                }

                var params = { grid: migrilla };

                $.ajax({
                    url: '@Url.Action("ListaCriterio", "Criterio")',
                    type: 'post',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(params),
                    async: false,
                    success: function (data, st) {
                        if (st == 'success') {
                            var jq = $('#grdList')[0];
                            jq.addJSONData(data);
                        }
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            },
            colNames: ['Estado', '', '', 'Pregunta', 'Medición', '', '', 'Tipo', '', 'Modo', 'Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [
                    { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                    { name: 'CodigoEstado', index: 'CodigoEstado', align: 'center', width: 10, hidden: true, sortable: false },
                    { name: 'Codigo', index: 'Codigo', align: 'center', width: 10, hidden: true, sortable: false },
                    { name: 'Pregunta', index: 'Pregunta', align: 'left', width: 400, sortable: false },
                    { name: 'TipoMedicionDes', index: 'TipoMedicionDes', align: 'left', sortable: false },
                    { name: 'Medicion', index: 'Medicion', align: 'left', hidden: true },
                    { name: 'Tipo', index: 'Tipo', align: 'left', hidden: true },
                    { name: 'TipoCriterioDes', index: 'TipoCriterioDes', align: 'left', width: 150, sortable: false },
                    //{ name: 'Calificacion', index: 'Calificacion', align: 'left', hidden: true },
                    //{ name: 'TipoCalificacionDes', index: 'TipoCalificacionDes', align: 'left', width: 200 },
                    { name: 'Modo', index: 'Modo', align: 'left', hidden: true },
                    { name: 'TipoModoDes', index: 'TipoModoDes', align: 'left', width: 150, sortable: false },
                    { name: 'FechaCreacion', index: 'FechaCreacion', align: 'left', width: 150, sortable: false },
                    { name: 'UsuarioCreacion', index: 'UsuarioCreacion', align: 'left', width: 250, sortable: false },
                    { name: 'FechaModificacion', index: 'FechaModificacion', align: 'left', width: 150, sortable: false },
                    { name: 'UsuarioModificacion', index: 'UsuarioModificacion', align: 'left', width: 250, sortable: false }
             ],
             pager: jQuery('#grdPager'),
             rowNum: 10,
             rowList: [10, 30, 50],
             autowidth: true,
             rules: true,
             sortname: 'IdeCriterio',
             sortorder: 'desc',
             viewrecords: true,
             height: 350,
             cellsubmit: 'clientArray',
             hidegrid: false,
             rownumbers: true,
             shrinkToFit: false,

             afterInsertRow: function (rowid, aData) {

                 if (aData.Pregunta.length>70) {
                     var cPreguntaSub = aData.Pregunta.substring(0, 70) + " ...";
                     jQuery("#grdList").jqGrid('setCell', rowid, 'Pregunta', cPreguntaSub);
                 }

             },
             postData: {
             }, loadComplete: function (data) {
             }
         });*@

        jQuery("#grdList").jqGrid({
            colNames: ['Estado', '', '', 'Pregunta', 'Medición', '', '', 'Tipo', '', 'Modo', 'Fecha Creación', 'Usuario Creación', 'Fecha Modificación', 'Usuario Modificación'],
            colModel: [
                   { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
                    { name: 'CodigoEstado', index: 'CodigoEstado', align: 'center', width: 10, hidden: true, sortable: false },
                    { name: 'Codigo', index: 'Codigo', align: 'center', width: 10, hidden: true, sortable: false },
                    { name: 'Pregunta', index: 'Pregunta', align: 'left', width: 400, sortable: false },
                    { name: 'TipoMedicionDes', index: 'TipoMedicionDes', align: 'left', sortable: false },
                    { name: 'Medicion', index: 'Medicion', align: 'left', hidden: true },
                    { name: 'Tipo', index: 'Tipo', align: 'left', hidden: true },
                    { name: 'TipoCriterioDes', index: 'TipoCriterioDes', align: 'left', width: 150, sortable: false },
                    { name: 'Modo', index: 'Modo', align: 'left', hidden: true },
                    { name: 'TipoModoDes', index: 'TipoModoDes', align: 'left', width: 150, sortable: false },
                    { name: 'FechaCreacion', index: 'FechaCreacion', align: 'left', width: 150, sortable: false },
                    { name: 'UsuarioCreacion', index: 'UsuarioCreacion', align: 'left', width: 250, sortable: false },
                    { name: 'FechaModificacion', index: 'FechaModificacion', align: 'left', width: 150, sortable: false },
                    { name: 'UsuarioModificacion', index: 'UsuarioModificacion', align: 'left', width: 250, sortable: false }

            ],
            pager: jQuery('#grdPager'),
            rowNum: 10,
            rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'IdeCriterio',
            sortorder: 'desc',
            viewrecords: true,
            height: 350,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,
            datatype: 'local',
            postData: {
            }, loadComplete: function (data) {

                jQuery("#grdList").jqGrid('setGridParam', {
                    datatype: function (postdata) {
                        var migrilla = new Object();
                        migrilla.page = postdata.page;
                        migrilla.rows = postdata.rows;
                        migrilla.sidx = postdata.sidx;
                        migrilla.sord = postdata.sord;
                        migrilla._search = postdata.isSearch;
                        migrilla.filters = postdata.filters;
                        migrilla.Rules = [
                               { field: 'tipCriterio', data: $("#Criterio_TipoCriterio").val() },
							   { field: 'tipMed', data: $("#Criterio_TipoMedicion").val() },
							   { field: 'pregunta', data: $("#Criterio_Pregunta").val() },
							   { field: 'estado', data: $("#Criterio_IndicadorActivo").val() }

                        ];

                        if (migrilla._search == true) {
                            migrilla.searchField = postdata.searchField;
                            migrilla.searchOper = postdata.searchOper;
                            migrilla.searchString = postdata.searchString;
                        }

                        var params = { grid: migrilla };

                        $.ajax({
                            url: '@Url.Action("ListaCriterio", "Criterio")',
                            type: 'post',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(params),
                            async: false,
                            success: function (data, st) {
                                if (st == 'success') {
                                    var jq = $('#grdList')[0];
                                    jq.addJSONData(data);
                                }
                            },
                            error: function (e) {
                                console.log(e);
                            }
                        });
                    }
                });


            }
        });
       


        $('#btnBuscar').click(function () {
            $('#grdList').trigger('reloadGrid');
        });


        $('#btnLimpiar').click(function () {
            location.reload();
        });


        $('#btnConsultar').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            if (selr != null) {
                window.location = '@Url.Action("ConsultaCriterios", "Criterio")'+'/'+selr;
            } else {
                MostrarMensaje('Seleccione un criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });

        $('#btnEditar').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var rowData = $('#grdList').jqGrid('getRowData', selr);
            var indEstado = rowData.CodigoEstado;

            if (selr != null) {

                if ("I" == indEstado) {
                    MostrarMensaje('El registro se encuentra desactivado', "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    window.location = '@Url.Action("Edicion", "Criterio")' + '/' + selr;
                }
                
            } else {
                MostrarMensaje('Seleccione un Criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
        });

        $('#btnNuevo').click(function () {
            window.location = '@Url.Action("Nuevo", "Criterio")';
        });

        $("#spanConfirmacion").html("¿Desea Activar/Desactivar?")
        $('#confirmacion').dialogo({
            buttons: {
                "Si": function () {
                    var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
                    var rowData = jQuery('#grdList').jqGrid('getRowData', selr);
                    if (selr != null) {
                        ActivarDesactivar(selr, rowData);
                    } else {
                        MostrarMensaje('Seleccione un Criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });


        $('#btnEliminar').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            var rowData = $('#grdList').jqGrid('getRowData', selr);
            var indEstado = rowData.CodigoEstado;

            if (selr != null) {
                if ("I" == indEstado) {
                    MostrarMensaje('El registro se encuentra desactivado', "Sistema de Reclutamiento Y Seleccion de Personal");
                } else {
                    $('#divEliminar').dialog('open');
                }

            } else {
                MostrarMensaje('Seleccione un criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });

      
        $('#btnActivaDesactiva').click(function () {
            var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
            if (selr != null) {

                $('#confirmacion').dialog('open');

            } else {
                MostrarMensaje('Seleccione un criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            }

        });



        $("#spanEliminar").html("¿Desea eliminar?")
        $('#divEliminar').dialogo({
            buttons: {
                "Aceptar": function () {
                    var selr = $('#grdList').jqGrid('getGridParam', 'selrow');
                    var rowData = $('#grdList').jqGrid('getRowData', selr);
                    if (selr != null) {
                        EliminarCriterio(selr,rowData);
                    } else {
                        MostrarMensaje('Seleccione un criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });
    });

   

    function Edicion_Criterio(selr) {
        $.post('@Url.Action("EdicionCriterio", "Criterio")'+'?selr=' + selr,
           function (data) {
           }
       );
       return false;
    }  

    function MostrarMensaje(mensaje,titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje,titulo);
    }

    function ActivarDesactivar(selr, rowData) {
        $.post("@Url.Action("ActivarDesactivar", "Criterio")?id=" + selr + "&estado=" + rowData.CodigoEstado,
            function (data) {
                $('#grdList').trigger('reloadGrid');
            }
        );
        return false;
    }

   

    function EliminarCriterio(selr, rowData) {

        $.ajax({
            data: {
                id: selr
            },
            type: "POST",
            url: "@Url.Action("EliminarCriterio", "Criterio")",
            traditional: true,
            success: function (data) {
                if (data.redirecciona) {
                    SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                }

                if (data.Resultado) {
                    MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                    $('#grdList').trigger('reloadGrid');
                }
                
            }
        });

    }


</script>
}
