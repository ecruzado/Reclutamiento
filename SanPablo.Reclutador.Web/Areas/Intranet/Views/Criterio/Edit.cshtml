@model SanPablo.Reclutador.Web.Areas.Intranet.Models.CriterioViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Listado Categoría";
}



@section Head{
     <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{
  

<script src="@Url.Content("~/Scripts/uploadify/swfobject.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.v2.1.4.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">
   
    $(document).ready(function () {
        
        $("#imgCriterio")
         .css({
             height: "150px",
             width: "150px"

         });
        

        
        $("#btnGuardarCriterio").click(function () {
            //if ($("#frmCriterio").validate().form()) {

            if(valida()){
                $.ajax({
                        type: "POST",
                        url: '@Url.Action("Edit", "Criterio")',
                        data: $("#frmCriterio").serialize(),
                        traditional: true,
                        success: function (data) {
                            if (data.redirecciona) {
                                SanPablo.Redirecciona('@Url.Action("Login", "Seguridad")');
                             }

                            if (data.Resultado) {
                                information("divMensaje", "spnMensaje", data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal", data.IdDato,data.Accion);
                            }
                            if (!data.Resultado) {
                                //notificacionExito(data.Mensaje);
                                MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                            }

                        }
                    });
            };
          });






        var dato = '@Session["TipoModo"]';
        if (dato == 1) {
           

            $("#nombreImagen").hide();
            $("#selecImagen").hide();
            $("#verImagen").hide();
            


            
        }
        if (dato == "I") {
          
            $("#nombreImagen").show();
            $("#selecImagen").show();
            $("#verImagen").show();
           
        }
        if (dato == "T") {
          
            $("#nombreImagen").hide();
            $("#selecImagen").hide();
            $("#verImagen").hide();
            
        }
                
        $("#Criterio_TipoModo").change(function () {
            var vvalor = $(this).val();

            if (vvalor == "02") {
              
                $("#nombreImagen").show();
                $("#selecImagen").show();
                $("#verImagen").show();

            }
            else {
              
                $("#nombreImagen").hide();
                $("#selecImagen").hide();
                $("#verImagen").hide();
            }
        });

       
        $("#image").uploadify({
            'uploader': '@Url.Content("~/Scripts/uploadify/uploadify.swf")',
            'script': '@Url.Action("Upload", "Criterio")',
            'scriptData': { ext: '.jpeg;.jpg;.gif;.bmp;.png' },
            'fileDataName': 'file',
            'buttonText': 'Subir',
            'fileDesc': 'Image Files',
            'fileExt': '*.jpeg;*.jpg;*.gif;*.bmp;*.png;',
            'multi': false,
            'auto': true,
            'queueSizeLimit': '90',
            'sizeLimit': 2147483647,
            'removeCompleted': true,
            'cancelImg': '@Url.Content("~/Scripts/uploadify/cancel.png")',

                    'onError': function (a, b, c, d) {
                        if (d.status == 404)
                            alert("Could not find upload script. Use a path relative to: " + "<?= getcwd() ?>");
                        else if (d.type === "HTTP")
                            alert("error " + d.type + ": " + d.status);
                        else if (d.type === "File Size")
                            alert(c.name + " " + d.type + " Limit: " + Math.round(d.info / (1024 * 1024)) + "MB");
                        else
                            alert("error " + d.type + ": " + d.text);
                    },
                    'onSelect': function (e, q, f) {
                        var estado = true;
                        var fileName = f.name;
                        var fileNameExt = fileName.substr(fileName.lastIndexOf('.') + 1).toLowerCase();
                        switch (fileNameExt) {
                            case 'jpeg':
                                break;
                            case 'jpg':
                                break;
                            case 'gif':
                                break;
                            case 'bmp':
                                break;
                            case 'png':
                                break;
                            default:
                                MotoTravel.ShowAlert('', "extensión no válida");
                                $("#fileInput").uploadifyCancel(q);
                                $("#fileInput").uploadifyClearQueue();
                                estado = false;
                                break;
                        }

                        return estado;

                    },
                    'onComplete': function (event, queueId, fileObj, response, data) {

                        var rsp = jQuery.parseJSON(response);

                        if (rsp.Success == true) {
                            $("#Criterio_rutaImagen").val(rsp.Data.NombreArchivo);
                            $("#NombreTemporalArchivo").val(rsp.Data.NombreTemporalArchivo);
                            

                        }
                        else {

                        }
                    }
        });



        $('#updateDialog').dialog({
            autoOpen: false,
            width: 400,
            height: 370,
            resizable: false,
            modal: true
          
        });

        $('#Agregar').click(function () {
            var codigoCriterio = $("#Criterio_IdeCriterio").val();
            if (codigoCriterio != null && codigoCriterio > 0) {
                mostrarAgregarEstudios(0, codigoCriterio);
            } else {
                MostrarMensaje('Ingrese un Criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            }
            
        });

        $('#btnEditar').click(function () {
                var codigoCriterio = $("#Criterio_IdeCriterio").val();
                var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
                if (selr != null) {
                    mostrarAgregarEstudios(selr, codigoCriterio);
                } else {
                    MostrarMensaje('Seleccione una Alternativa', "Sistema de Reclutamiento Y Seleccion de Personal");
                }
                
        });


        

        $('#btnGuardar').click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Edit", "Criterio")',
                data: $("#frmCriterio").serialize(),
                success: function (data) {
                   // $('#grdListaCatxExamen').trigger('reloadGrid');
                }
            });

        });
        
       
       
        $("#spanConfirmacion").html("¿Desea eliminar el registro?")
        $('#confirmacion').dialog({
            autoOpen: false,
            modal: true,
            title: "Sistema de Reclutamiento Y Seleccion de Personal",
            buttons: {
                "Si": function () {
                    var codigoCriterio = $("#Criterio_IdeCriterio").val();
                    var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
                    if (selr != null) {
                        eliminarAlternativa(selr, codigoCriterio);
                    } else {
                        MostrarMensaje('Seleccione una Alternativa', "Sistema de Reclutamiento Y Seleccion de Personal");
                    }
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });



        (function ($) {
            $.fn.serializeAll = function () {
                var rselectTextarea = /^(?:select|textarea)/i;
                var rinput = /^(?:color|date|datetime|datetime-local|email|file|hidden|month|number|password|range|search|tel|text|time|url|week)$/i;
                var rCRLF = /\r?\n/g;

                var arr = this.map(function () {
                    return this.elements ? jQuery.makeArray(this.elements) : this;
                })
                .filter(function () {
                    return this.name && !this.disabled &&
                        (this.checked || rselectTextarea.test(this.nodeName) ||
                            rinput.test(this.type));
                })
                .map(function (i, elem) {
                    var val = jQuery(this).val();

                    return val == null ?
                        null :
                        jQuery.isArray(val) ?
                            jQuery.map(val, function (val, i) {
                                return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
                            }) :
                    { name: elem.name, value: val.replace(rCRLF, "\r\n") };
                }).get();

                return $.param(arr);
            }
        })(jQuery);


        jQuery("#grdList").jqGrid({
            url: '@Url.Action("ListaAlternativaxCriterio", "Criterio")' + '?idCriterio=' + $("#Criterio_IdeCriterio").val(),
            datatype: 'json',
            mtype: 'POST',
            colNames: ['','Alternativa', 'Peso', 'Imagen',''],
            colModel: [
    
                    { name: 'IdeAlternativa', index: 'IdeAlternativa', align: 'left', width: 10, editable: false, sortable: false, hidden: true },
                    { name: 'NombreAlternativa', index: 'NombreAlternativa', align: 'left', width: 700, editable: false, sortable: false },
                    { name: 'Peso', index: 'Peso', align: 'left', sortable: false, width: 100, editable: false },
                    { name: 'RutaDeImagen', index: 'RutaDeImagen', align: 'center', sortable: false, width: 700, editable: false, formatter: ImagenFormatter },
                    { name: 'TipoModo', index: 'TipoModo', align: 'center', sortable: false, width: 80, editable: false, hidden:true },
            ],
            rownumbers: true,
            sortname: 'IdeAlternativa',
            sortorder: 'desc',
            viewrecords: true,
            //cellEdit: true,
            /*caption: 'Lista Alternativas',*/
            rules: true ,
            height: 350,
            autowidth: true,
            
            cellsubmit: 'clientArray',
            hidegrid: false,
            rowNum: 10,
            autowidth: true,
            rowList: [10, 30, 50],
            shrinkToFit: false,


            

            postData: {
            },
            loadComplete: function (data) {
                var cTipo = $("#Criterio_TipoModo").val();
                if ("01" != cTipo) {
                    $("#grdList").showCol("RutaDeImagen")
                    jQuery("#grdList").jqGrid('hideCol', ["NombreAlternativa"]);
                    jQuery("#grdList").jqGrid('showCol', ["RutaDeImagen"]);
                } else {
                    $("#grdList").hideCol("RutaDeImagen")
                    jQuery("#grdList").jqGrid('hideCol', ["RutaDeImagen"]);
                    jQuery("#grdList").jqGrid('showCol', ["NombreAlternativa"]);

                }
            }


        });




        var dlgsubirarchivoimagen = $("#dlgsubirarchivoimagen").dialog(
           {
               autoOpen: false,
               modal: true,
               title: "Cargar Imagen",
               width: 500,
               height: 240,
               buttons: {
                   "Subir": function () {
                       //Guardar();
                       return true;
                   },
                   "Cancelar": function () {
                       $(this).dialog("close");
                       return false;
                   }
               }
           });



    });
    function RadioFormatter(cellvalue, options, rowObject) {
        var strRdo = '<input type ="radio" name = "codigo">';
        return strRdo;
    }

    
    function CerrarPopupAlternativa() {
        $('#updateDialog').dialog('close');
        $('#grdList').trigger('reloadGrid');
    }

    function eliminarAlternativa(selr, codCriterio) {
        $.post('@Url.Action("Eliminar", "Criterio")'+'?ideAlternativa=' + selr + '&codigoCriterio=' + codCriterio,
        function (data) {
            $('#grdList').trigger('reloadGrid');
            }
        );
        return false;
    }
    
    
    function InicializarMsg() {
        $(".msgModel").show();
        if ($(".msgModel .merror").is(":visible")) {
            $(".msgModel .merror").slideUp(200, function () {
                SanPablo.ShowElement(".msgModel .loading");
            });
        } else
            SanPablo.ShowElement(".msgModel .loading");
    }


    function ImagenFormatter(cellvalue, options, rowObject) {
        var tipo = rowObject[4] == null ? "" : rowObject[4];
        var test = "";
        var idAlter = cellvalue;
        if ("01"!=tipo) {
            test = "<img height ='50' width='50' src='@Url.Action("ObtenerSubImagen", "Criterio")/" + idAlter + "' />";
        }
        return test;
    }


    

    function mostrarsubirarchivoimagen() {
        $("#dlgsubirarchivoimagen").dialog('open');
    }


    function mostrarAgregarEstudios(id, codCriterio) {
        var dialogDiv = $('#updateDialog');
        
        $.get('@Url.Action("Editar", "Alternativa")?ideAlternativa=' + id + "&ideCriterio=" + codCriterio + "&tipo=" + $("#Criterio_TipoModo").val(), function (data) {

            dialogDiv.html(data);
            $.validator.unobtrusive.parse($("#updateDialog"));
            dialogDiv.dialog('open');
        });
        return false;
    }
    
    function MostrarMensaje(mensaje, titulo) {
        Funciones.Alert("divMensaje", "spnMensaje", mensaje, titulo);
    }
    


    function RedireccionaCriterio(selr,Accion) {
        var loc = window.location.href
        console.log(loc);
       
        if ("S" == Accion) {
           
            window.location = '@Url.Action("Edicion", "Criterio", new { id = ""})' + '/' + selr; 
        } else if ("N" == Accion) {
           
            window.location = '@Url.Action("Edicion", "Criterio", new { id = ""})' + '/' + selr; 
        }
      
    }
   

    function information(selectorDiv, selectorSpan, msg, title, selr,accion) {
        $('#' + selectorSpan).html(msg);
        var opt = {
                title: title,
                autoOpen: false,
                modal: true,
                buttons: {
                    "Aceptar": function () {
                        $(this).dialog("close");
                        RedireccionaCriterio(selr, accion);
                    }
                }
        };
        $('#' + selectorDiv).dialog(opt).dialog('open');

    }

    function valida()
    {
        var tipCriterio = $('#Criterio_TipoCriterio').val();
        var tipMedicion = $('#Criterio_TipoMedicion').val();
        var tipModo = $('#Criterio_TipoModo').val();
        var tipPregunta = $('#Criterio_Pregunta').val();


        if (tipCriterio == "0") {
            MostrarMensaje('Seleccione un tipo de criterio', "Sistema de Reclutamiento Y Seleccion de Personal");
            return false;
        }

        if (tipMedicion == "0") {
            MostrarMensaje('Seleccione un tipo de medición', "Sistema de Reclutamiento Y Seleccion de Personal");
            return false;
        }

        if (tipModo == "0") {
            MostrarMensaje('Seleccione un modo', "Sistema de Reclutamiento Y Seleccion de Personal");
            return false;
        }

        if (tipPregunta.length ==0) {
            MostrarMensaje('Ingrese una pregunta', "Sistema de Reclutamiento Y Seleccion de Personal");
            return false;
        }

        return true;

    }


</script>
}

@using (Html.BeginForm("Edit", "Criterio", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmCriterio" }))
{
    @Html.ValidationSummary(true)
    <div class="span12"> 
        <div class="widget-box">
            <div class="widget-title">
                <h5>Criterio</h5>
                <div class="opciones">
                    <label>Estado</label>
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                </div>
            </div>

            <table class="formulario-busqueda">
                <tr>
                    <td colspan="8">&nbsp;</td>
                </tr>
                <tr class="formulario-fila">
                      <td class="span5">
                        <label class="control-label">Código</label>
                          <div class="controles">
                            @Html.TextBoxFor(model => model.Criterio.IndPagina,  new { style = "display: none;" })

                        
                            <input class="textoFormulario" id="Criterio_IdeCriterio" name="Criterio.IdeCriterio" type="text" value="@Model.Criterio.IdeCriterio" readonly="readonly">
                          </div>
                        </td>
                    <td style="width:40px;"></td>
                   
                    <td class="span5">
                            <label class="control-label">Medición</label>
                    <div class="controles">
                        @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                        {
                            @Html.DropDownListFor(model => model.Criterio.TipoMedicion, new SelectList(Model.Medicion, "Valor", "Descripcion", Model.Criterio.TipoMedicion),new { @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => model.Criterio.TipoMedicion, new SelectList(Model.Medicion, "Valor", "Descripcion", Model.Criterio.TipoMedicion))
		                }
                       @* <div class="tex-error" style="font-size:12px;color:red">    
                        @Html.ValidationMessageFor(model => model.Criterio.TipoMedicion)
                        </div>*@
                     </div>
                    </td>
                 </tr>
                 <tr class="formulario-fila">

                    <td class="span5">
                      <label  class="control-label">Tipo</label>
                   <div class="controles">


                        @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                        { 
                        @Html.DropDownListFor(model => model.Criterio.TipoCriterio, new SelectList(Model.TipoCriterio, "Valor", "Descripcion", Model.Criterio.TipoCriterio),new { @readonly = "readonly" }) 
                        }
                        else
                        {
                        @Html.DropDownListFor(model => model.Criterio.TipoCriterio, new SelectList(Model.TipoCriterio, "Valor", "Descripcion", Model.Criterio.TipoCriterio))     
                        }
                       @* <div class="tex-error" style="font-size:12px;color:red">         
                        @Html.ValidationMessageFor(model => model.Criterio.TipoCriterio)
                        </div>*@
                    </div>
                       </td>
                    <td style="width:40px;"></td>
                    <td class="span5">
                      <label class="control-label">Modo</label>
                   
                         <div class="controles">
                            @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                            {
                              @Html.DropDownListFor(model => model.Criterio.TipoModo, new SelectList(Model.TipoModo, "Valor", "Descripcion", Model.Criterio.TipoModo), new { @readonly = "readonly"})
                            }
                            else
                            {
                              @Html.DropDownListFor(model => model.Criterio.TipoModo, new SelectList(Model.TipoModo, "Valor", "Descripcion", Model.Criterio.TipoModo))  
                            }
                         @*  <div class="tex-error" style="font-size:12px;color:red">     
                         @Html.ValidationMessageFor(model => model.Criterio.TipoModo)
                         </div>*@
                       </div>
                    </td>

                  </tr>
                
                   <tr class="formulario-fila">
                       <td class="span5">
                         <label class="control-label">Pregunta</label>
                      <div class="controles">
                           @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                           {
                             @Html.TextAreaFor(model => model.Criterio.Pregunta,  new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", maxlength = "2000" , @readonly = "readonly",onkeyup="aMays(event, this)"})  
                             
                           }
                           else
                           {
                            
                             @Html.TextAreaFor(model => model.Criterio.Pregunta,  new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;", maxlength = "2000" ,onkeyup="aMays(event, this)"})  
                             
                        
                               
                           } 
                           @* <div class="tex-error" style="font-size:12px;color:red">    
                            @Html.ValidationMessageFor(model => model.Criterio.Pregunta)
                            </div>*@
                          </div>
                       </td>
                        
                       
                       
                             </tr>
                   
                 
                            
                            <tr id="nombreImagen" class="formulario-fila">
                                   
                                   <td class="span5">
                                        <label class="control-label" for="setInstitucion">Nombre Imagen</label>
                                    
                                   

                                   <div class="controles">
                                        @Html.TextBoxFor(model => model.Criterio.rutaImagen, new { @class = "textoFormulario" , @readonly = "readonly"})
                                    </div>
                                      
                                    
                                    <td>
                                 
                                </tr>
                                 @if (!@Accion.Consultar.Equals(Model.Criterio.IndPagina)){
                                <tr id="selecImagen" class="formulario-fila">
                                    <td class="span5">
                                        <label class="control-label">Imagen</label>
                                    <div class="controles">
                                        <div id="divImagen">
                                           
                                        <input type="file" name="image" id="image" />
                                        
                                        @Html.TextBoxFor(model => model.NombreTemporalArchivo,  new { style = "display: none;" })
                                        </div>
                                        </div>
                                    </td>
                                    <td></td>
                                </tr>
                                 }
                                 <tr id="verImagen" class="formulario-fila">
                                   @if (Model.Criterio.IMAGENCRIT != null)
                                   {
                                        <td class="span5">
                                            <div class="controles">
                                                     <img id="imgCriterio"  height ="150" width="150" src="@Url.Action("GetImage", "Criterio", new { id = Model.Criterio.IdeCriterio })" /> 
                                                </div>  
                                                </td>
                                            
                                   }
                                 </tr>
                                 
                                       
                            
                                 
                       
                    <tr>
                        <td>
                            &nbsp;
                        </td>
                    </tr>
               </table>          
            
            

           
            <div class="form-actions">
                
                  @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                  {
                    <span></span>
                  }
                  else
                  {
                    <a  id="btnGuardarCriterio" class="btn btn-info"><i class="icon-hdd icon-white"></i> Grabar</a>  
                  }    
            </div>

           @if (@Visualicion.SI.Equals(Model.IndVisual))
           {
            <div class="grilla-opciones">
                <h6>Alternativas</h6>
                @if (@Accion.Consultar.Equals(Model.Criterio.IndPagina))
                {
                    <div class="opciones"></div>
                }
                else if (@Accion.Nuevo.Equals(Model.Criterio.IndPagina))
                {
                    <div class="opciones">
                    <a id="Agregar" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a> 
                    </div>
                }
                else
                {
                    <div class="opciones">
                    <a id="Agregar" class="btn btn-small btn-info" title="Agregar"><i class="icon-plus icon-white"></i></a> 
                    <a id="btnEditar" class="btn btn-small btn-info" title="Editar"><i class="icon-edit icon-white"></i></a>
                    <a id="btnEliminar" class="btn btn-small btn-info" title="Eliminar"  onclick="$('#confirmacion').dialog('open'); return false;"><i class="icon-remove icon-white"></i></a>        
                    </div>
                }
                <div style="clear:both"></div>
            </div>
            
            <div class="tabla-datos" >
                <table id="grdList" >
                </table>
            </div>
           }
             <div class="form-actions">
                <a class="btn" href="@Url.Action("Index", "Criterio", new { area = "Intranet" })" ><i class="icon-arrow-left icon-cog"></i> Anterior</a>
                
            </div>
           
        </div>
        </div>
}





<div id="updateDialog" title="Agregar Alternativa"></div>




<div id="divMensaje">
        <span id="spnMensaje"></span>
</div>
<div id="confirmacion"><span id="spanConfirmacion"></span></div>