
@using SanPablo.Reclutador.Web.Models
@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudAmpliacionCargoViewModel
@using SanPablo.Reclutador.Entity

@{
    ViewBag.Title = "Solicitud Ampliación";
}
@section Head{
      <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
}

@section Scripts{

<script src="@Url.Content("~/Scripts/uploadify/swfobject.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.v2.1.4.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $.validator.unobtrusive.parse($("#solicitudAmpliacionCargoForm"));
        $("#tabs").tabs();

        SanPablo.Numeros('SolicitudRequerimiento_NumVacantes');


        $('#updateDialogConfirmacion').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            buttons: {
                "Aceptar": function (e) {
                    e.preventDefault();
                    var result = $('#solicitudAmpliacionCargoForm').valid();
                    if (result) {
                        $("#updateDialogConfirmacion").dialog("close");
                        $.blockUI({
                            message: '<h1>Enviando...</h1>',
                            css: {
                                border: 'none',
                                padding: '15px',
                                backgroundColor: '#000',
                                '-webkit-border-radius': '10px',
                                '-moz-border-radius': '10px',
                                opacity: .5,
                                color: '#fff'
                            }
                        });
                        $.post('@Url.Action("Edit", "SolicitudAmpliacionCargo")',
                        $("#solicitudAmpliacionCargoForm").serialize(),
                        function (respuesta) {
                            if (respuesta.Resultado) {
                                $.unblockUI();
                                mensajeRedirecciona(respuesta.Mensaje, "INFORMATIVO");
                            }
                            else {
                                $.unblockUI();
                                MostrarMensaje(respuesta.Mensaje, "INFORMATIVO");
                            }
                        });
                    }
                    else {
                        $("#updateDialogConfirmacion").dialog("close");
                        MostrarMensaje("ERROR: Verifique que los datos ingresados son correctos", "ALERTA");
                    }

                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
        });


        @*$('select#SolicitudRequerimiento_IdeDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#SolicitudRequerimiento_IdeArea").empty();
            $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos", "SolicitudAmpliacionCargo", new { area = "Intranet" })',
            data: { ideDependencia: ideDependencia },
            success: function (respuesta) {
                $("select#SolicitudRequerimiento_IdeDepartamento").empty();
                $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                $.each(respuesta, function (i, item) {
                    $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='"
                    + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                }
            );
            }
        });
         })

        $('select#SolicitudRequerimiento_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas", "SolicitudAmpliacionCargo", new { area = "Intranet" })',
            data: { ideDepartamento: ideDepartamento },
            success: function (respuesta) {
                $("select#SolicitudRequerimiento_IdeArea").empty();
                $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");
                $.each(respuesta, function (i, item) {
                    $("select#SolicitudRequerimiento_IdeArea").append("<option value='"
                    + item.IdeArea + "'>" + item.NombreArea + "</option>");
                }
            );
            }
        });
    })*@



        $('select#SolicitudRequerimiento_IdeDependencia').change(function () {
            var ideDependencia = $(this).val();
            $("select#SolicitudRequerimiento_IdeArea").empty();
            $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");

            $("select#SolicitudRequerimiento_IdeCargo").empty();
            $("select#SolicitudRequerimiento_IdeCargo").append("<option value='0'> Seleccionar </option>");



            $.ajax({
                type: "POST",
                url: '@Url.Action("listaDepartamentos", "SolicitudCargo", new { area = "Intranet"})',
                data: { ideDependencia: ideDependencia },
                success: function (respuesta) {

                    $("select#SolicitudRequerimiento_IdeCargo").empty();
                    $("select#SolicitudRequerimiento_IdeCargo").append("<option value='0'> Seleccionar </option>");


                    $("select#SolicitudRequerimiento_IdeDepartamento").empty();
                    $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='"
                        + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                    }
                );
                }
            });
         })

        $('select#SolicitudRequerimiento_IdeDepartamento').change(function () {
            var ideDepartamento = $(this).val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("listaAreas","SolicitudCargo",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {

                    $("select#SolicitudRequerimiento_IdeCargo").empty();
                    $("select#SolicitudRequerimiento_IdeCargo").append("<option value='0'> Seleccionar </option>");


                    $("select#SolicitudRequerimiento_IdeArea").empty();
                    $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudRequerimiento_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
        })



        $('select#SolicitudRequerimiento_IdeArea').change(function () {
            var idArea = $(this).val();
            var idDependencia = $("#SolicitudRequerimiento_IdeDependencia").val();
            var idDepartamento = $("#SolicitudRequerimiento_IdeDepartamento").val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("listaCargoxSede","SolicitudCargo",new { area = "Intranet"})',
                data: {
                    idArea: idArea,
                    idDependencia: idDependencia,
                    idDepartamento: idDepartamento
                },
                success: function (respuesta) {
                    $("select#SolicitudRequerimiento_IdeCargo").empty();
                    $("select#SolicitudRequerimiento_IdeCargo").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudRequerimiento_IdeCargo").append("<option value='"
                        + item.IdeCargo + "'>" + item.NombreCargo + "</option>");
                    }
                );
                }
            });
        })








        /////////////////////////////////
        jQuery("#grdListCompetencias").jqGrid({
            url: '@Url.Action("ListarCompetencias", "SolicitudAmpliacionCargo")',
              datatype: 'json',
              mtype: 'POST',
              colNames: ['Descripci&oacuten', 'Puntaje'],
              colModel: [
                      { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                      { name: 'Puntaje', index: 'Puntaje', align: 'left', editable: false, sortable: false, width:50 }
              ],
              pager: jQuery('#grdPagerCompetencia'),
              sortname: 'DescripcionCompetencia',
              sortorder: 'desc',
              viewrecords: false,
              cellEdit: true,
              height: 200,
              width: 898,
              rowNum: 0,
              cellsubmit: 'clientArray',
              hidegrid: false,
              postData: {

              },
              loadComplete: function (data) {

              },
              loadError: function (xhr, st, err) {

              }
        });


        jQuery("#grdListOfrecemos").jqGrid({
            url: '@Url.Action("ListarOfrecemos", "SolicitudAmpliacionCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Codigo', 'Descripci&oacuten'],
            colModel: [
                    { name: 'Codigo', index: 'Codigo', align: 'center', editable: false, sortable: false, hidden: true },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
            ],
            pager: jQuery('#grdPagerOfrecemos'),
            sortname: 'DescripcionOfrecimiento',
            sortorder: 'desc',
            viewrecords: false,
            cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListHorario").jqGrid({
            url: '@Url.Action("ListaHorario", "SolicitudAmpliacionCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Descripci&oacuten', 'Puntaje'],
            colModel: [
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, editable: false },

            ],
            pager: jQuery('#grdPagerHorario'),
            sortname: 'IdeHorarioCargo',
            sortorder: 'desc',
            viewrecords: true,
            cellEdit: true,
            height: 200,
            width: 890,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListUbigeo").jqGrid({
            url: '@Url.Action("ListaUbigeo", "SolicitudAmpliacionCargo")',
             datatype: 'json',
             mtype: 'POST',
             colNames: ['Departamento', 'Provincia', 'Distrito', 'Puntaje'],
             colModel: [
                     { name: 'Departamento', index: 'Departamento', align: 'left', editable: false, sortable: false },
                     { name: 'Provincia', index: 'Provincia', align: 'left', editable: false, sortable: false },
                     { name: 'Distrito', index: 'Distrito', align: 'left', editable: false, sortable: false },
                     { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
             ],
             pager: jQuery('#grdPagerUbigeo'),
             sortname: 'IdeUbigeoCargo',
             sortorder: 'desc',
             viewrecords: false,
             cellEdit: true,
             height: 200,
             width: 890,
             rowNum: 0,
             cellsubmit: 'clientArray',
             hidegrid: false,
             postData: {

             },
             loadComplete: function (data) {

             }
         });
        
        jQuery("#grdListNivelAcademico").jqGrid({
            url: '@Url.Action("ListaNivelAcademico", "SolicitudAmpliacionCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo de Educación', 'Área de Estudios', 'Nivel Alcanzado', 'Ciclo/Semestre', 'Puntaje'],
            colModel: [
                    { name: 'TipoEducacion', index: 'TipoEducacion', align: 'left', editable: false, sortable: false },
                    { name: 'AreaEstudio', index: 'AreaEstudio', align: 'left', editable: false, sortable: false },
                    { name: 'NivelAlcanzado', index: 'NivelAlcanzado', align: 'left', editable: false, sortable: false },
                    { name: 'CicloSemestre', index: 'CicloSemestre', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerNivelAcademico'),
            sortname: 'IdeNivelAcademicoCargo',
            sortorder: 'desc',
            viewrecords: false,
            cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListCentroEstudio").jqGrid({
            url: '@Url.Action("ListaCentroEstudio", "SolicitudAmpliacionCargo")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['Tipo de Institución', 'Institución', 'Puntaje'],
            colModel: [
                    { name: 'Tipo', Tipo: 'Codigo', align: 'center', editable: false, sortable: false },
                    { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                    { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
            ],
            pager: jQuery('#grdPagerCentroEstudio'),
            sortname: 'IdeCentroEstudioCargo',
            sortorder: 'desc',
            viewrecords: false,
            cellEdit: true,
            height: 200,
            width: 898,
            rowNum: 0,
            cellsubmit: 'clientArray',
            hidegrid: false,
            postData: {

            },
            loadComplete: function (data) {

            }
        });

        jQuery("#grdListOfimatica").jqGrid({
            url: '@Url.Action("ListaOfimatica", "SolicitudAmpliacionCargo")',
             datatype: 'json',
             mtype: 'POST',
             colNames: ['Tipo', 'Descripci&oacuten', 'Nivel', 'Puntaje'],
             colModel: [
                     { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                     { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                     { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                     { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
             ],
             pager: jQuery('#grdPagerOfimatica'),
             sortname: 'IdeConocimientoGeneralCargo',
             sortorder: 'desc',
             viewrecords: false,
             cellEdit: true,
             height: 200,
             width: 898,
             rowNum: 0,
             cellsubmit: 'clientArray',
             hidegrid: false,
             postData: {

             },
             loadComplete: function (data) {

             }
         });

        jQuery("#grdListIdioma").jqGrid({
            url: '@Url.Action("ListaIdioma", "SolicitudAmpliacionCargo")',
                datatype: 'json',
                mtype: 'POST',
                colNames: ['Descripci&oacuten', 'Tipo Conoc.', 'Nivel', 'Puntaje'],
                colModel: [
                        { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                        { name: 'TipoConocimiento', index: 'TipoConocimiento', align: 'left', editable: false, sortable: false },
                        { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                        { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
                ],
                pager: jQuery('#grdPagerIdioma'),
                sortname: 'IdeConocimientoGeneralCargo',
                sortorder: 'desc',
                viewrecords: false,
                cellEdit: true,
                height: 200,
                width: 898,
                rowNum: 0,
                cellsubmit: 'clientArray',
                hidegrid: false,
                postData: {

                },
                loadComplete: function (data) {

                }
            });

        jQuery("#grdListOtrosConocimientos").jqGrid({
            url: '@Url.Action("ListaOtrosConocimientos", "SolicitudAmpliacionCargo")',
                datatype: 'json',
                mtype: 'POST',
                colNames: ['Tipo', 'Descripci&oacuten', 'Nivel', 'Puntaje'],
                colModel: [
                        { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                        { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                        { name: 'Nivel', index: 'Nivel', align: 'left', editable: false, sortable: false },
                        { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
                ],
                pager: jQuery('#grdPagerOtrosConocimientos'),
                sortname: 'IdeConocimientoGeneralCargo',
                sortorder: 'desc',
                viewrecords: false,
                cellEdit: true,
                height: 200,
                width: 898,
                rowNum: 0,
                cellsubmit: 'clientArray',
                hidegrid: false,
                postData: {

                },
                loadComplete: function (data) {

                }
        });

        jQuery("#grdListExperiencia").jqGrid({
            url: '@Url.Action("ListaExperiencia", "SolicitudAmpliacionCargo")',
             datatype: 'json',
             mtype: 'POST',
             colNames: ['Cargo', 'Años', 'Meses', 'Puntaje'],
             colModel: [
                     { name: 'Cargo', index: 'Cargo', align: 'left', editable: false, sortable: false },
                     { name: 'Anho', index: 'Anho', align: 'left', editable: false, sortable: false, width: 50 },
                     { name: 'Meses', index: 'Meses', align: 'left', editable: false, sortable: false, width: 50 },
                     { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
             ],
             pager: jQuery('#grdPagerExperiencia'),
             sortname: 'IdeExperienciaCargo',
             sortorder: 'desc',
             viewrecords: false,
             cellEdit: true,
             height: 200,
             width: 898,
             rowNum: 0,
             cellsubmit: 'clientArray',
             hidegrid: false,
             postData: {

             },
             loadComplete: function (data) {

             }
        });

        jQuery("#grdListDiscapacidad").jqGrid({
            url: '@Url.Action("ListaDiscapacidad", "SolicitudAmpliacionCargo")',
             datatype: 'json',
             mtype: 'POST',
             colNames: ['Tipo', 'Puntaje'],
             colModel: [
                     { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                     { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: false },
             ],
             pager: jQuery('#grdPagerDiscapacidad'),
             sortname: 'IdeDiscapacidadCargo',
             sortorder: 'desc',
             viewrecords: false,
             cellEdit: true,
             height: 200,
             width: 898,
             rowNum: 0,
             cellsubmit: 'clientArray',
             hidegrid: false,
             postData: {

             },
             loadComplete: function (data) {

             }
        });

        jQuery("#grdListEvaluacion").jqGrid({
            url: '@Url.Action("ListaEvaluaciones", "SolicitudAmpliacionCargo")',
             datatype: 'json',
             mtype: 'POST',
             colNames: ['Descripci&oacuten', 'Tipo', 'Nota Mínima', 'Responsable', 'Puntaje'],
             colModel: [
                     { name: 'Descripcion', index: 'Descripcion', align: 'left', editable: false, sortable: false },
                     { name: 'Tipo', index: 'Tipo', align: 'left', editable: false, sortable: false },
                     { name: 'NotaMinima', index: 'NotaMinima', align: 'left', editable: false, sortable: false, width: 60 },
                     { name: 'Responsable', index: 'Responsable', align: 'left', editable: false, sortable: false },
                     { name: 'Puntaje', index: 'Puntaje', align: 'left', sortable: false, width: 50, editable: true },
             ],
             pager: jQuery('#grdPagerEvaluacion'),
             sortname: 'TipoExamen',
             sortorder: 'desc',
             viewrecords: true,
             cellEdit: true,
             /*caption: 'Horario de Trabajo',*/
             height: 200,
             width: 898,
             rowNum: 0,
             cellsubmit: 'clientArray',
             hidegrid: false,
             postData: {

             },
             loadComplete: function (data) {

             }
        });

        $('#updateDialogAceptar').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            buttons: {
                "Aceptar": function (e) {
                    $('#updateDialogAceptar').dialog("close");
                    $.blockUI({
                        message: '<h1>Enviando...</h1>',
                        css: {
                            border: 'none',
                            padding: '15px',
                            backgroundColor: '#000',
                            '-webkit-border-radius': '10px',
                            '-moz-border-radius': '10px',
                            opacity: .5,
                            color: '#fff'
                        }
                    });
                    var idSol = $('#SolicitudRequerimiento_IdeSolReqPersonal').val();
                    
                    $.post('@Url.Action("aceptarSolicitud", "SolicitudAmpliacionCargo")',
                         { id: idSol },
                         function (respuesta) {
                            $.unblockUI();
                            if (respuesta.Resultado) {
                                mensajeRedirecciona(respuesta.Mensaje, "INFORMATIVO");
                            }
                            else {
                                MostrarMensaje(respuesta.Mensaje, "INFORMATIVO");
                            }
                        }
                    );
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            }
         });

        
        $('#updateDialogAprobacion').dialog({
            autoOpen: false,
            width: 400,
            resizable: false,
            modal: true,
            buttons: {
                "Enviar": function (e) {
                    e.preventDefault();
                    var result = $('#aprobRechazForm').valid();
                    if (validar()) {
                        if (result) {
                            $("#spanMensaje").html("¿Está seguro de “Aprobar” o “Rechazar” la Solicitud de Ampliación de Cargo?");
                            $("#divMensaje").dialog({
                                title: 'CONFIRMACIÓN',
                                modal: true,
                                resizable: false,
                                buttons: {
                                    "Aceptar": function () { $(this).dialog("close"); enviarAprobacionRechazo(); },
                                    "Cancelar": function () { $(this).dialog("close"); }
                                }
                            });

                        }
                        else {
                            notificacionError("ERROR: Verifique que los datos ingresados son correctos");
                        }
                    }
                    else { notificacionError ("Debe ingresar una observacion")}
                },
                "Cancelar": function () {
                    $(this).dialog("close");
                }
            },
            open: function () {
                $("#LogSolicitudAmpliacion_Observacion").focus();
            }
        });



        
        $('#btnAceptar').click(function () {
            mostrarConfirmaAceptar();
        });

        $('#btnPublicar').click(function () {
                
            var pagina = '@TipoSolicitud.Ampliacion';

            if (validaEnvio()) {

                id = $("#SolicitudRequerimiento_IdeSolReqPersonal").val();

                if (id != null && id > 0) {

                    var url = '@Url.Action("Publica", "SolicitudAmpliacionCargo", new { id = "", area = "Intranet" })?id=' + id + "&pagina=" + pagina;
                    window.location = url;
                   
                } else {
                    MostrarMensaje('Genere una Solicitud', "ALERTA");
                }
            }

        });

    });


    function validar() {
        var aprobado = $('input[id="Rechazado"]:checked').val();
        var observacion = $('#LogSolicitudAmpliacion_Observacion').val();
        if (aprobado == "false") {
            if (observacion.length > 0)
            { return true; }
            else
            { return false; }
        }
        else { return true; }
  }
  function mostrarConfirmaAceptar() {
      var dialogDiv = $('#updateDialogAceptar');
      dialogDiv.dialog('open');
  }

  function confirmarEnvio()
  {
      if ($('#solicitudAmpliacionCargoForm').valid()) {
          var dialogDiv = $('#updateDialogConfirmacion');
          dialogDiv.dialog('open');
          return false;
      }

  }

  function mensajeRedirecciona(mensaje, titulo) {
      $("#spanMensaje").html(mensaje);
      $("#divMensaje").dialog({
          title: titulo,
          modal: true,
          resizable: false,
          buttons: {
              "Aceptar": function () {
                  $(this).dialog("close");
                  SanPablo.Redirecciona('@Url.Action("Index", "SolicitudAmpliacionCargo")');
                }
            }
        });
    }

  function MostrarMensaje(mensaje, titulo)
  {
    Funciones.Alert("divMensaje", "spanMensaje", mensaje, titulo);
  }

  function irATab(tab) {
      $('a[href=#' + tab + ']').tab('show');
  }

  function mostrarAprobarRechazar() {
      //var estado = $('#SolicitudRequerimiento_EstadoActivo').val();
      //if (estado == "A") {
          var dialogDiv = $('#updateDialogAprobacion');
          var ideSolicitud = $('#SolicitudRequerimiento_IdeSolReqPersonal').val();
          $.get('@Url.Action("Edit", "LogSolicitudAmpliacionCargo")', { ideSolicitud: ideSolicitud }, function (data) {
                dialogDiv.html(data);
                $.validator.unobtrusive.parse($("#updateDialogAprobacion"));
                dialogDiv.dialog('open');
            });
        //}
        //else {
        //  MostrarMensaje("No puede realizar esta accion en una solicitud en estado 'INACTIVO' o no Enviado");
        //}
        //return false;
    }

    function enviarAprobacionRechazo() {

        $('#updateDialogAprobacion').dialog('close');
        $.blockUI({
            message: '<h1>Enviando...</h1>',
            css: {
                border: 'none',
                padding: '15px',
                backgroundColor: '#000',
                '-webkit-border-radius': '10px',
                '-moz-border-radius': '10px',
                opacity: .5,
                color: '#fff'
            }
        });
        if (guardarDatosEditados()) {
        $.post('@Url.Action("Edit", "LogSolicitudAmpliacionCargo")',
             $('#aprobRechazForm').serialize(),
             function (respuesta) {
                 $.unblockUI();
                 if (respuesta.Resultado) {
                     $('#updateDialogAprobacion').dialog("close");
                     mensajeRedirecciona(respuesta.Mensaje, "MENSAJE");
                 }
                 else {
                     MostrarMensaje(respuesta.Mensaje,"MENSAJE");
                 }
             }
        );
        }
        else {
            $.unblockUI();
            MostrarMensaje("Verifique los datos ingresados e intente nuevamente", "ALERTA");
        }
    }

    function guardarDatosEditados() {
        var result = $('#solicitudAmpliacionCargoForm').valid();
        if (result) {

            var formdata = jQuery("#solicitudAmpliacionCargoForm").serialize();
            var resultado = false;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Edit", "SolicitudAmpliacionCargo")',
                data: formdata,
                async: false,
                success: function (respuesta) {
                    if (respuesta.Resultado) {
                        resultado = true;
                    }
                    else {
                        resultado = false;
                    }
                }
            });

            return resultado;
        }
        else { return false }
    }

    function validaEnvio() {

        var solReqIdeCargo = $('#SolicitudRequerimiento_Idecargo').val();
        var numVacante = parseInt($('#SolicitudRequerimiento_NumVacantes').val());

        var observ = $('#SolicitudRequerimiento_Observacion').val();
        var motivo = $('#SolicitudRequerimiento_Motivo').val();

        //if (tipVacante == "0") {
        //    notificacionExito("Seleccione un tipo de vacante");
        //    return false;
        //}

        if (solReqIdeCargo == 0) {
            notificacionExito("Seleccione cargo");
            return false;
        }

        if (numVacante == 0) {
            notificacionExito("Ingrese el numero de vacantes ");
            return false;
        }

        if (observ == "") {
            notificacionExito("Ingrese las observaciones");
            return false;
        }
        return true;

    }

    $('input[data-val=true]').on('blur', function () {
        $(this).valid();
    });

    $('textarea[data-val=true]').on('blur', function () {
        $(this).valid();
    });
</script>
}
@using (Html.BeginForm("Edit", "SolicitudAmpliacionCargo", FormMethod.Post, new { @id = "solicitudAmpliacionCargoForm" }))
{
@Html.ValidationSummary(true)
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Solicitud de Ampliación de Cargo</h5>
                <div class="opciones">
                    <label>Estado</label>
                    @Html.TextBoxFor(model => model.SolicitudRequerimiento.IdeSede, new { style = "display:none;" })
                    @Html.TextBoxFor(model => model.Pagina, new { style = "display:none;" })
                    @Html.TextBoxFor(model => model.SolicitudRequerimiento.CodSolReqPersonal, new { style = "display:none;" })
                    <button class="btn btn-primary btn-small disabled" disabled="disabled">Activo</button>
                    @*@Html.TextBoxFor(model => model.SolicitudRequerimiento.EstadoActivo, new { @class = "btn btn-primary btn-small disabled", disabled = "disabled", @style ="width:60px" })*@
                </div>            
            </div>
            <h5>Motivo requerimiento</h5>
            <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Requerimiento</label>
                            <div class="controles">
                                @Html.TextBoxFor(model => model.SolicitudRequerimiento.IdeSolReqPersonal, new { @class = "input-small", @readonly = "readonly" })
                            </div>
                        </div>
                    </td>
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="selectError">Dependencia <span class="text-error">*</span> </label>
                            <div class="controles">
                                @if (TipoSolicitud.Ampliacion.Equals(Model.Pagina))
                                {
                                    if ((Model.rolSession.Equals(SanPablo.Reclutador.Entity.Roles.Gerente_General_Adjunto)) && (Model.nuevaSolicitud.Equals(Indicador.Si)))
                                    {
                                        @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudRequerimiento.IdeDependencia))
                                        <div class="tex-error" style="font-size:12px;color:red"> 
                                            @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.IdeDepartamento)
                                        </div>
                                    }
                                    else
                                    {
                                       @Html.TextBoxFor(model => model.SolicitudRequerimiento.IdeDependencia, new { style = "display:none;" }) 
                                       @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudRequerimiento.IdeDependencia), new { disabled = "disabled" }) 
                                    }
                                }
                                else
                                {
                                     @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudRequerimiento.IdeDependencia), new { disabled = "disabled" })
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="selectError">Tipo de Puesto <span class="text-error">*</span></label>
                            <div class="controles">
                                @if (Model.Accion.Equals(Accion.Consultar))
                                {
                                    @Html.DropDownListFor(model => model.SolicitudRequerimiento.TipPuesto, new SelectList(Model.TipoPuestos, "Valor", "Descripcion", Model.SolicitudRequerimiento.TipPuesto), new { disabled = "disabled" })
                                }
                                else
                                { 
                                    @Html.DropDownListFor(model => model.SolicitudRequerimiento.TipPuesto, new SelectList(Model.TipoPuestos, "Valor", "Descripcion", Model.SolicitudRequerimiento.TipPuesto))
                                    <div class="tex-error" style="font-size:12px;color:red"> 
                                         @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.TipPuesto)
                                    </div>
                                }
                            </div>
                        </div>
                    </td>
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="selectError">Departamento  <span class="text-error">*</span></label>
                            <div class="controles">
                                @if (TipoSolicitud.Ampliacion.Equals(Model.Pagina))
                                {
                                    if ((Model.rolSession.Equals(SanPablo.Reclutador.Entity.Roles.Gerente_General_Adjunto)) && (Model.nuevaSolicitud.Equals(Indicador.Si)))
                                    {
                                        @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudRequerimiento.IdeDepartamento))
                                        <div class="tex-error" style="font-size:12px;color:red"> 
                                            @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.IdeDepartamento)
                                        </div>
                                       
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.SolicitudRequerimiento.IdeDepartamento, new { style = "display:none;" }) 
                                        @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudRequerimiento.IdeDepartamento), new { disabled = "disabled" }) 
                                    }
                                }
                                else
                                {
                                     @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudRequerimiento.IdeDepartamento), new { disabled = "disabled" })
                                }
                            </div>
                        </div>
                    </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                      <div class="">
                        <label class="control-label" for="inputSuccess">Cargo <span class="text-error">*</span></label>
                        <div class="controles">
                            @if (Model.Accion.Equals(Accion.Consultar))
                            {
                                  @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeCargo, new SelectList(Model.Cargos, "IdeCargo", "NombreCargo", Model.SolicitudRequerimiento.IdeCargo), new { disabled = "disabled" })
                            }
                            else
                            {
                                if (Model.nuevaSolicitud.Equals(Indicador.Si))
                                {
                                    @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeCargo, new SelectList(Model.Cargos, "IdeCargo", "NombreCargo", Model.SolicitudRequerimiento.IdeCargo))
                                     <div class="tex-error" style="font-size:12px;color:red"> 
                                        @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.IdeCargo)
                                    </div>
                                }
                                else
                                {
                                    
                                    @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeCargo, new SelectList(Model.Cargos, "IdeCargo", "NombreCargo", Model.SolicitudRequerimiento.IdeCargo), new { @readonly = "readonly" })
                                    
                                }
                            }
                        </div>
                       </div>
                    </td>
                    <td class="span5">
                            <label class="control-label" for="inputSuccess">Área  <span class="text-error">*</span></label>
                            <div class="controles">
                                @if (TipoSolicitud.Ampliacion.Equals(Model.Pagina))
                                {
                                    if ((Model.rolSession.Equals(SanPablo.Reclutador.Entity.Roles.Gerente_General_Adjunto)) && (Model.nuevaSolicitud.Equals(Indicador.Si)))
                                    {
                                        @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudRequerimiento.IdeArea))
                                        <div class="tex-error" style="font-size:12px;color:red"> 
                                            @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.IdeArea)
                                        </div>
                                       
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.SolicitudRequerimiento.IdeArea, new { style = "display:none;" }) 
                                        @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudRequerimiento.IdeArea), new { disabled = "disabled" }) 
                                    }
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudRequerimiento.IdeArea), new { disabled = "disabled" })
                                }
                            </div>
                   </td> 
                </tr >
                <tr class="formulario-fila">
                    <td class="span5">
                            <label class="control-label" for="inputSuccess">Vacantes <span class="text-error">*</span></label>
                            <div class="controles">
                                @if (Model.Accion.Equals(Accion.Consultar))
                                { 
                                    @Html.TextBoxFor(model => model.SolicitudRequerimiento.NumVacantes, new { @class = "input-small", maxlength = "2", disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.SolicitudRequerimiento.NumVacantes, new { @class = "input-small", maxlength = "2" })
                                    <div class="tex-error" style="font-size:12px;color:red"> 
                                        @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.NumVacantes)
                                    </div>
                                }
                            </div>
                    </td>                    
                    
                </tr>
            </table>
            <table class="formulario-busqueda">
                <tr class="formulario-fila">
                    <td class="span5">
                        <div class="">
                            <label class="control-label" for="inputSuccess">Motivos<span class="text-error">*</span></label>
                            <div class="controles">
                                @if (Model.Accion.Equals(Accion.Consultar))
                                {
                                    @Html.TextAreaFor(model => model.SolicitudRequerimiento.Motivo, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize:none;", maxlength = "255", onblur = "aMays(event, this)", disabled = "disabled" })
                                    <div class="tex-error" style="font-size:11px;color:gray">Máx. 255 caracteres</div>  
                                }
                                else
                                { 
                                    @Html.TextAreaFor(model => model.SolicitudRequerimiento.Motivo, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize:none;", maxlength = "255", onblur = "aMays(event, this)" })
                                    <div class="tex-error" style="font-size:11px;color:gray">Máx. 255 caracteres</div> 
                                    <div class="tex-error" style="font-size:12px;color:red"> 
                                        @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.Motivo)
                                    </div>
                                }
                            </div>
                        </div>
                    </td>   
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                         <div class="">
                            <label class="control-label" for="inputSuccess">Observaciones<span class="text-error">*</span></label>
                            <div class="controles">
                                @if (Model.Accion.Equals(Accion.Consultar))
                                {
                                       @Html.TextAreaFor(model => model.SolicitudRequerimiento.Observacion, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize:none;", maxlength = "255", onblur = "aMays(event, this)", disabled = "disabled" })
                                    <div class="tex-error" style="font-size:11px;color:gray">Máx. 255 caracteres</div>  
                                }
                                else
                                {
                                    @Html.TextAreaFor(model => model.SolicitudRequerimiento.Observacion, new { rows = 4, cols = 10, style = "margin: 0px 0px 10px; width: 598px; height: 70px;resize:none;", maxlength = "255", onblur = "aMays(event, this)" })
                                    <div class="tex-error" style="font-size:11px;color:gray">Máx. 255 caracteres</div> 
                                    <div class="tex-error" style="font-size:12px;color:red"> 
                                        @Html.ValidationMessageFor(model => model.SolicitudRequerimiento.Observacion)
                                    </div>
                                }
                            </div>
                        </div>
                    </td>
                </tr>
          </table>
          @if (Model.btnVerPerfil.Equals(Visualicion.SI))
          {
             
              <h5>Perfil</h5>
            <ul class="nav nav-tabs">
                <li><div style="width:110px;display:inline-block"></div></li>
                <li class="active"><a href="#A" data-toggle="tab">Puesto</a></li>
                <li class=""><a href="#B" data-toggle="tab">General</a></li>
                <li class=""><a href="#C" data-toggle="tab">Estudios</a></li>
                <li class=""><a href="#D" data-toggle="tab">Experiencia</a></li>
                <li class=""><a href="#E" data-toggle="tab">Conocimientos</a></li>
                <li class=""><a href="#F" data-toggle="tab">Discapacidad</a></li>
                <li class=""><a href="#G" data-toggle="tab">Evaluación</a></li>
                <li class=""><a href="#H" data-toggle="tab">Conf.Perfil</a></li>
            </ul>
            <div class="tabbable">
                <div class="tab-content">
                     <div class="tab-pane active" id="A">
                     @Html.Partial("Puesto")
                    </div>
                    <div class="tab-pane" id="B">
                     @Html.Partial("General")
                    </div>
                    <div class="tab-pane" id="C">
                     @Html.Partial("Estudio")
                    </div>
                  <div class="tab-pane" id="D">
                    @Html.Partial("Experiencia")
                  </div>
                  <div class="tab-pane" id="E">
                    @Html.Partial("Conocimientos")
                  </div>
                  <div class="tab-pane" id="F">
                    @Html.Partial("Discapacidad")
                  </div>
                    <div class="tab-pane" id="G">
                    @Html.Partial("Evaluacion")
                  </div>
                  <div class="tab-pane" id="H">
                    @Html.Partial("ConfiguracionPerfil")
                  </div>
              
                </div>     
                 </div>  
               
          
          }
            
            <div class="form-actions">
                
                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <a class="btn" href="@Url.Action("Index", "SolicitudConsulta")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>      
                }
                else
                {
                   <a class="btn" href="@Url.Action("Index", "SolicitudAmpliacionCargo")"><i class="icon-arrow-left icon-cog"></i> Anterior</a>     
                }

                @if (TipoSolicitud.ConsultaRequerimientos.Equals(Model.Pagina))
                {
                    <span></span> 
                }
                else
                {

                    if (Model.btnVerAproRech.Equals(Visualicion.SI))
                    {
                        <a  class="btn btn-info" onclick ="mostrarAprobarRechazar()"><i class="icon-list icon-white"></i> Aprob/Rech</a>    
                    }

                    if (Model.btnVerEnviar.Equals(Visualicion.SI))
                    {
                        <a  class="btn btn-info" onclick="confirmarEnvio()"><i class="icon-screenshot icon-white"></i> Enviar</a>    
                    }

                    if (Model.btnVerPublicar.Equals(Visualicion.SI))
                    {
                        <a class="btn btn-info" id ="btnPublicar"><i class="icon-circle-arrow-up icon-white"></i> Publicar</a>
                    }
                    if (Model.btnVerAceptar.Equals(Visualicion.SI))
                    {
                         <a class="btn btn-info" id ="btnAceptar"><i class="icon-circle-arrow-up icon-white"></i> Aceptar</a>
                    }

                }
            </div>
       
       
        </div>
    </div>
</div>
}

<div id="updateDialogAprobacion" title="Aprobación/Rechazo Solicitud" ></div>
<div id="updateDialogConfirmacion" title="CONFIRMACIÓN "><span> ¿Seguro que quiere enviar la solicitud de ampliación de cargo?</span></div>
<div id="updateDialogAceptar" title="CONFIRMACIÓN" ><p>¿Está seguro de aceptar la solicitud de ampliación de cargo?</p></div>
@*<div id="divMensaje"><span id="spnMensaje"></span></div>*@

