@model SanPablo.Reclutador.Web.Areas.Intranet.Models.SolicitudAmpliacionCargoViewModel
@using SanPablo.Reclutador.Entity
@using System.Collections.Generic


@{
    ViewBag.Title = "Listado Solicitudes Ampliacion";
}
@section Head{
}

@section Scripts{

<script type="text/javascript">
    $("#txtfechainicio").datepicker();
    $("#txtfechafin").datepicker();


    $('#SolicitudRequerimiento_FechaInicioBus,#SolicitudRequerimiento_FechaFinBus').datepicker({
        showOn: "button",
        buttonImage: '@Url.Content("~/Content/images/calendario.png")',
        buttonImageOnly: true,
        onSelect: function (date) {
            $(this).valid();
        }
      });

    $('#SolicitudRequerimiento_FechaInicioBus,#SolicitudRequerimiento_FechaFinBus').attr("readonly", "readonly");



    $('#btnBuscarReemplazo').click(function () {

        if (valida()) {
            $('#grdList').trigger('reloadGrid');
        }
        
    });


    $('#btnPreseleccion').click(function () {

        var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
        var rowData = jQuery('#grdList').jqGrid('getRowData', selr);

        var idSol = selr;
        var tipSol = rowData.Tipsol;
        var pagina = '@TipoSolicitud.Ampliacion';
        var indPagina = '@Indicador.No';

         if (idSol != null) {

             var url = '@Url.Action("Preseleccionado", "Ranking", new { id = "",area="Intranet" })?id=' + idSol + "&tipSol=" + tipSol + "&pagina=" + pagina + "&ind=" + indPagina;
                 window.location = url;

             } else {
                 MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
             }

     });

    $('#btnNuevoAmpliacion').click(function () {

        var pagina = '@TipoSolicitud.Ampliacion';
        var url = '@Url.Action("Edit", "SolicitudAmpliacionCargo", new { id = "",area="Intranet" })?id=0'+ "&pagina=" + pagina;
        window.location = url;
        
    });



    $('#btnRankingSol').click(function () {
        var selr = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
        var rowData = jQuery('#grdList').jqGrid('getRowData', selr);
        var pagina = '@TipoSolicitud.Ampliacion';
        if (selr != null) {


            var url = '@Url.Action("Index", "Ranking", new { id = "",area="Intranet" })?id=' + selr + "&tipSol=" + rowData.Tipsol + "&pagina=" + pagina;
            window.location = url;


        } else {
            MostrarMensaje('Seleccione una solicitud', "Sistema de Reclutamiento Y Seleccion de Personal");
        }

     });



    $('#btnAproRechaSol').click(function () {
        var ideSolAmpliacion = jQuery('#grdList').jqGrid('getGridParam', 'selrow');
        var pagina = '@TipoSolicitud.Ampliacion';
        if (ideSolAmpliacion != null) {
            @*window.location = '@Url.Action("Edit", "SolicitudAmpliacionCargo", new { id = ""})' + '/' + ideSolAmpliacion;*@
            var url = '@Url.Action("Edit", "SolicitudAmpliacionCargo", new { id = "",area="Intranet" })?id=' + ideSolAmpliacion +"&pagina=" + pagina;
            window.location = url;
            }
            else {
                MostrarMensaje("Seleccione una Solicitud para su Aprobación/Rechazo");
            }

     });


    $('select#SolicitudRequerimiento_IdeDependencia').change(function () {
        var ideDependencia = $(this).val();
        $("select#SolicitudRequerimiento_IdeArea").empty();
        $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");
        $.ajax({
            type: "POST",
            url: '@Url.Action("listaDepartamentos", "SolicitudAmpliacionCargo", new { area = "Intranet"})',
            data: { ideDependencia: ideDependencia },
            success: function (respuesta) {
                $("select#SolicitudRequerimiento_IdeDepartamento").empty();
                $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='0'> Seleccionar </option>");
                $.each(respuesta, function (i, item) {
                    $("select#SolicitudRequerimiento_IdeDepartamento").append("<option value='"
                    + item.IdeDepartamento + "'>" + item.NombreDepartamento + "</option>");
                }
            );
            }
        });
    })

    $('select#SolicitudRequerimiento_IdeDepartamento').change(function () {
        var ideDepartamento = $(this).val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("listaAreas","SolicitudAmpliacionCargo",new { area = "Intranet"})',
                data: { ideDepartamento: ideDepartamento },
                success: function (respuesta) {
                    $("select#SolicitudRequerimiento_IdeArea").empty();
                    $("select#SolicitudRequerimiento_IdeArea").append("<option value='0'> Seleccionar </option>");
                    $.each(respuesta, function (i, item) {
                        $("select#SolicitudRequerimiento_IdeArea").append("<option value='"
                        + item.IdeArea + "'>" + item.NombreArea + "</option>");
                    }
                );
                }
            });
    })


    jQuery("#grdList").jqGrid({
        datatype: function (postdata) {
            var migrilla = new Object();
            migrilla.page = postdata.page;
            migrilla.rows = postdata.rows;
            migrilla.sidx = postdata.sidx;
            migrilla.sord = postdata.sord;
            migrilla._search = postdata.isSearch;
            migrilla.filters = postdata.filters;
            migrilla.Rules = [

                { field: 'idUsuario', data: jQuery('#grdList').jqGrid('getGridParam', 'selrow') },
                { field: 'idCargo', data: $("#SolicitudRequerimiento_IdeCargo").val() },
                { field: 'idDependencia', data: $("#SolicitudRequerimiento_IdeDependencia").val() },
                { field: 'idArea', data: $("#SolicitudRequerimiento_IdeArea").val() },
                { field: 'tipResp', data: $("#SolicitudRequerimiento_TipResponsable").val() },
                { field: 'fecInicio', data: $("#SolicitudRequerimiento_FechaInicioBus").val() },
                { field: 'fecFin', data: $("#SolicitudRequerimiento_FechaFinBus").val() },
                { field: 'idDepartamento', data: $("#SolicitudRequerimiento_IdeDepartamento").val() },
                { field: 'tipEtapa', data: $("#SolicitudRequerimiento_TipEtapa").val() },
                { field: 'tipEstado', data: $("#SolicitudRequerimiento_TipEstado").val() }

            ];
            if (migrilla._search == true) {
                migrilla.searchField = postdata.searchField;
                migrilla.searchOper = postdata.searchOper;
                migrilla.searchString = postdata.searchString;
            }
            var params = { grid: migrilla };

            $.ajax({
                url: '@Url.Action("ListBusquedaAmpliacion", "SolicitudAmpliacionCargo", new { area="Intranet"})',
                type: 'post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(params),
                async: false,
                success: function (data, st) {
                    if (st == 'success') {
                        var jq = $('#grdList')[0];
                        jq.addJSONData(data);
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });
        },
        colNames: ['Estado', '', '', 'Código', '', 'Cargo', '', 'Dependencia', '', 'Departamento', '', 'Area', 'Vacantes', 'Post.', 'Pre-Selec.', 'Evaluados', 'Selec.', 'Contr.', 'Inicio', 'Cierre', '', 'Responsable', 'Nom.Responsable', 'Publicado', '', '', 'Etapa'],
     colModel: [
             { name: 'Estado', index: 'Estado', align: 'center', sortable: false, width: 50, formatter: HabilitarFormatter },
             { name: 'TipEstado', index: 'TipEstado', align: 'center', width: 50, hidden: true, sortable: false },
             { name: 'IdeSolReqPersonal', index: 'IdeSolReqPersonal', align: 'left', hidden: true, sortable: false },
             { name: 'CodSolReqPersonal', index: 'CodSolReqPersonal', align: 'left', width: 150, sortable: false },
             { name: 'Idecargo', index: 'Idecargo', align: 'left', hidden: true, sortable: false },
             { name: 'DesCargo', index: 'DesCargo', align: 'left', width: 250, sortable: false },
             { name: 'IdeDependencia', index: 'IdeDependencia', align: 'left', hidden: true, sortable: false },
             { name: 'Dependencia_des', index: 'Dependencia_des', align: 'left', width: 300, sortable: false },
             { name: 'IdeDepartamento', index: 'IdeDepartamento', align: 'left', hidden: true, sortable: false },
             { name: 'Departamento_des', index: 'Departamento_des', align: 'left', width: 300, sortable: false },
             { name: 'IdeArea', index: 'IdeArea', align: 'right', hidden: true, sortable: false },
             { name: 'Area_des', index: 'Area_des', align: 'left', width: 300, sortable: false },

             { name: 'NumVacantes', index: 'NumVacantes', align: 'right', width: 100, sortable: false },
             { name: 'CantPostulante', index: 'CantPostulante', align: 'right', width: 110, sortable: false },
             { name: 'CantPreSelec', index: 'CantPreSelec', align: 'right', width: 120, sortable: false },
             { name: 'CantEvaluados', index: 'CantEvaluados', align: 'left', width: 120, sortable: false },
             { name: 'CantSeleccionados', index: 'CantSeleccionados', align: 'left', width: 100, sortable: false },
             { name: 'CantContratados', index: 'CantContratados', align: 'left', width: 100, sortable: false },
             { name: 'Feccreacion', index: 'Feccreacion', align: 'left', width: 100, sortable: false },
             { name: 'FecExpiracacion', index: 'FecExpiracacion', align: 'left', width: 100, sortable: false },
             { name: 'IdRol', index: 'IdRol', align: 'left', hidden: true, sortable: false },
             { name: 'DesRol', index: 'DesRol', align: 'left', width: 200, sortable: false },
             { name: 'NomPersonReemplazo', index: 'NomPersonReemplazo', align: 'left', width: 300, sortable: false },
             { name: 'FlagPublicado', index: 'FlagPublicado', align: 'center', width: 80, sortable: false },
             { name: 'TipEtapa', index: 'TipEtapa', align: 'center', width: 50, hidden: true, sortable: false },
             { name: 'Tipsol', index: 'Tipsol', align: 'center', hidden: true, sortable: false },
             { name: 'Des_etapa', index: 'Des_etapa', align: 'center', hidden: false, sortable: false, width: 150 }
     ],
     pager: jQuery('#grdPager'),
     rowNum: 10,
     //rowList: [10, 30, 50],
     autowidth: true,
     rules: true,
     sortname: 'IdeSolReqPersonal',
     sortorder: 'desc',
     viewrecords: true,
     height: 250,
     cellsubmit: 'clientArray',
     hidegrid: false,
     rownumbers: true,
     shrinkToFit: false,

     postData: {
     },
     loadComplete: function (data) {
     }
 });

        function RadioFormatter(cellvalue, options, rowObject) {
            var strRdo = '<input type ="radio" name = "codigo">';
            return strRdo;
        }



        function valida() {

            var fechaInicial = $('#SolicitudRequerimiento_FechaInicioBus').val();
            var fechaFinal = $('#SolicitudRequerimiento_FechaFinBus').val();

            if (fechaInicial.length > 0) {
                if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                    MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                    return false;
                }
            }

            if (fechaFinal.length > 0) {
                if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                    MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                    return false;
                }
            }

            return true;

        }


     function HabilitarFormatter(cellvalue, options, rowObject) {
     var imgPath = '@Url.Content("~/Content/images/")';
     var archivo = 'enabled.png';
     var title = "Habilitar";
                
     if (rowObject[1] == "V") {
         archivo = 'enabled.png';
         var title = "Habilitar";

     }
     else {
         if (rowObject[1] == "M") {
             archivo = 'yellow.png';
             var title = "Habilitar";
         }
         else {
             if (rowObject[1] == "R") {
                 archivo = 'red.png';
                 var title = "Habilitar";
             }
             else {
                 if (rowObject[1] == "I") {
                     archivo = 'black.png';
                     var title = "Habilitar";
                 }
             }
         }
     }

        var strImg = '<img src="' + imgPath + archivo + '" title="' + title + '" alt="' + title + '">';
        return strImg;
    }

  
</script>
}
<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Listado Solicitud de Ampliacion de Cargo</h5>
            </div>
@using (Html.BeginForm("Index", "SolicitudAmpliacionCargo", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmBusListaReemplazo", @class = "formulario-busqueda" }))
{
    @Html.ValidationSummary(true)
          <table class="formulario-busqueda">        
                  <tr class="formulario-fila">
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Cargo</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeCargo, new SelectList(Model.Cargos, "IdeCargo", "NombreCargo", Model.SolicitudRequerimiento.IdeCargo),new {  data_val = "false"})
                            </div>
                    </td>
                    <td class="span5" style="width:500px">
                            <label class="control-label" for="selectError">Fecha Solicitud</label>
                            <div class="controles">
                              @*  @Html.EditorFor(model => model.SolicitudRequerimiento.FechaInicioBus, new {style = "width: 130px;"})      
                                @Html.EditorFor(model => model.SolicitudRequerimiento.FechaFinBus, new {@style=" width: 130px;"})      *@

                                <input type="text" class="input-small"  id="SolicitudRequerimiento_FechaInicioBus" name="SolicitudRequerimiento.FechaInicioBus" placeholder=" Inicial" >
                                <input type="text" class="input-small"  id="SolicitudRequerimiento_FechaFinBus" name="SolicitudRequerimiento.FechaFinBus" placeholder=" Final">


                            </div>
                     </td>
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Dependencia</label>
                            <div class="controles">
                              @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDependencia, new SelectList(Model.Dependencias, "IdeDependencia", "NombreDependencia", Model.SolicitudRequerimiento.IdeDependencia),new {  data_val = "false"})
                            </div>
                        
                    </td>
                   @* <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Responsable</label>
                            <div class="controles">
                                
                                 @Html.DropDownListFor(model => model.SolicitudRequerimiento.TipResponsable, new SelectList(Model.Roles, "IdRol", "CodRol", Model.SolicitudRequerimiento.TipResponsable), new {  data_val = "false"})     
                            </div>
                       
                    </td>  *@
                      <td class="span5">
                        
                            <label class="control-label" for="inputSuccess">Etapa</label>
                            <div class="controles">
                                 @Html.DropDownListFor(model => model.SolicitudRequerimiento.TipEtapa, new SelectList(Model.Etapas, "Valor", "Descripcion", Model.SolicitudRequerimiento.TipEtapa),new {  data_val = "false"})
                            </div>
                      
                    </td>

                </tr>
                <tr class="formulario-fila">
                    
                    <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Departamento</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeDepartamento, new SelectList(Model.Departamentos, "IdeDepartamento", "NombreDepartamento", Model.SolicitudRequerimiento.IdeDepartamento),new {  data_val = "false"})
                            </div>
                        
                    </td>
                     <td class="span5">
                       
                            <label class="control-label" for="inputSuccess">Estado</label>
                            <div class="controles">
                               @Html.DropDownListFor(model => model.SolicitudRequerimiento.TipEstado, new SelectList(Model.Estados, "Valor", "Descripcion", Model.SolicitudRequerimiento.TipEstado),new {  data_val = "false"})
                            </div>
                       
                    </td>

                  
                </tr>
                <tr class="formulario-fila">
                    <td class="span5">
                      
                            <label class="control-label" for="inputSuccess">Área</label>
                            <div class="controles">
                                @Html.DropDownListFor(model => model.SolicitudRequerimiento.IdeArea, new SelectList(Model.Areas, "IdeArea", "NombreArea", Model.SolicitudRequerimiento.IdeArea),new {  data_val = "false"})
                            </div>
                      
                    </td>
                 
                </tr>
             
             </table>
           
            <div class="formulario-accion offset9">
                <a class="btn btn-info" id="btnBuscarReemplazo"><i class="icon-search icon-white"></i> Buscar</a>
                <button type="reset" class="btn"><i class="icon-trash"></i> Limpiar</button>
            </div>
    <div>
        &nbsp;
    </div>       
    
            <div class="tabla-datos">
                <table id="grdList">
                </table>
                
                <div id="grdPager">
                </div>
            </div>

           <div class="form-actions">
               @if(Model.btnVerRanking.Equals(Indicador.Si))
               {
                <a class="btn btn-info" id="btnRankingSol"><i class="icon-eye-open icon-white"></i> Ranking</a>
               }
               @if(Model.btnVerPreSeleccion.Equals(Indicador.Si))
               {
                <a class="btn btn-info" id="btnPreseleccion"><i class="icon-tasks  icon-white"></i> Pre-select</a>
               }
               @if(Model.btnVerNuevo.Equals(Indicador.Si))
               {
                <a id="btnNuevoAmpliacion" class="btn btn-info"><i class="icon-plus icon-white"></i> Nuevo</a>
               }
               @if(Model.btnVerRequerimiento.Equals(Indicador.Si))
               {
                <a id="btnAproRechaSol" class="btn btn-info" ><i class="icon-pencil icon-white"></i> Requerimiento</a>
               }
            </div>
        }
        </div>
     </div>
</div>
