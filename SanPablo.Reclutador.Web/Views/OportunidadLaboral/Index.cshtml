@model SanPablo.Reclutador.Web.Models.OportunidadLaboralViewModel


@{
    ViewBag.Title = "Lista";
    Layout = "~/Views/Shared/_LayoutExtranet.cshtml";
}
@section Head{
    <link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
    
}

@section Scripts{

<script src="@Url.Content("~/Scripts/uploadify/swfobject.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify.v2.1.4.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/SanPablo.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/Funciones.js")" type="text/javascript"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            $('#oportunidadLaboral_FecInicial,#oportunidadLaboral_FecFinal').attr("readonly", "readonly");

            $('#oportunidadLaboral_FecInicial,#oportunidadLaboral_FecFinal').datepicker({
                showOn: "button",
                buttonImage: '@Url.Content("~/Content/images/calendario.png")',
            buttonImageOnly: true,
            onSelect: function (date) {
                $(this).valid();
            }
            });



            $('#btnBuscarOportunidadLab').click(function () {

                if (valida()) {
                    $('#grdListOportunidadLaboral').trigger('reloadGrid');
                }
                
            });

            $('#btnLimpiarFiltros').click(function () {

                $('#oportunidadLaboral_IdeSede').val("0");
                $('#oportunidadLaboral_IdeCargo').val("0");
                $('#oportunidadLaboral_TipoHorario').val("0");
                $('#oportunidadLaboral_FecInicial').val("");
                $('#oportunidadLaboral_FecFinal').val("");
                
            });

            jQuery("#grdListOportunidadLaboral").jqGrid({
                datatype: function (postdata) {
                    var migrilla = new Object();
                    migrilla.page = postdata.page;
                    migrilla.rows = postdata.rows;
                    migrilla.sidx = postdata.sidx;
                    migrilla.sord = postdata.sord;
                    migrilla._search = postdata.isSearch;
                    migrilla.filters = postdata.filters;
                    migrilla.Rules = [

                        { field: 'idSede', data: $("#oportunidadLaboral_IdeSede").val() },
                        { field: 'tipHorario', data: $("#oportunidadLaboral_TipoHorario").val() },
                        { field: 'idCargo', data: $("#oportunidadLaboral_IdeCargo").val() },
                        { field: 'fecInicial', data: $("#oportunidadLaboral_FecInicial").val() },
                        { field: 'fecFinal', data: $("#oportunidadLaboral_FecFinal").val() }
                      

                    ];
                    if (migrilla._search == true) {
                        migrilla.searchField = postdata.searchField;
                        migrilla.searchOper = postdata.searchOper;
                        migrilla.searchString = postdata.searchString;
                    }
                    var params = { grid: migrilla };

                    $.ajax({
                        url: '@Url.Action("ListOportunidadesLaborales", "OportunidadLaboral")',
                type: 'post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(params),
                async: false,
                success: function (data, st) {
                    if (st == 'success') {
                        var jq = $('#grdListOportunidadLaboral')[0];
                        jq.addJSONData(data);
                    }
                },
                error: function (e) {
                    console.log(e);
                }
            });
        },
                  colNames: ['Postular','', '', 'Sede', 'Cargo', 'Fecha Publicación', 'Fecha Expiración', '', 'Tipo',''],
                  colModel: [
                    { name: 'IdeCargo', index: 'IdeCargo', align: 'center', sortable: false, width: 95, formatter: PostularFormatter },
                    { name: 'IdeCargo', index: 'IdeCargo', align: 'center', sortable: false, hidden: true },
                    { name: 'IdeSede', index: 'IdeSede', align: 'center',  hidden: true },
                    { name: 'SedeDes', index: 'SedeDes', align: 'left', sortable: false,width: 250 },
                    { name: 'CargoDes', index: 'CargoDes', align: 'left', sortable: false,width: 300,formatter: DetalleCargoFormatter },
                    { name: 'FecInicial', index: 'FecInicial', align: 'left', sortable: false,width: 125 },
                    { name: 'FecFinal', index: 'FecFinal', align: 'left',sortable: false, width: 125 },
                    { name: 'TipoHorario', index: 'TipoHorario', align: 'left', sortable: false,hidden: true },
                    { name: 'TipoHorarioDes', index: 'TipoHorarioDes', align: 'left', sortable: false,width: 300 },
                    { name: 'NumVacantes', index: 'NumVacantes', align: 'left', sortable: false,hidden: true }
                  
            ],
            pager: jQuery('#grdPagerOportunidadLaboral'),
            rowNum: 10,
            //rowList: [10, 30, 50],
            autowidth: true,
            rules: true,
            sortname: 'IdeCargo',
            sortorder: 'desc',
            viewrecords: true,
            height: 250,
            cellsubmit: 'clientArray',
            hidegrid: false,
            rownumbers: true,
            shrinkToFit: false,

            postData: {
            },
            loadComplete: function (data) {
            }
            });


         

            $("#dialogconfirm1").dialog({
                autoOpen: false,
                resizable: false,
                height: 180,
                modal: true,
                buttons: {
                    "Aceptar": function () {
                        var selr = jQuery('#grdListOportunidadLaboral').jqGrid('getGridParam', 'selrow');
                        var rowData = jQuery('#grdListOportunidadLaboral').jqGrid('getRowData', selr);
                        var idCargo = rowData.IdeCargo;
                        var idSede = rowData.IdeSede;
                        var idTipPuesto = rowData.TipoHorario;
                       
                        PostulanteValida(idCargo, idSede, idTipPuesto);

                    },
                    "Cancelar": function () {
                        $(this).dialog("close");
                    }
                }
            });

        });


       



        function DetalleCargoFormatter(cellvalue, options, rowObject) {
            var tipo = "'" + rowObject[7] + "'";
            var fechaIncial = "'"+rowObject[5].toString("dd-MM-yyyy")+"'";
            var fechaFinal = "'" + rowObject[6].toString("dd-MM-yyyy") + "'";
            var idCargo =  rowObject[1];
            var idSede = rowObject[2];
            var numVacantes = rowObject[9];
            
            
            var a = '<a onclick="detalleGrupoCargo(' + idCargo + ',' + idSede + ',' + fechaIncial + ',' + fechaFinal + ',' + tipo + ',' + numVacantes + ');" style="color:blue;text-decoration:underline" >' + cellvalue + '</a>';
            

            
            return a;

        }

        function PostularFormatter(cellvalue, options, rowObject) {
            var imgPath = '@Url.Content("~/Content/images/")';
            var archivo = 'right_2.png';
            var strImg = '<img onclick="confirmapostulacion()" src="' + imgPath + archivo + '" width="16" height="16" title="Editar" alt="Editar">';
            return strImg;
        }

        function confirmapostulacion() {
           $("#dialogconfirm1").dialog("open");
        }

        function detalleGrupoCargo(idCargo, idSede, fechaInicio, fechaFin, tipo, numVacantes) {
           
            var url = '@Url.Action("inicioDetalleCargo", "OportunidadLaboral", new { id = ""})?id='+ idCargo + '&idSede=' + idSede + '&fechaInicio=' + fechaInicio + '&fechaFin=' + fechaFin + '&tipo=' + tipo + '&numVacantes=' + numVacantes;
            window.location = url;

        }


        function PostulanteValida(idCargo, idSede, idTipPuesto) {

            $.ajax({
                data: {
                    id: idCargo,
                    idSede: idSede,
                    idTipPuesto: idTipPuesto
                   
                },
                type: "POST",
                url: '@Url.Action("validaPostulacion", "OportunidadLaboral")',
                    traditional: true,
                    success: function (data) {
                        if (data.Resultado) {
                            $('#dialogconfirm1').dialog("close");
                            $('#grdListOportunidadLaboral').trigger('reloadGrid');
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        } else {
                            $('#dialogconfirm1').dialog("close");
                            MostrarMensaje(data.Mensaje, "Sistema de Reclutamiento Y Seleccion de Personal");
                        }
                    }
             });

        }

        function MostrarMensaje(mensaje, titulo) {
            Funciones.Alert("divMensajePos", "spnMensajePos", mensaje, titulo);
        }

        function valida() {

            var fechaInicial = $('#oportunidadLaboral_FecInicial').val();
            var fechaFinal = $('#oportunidadLaboral_FecFinal').val();
           
            //if ((fechaInicial.length == 0) || (fechaFinal.length == 0)) {

            //    MostrarMensaje('Las fechas son obligatorias', "Mensaje");
            //    return false;
            //}

            if (fechaInicial.length > 0) {
                if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                    MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                    return false;
                }
            }

            if (fechaFinal.length > 0) {
                if (Funciones.compareDate(fechaInicial, fechaFinal) == -1) {
                    MostrarMensaje('La fecha inicial no puede ser mayor que la fecha final', "Mensaje");
                    return false;
                }
            }

            return true;

        }

            
    </script>
}

<div class="row">
    <div class="span12">
        <div class="widget-box">
            <div class="widget-title">
                <h5>Oportunidades Laborales</h5>
            </div> 
            
@using (Html.BeginForm("Index", "OportunidadLaboral", FormMethod.Post, new { enctype = "multipart/form-data", id = "FormOportunidadLaboral" }))
{
    @Html.ValidationSummary(true)
    // <form class="formulario-busqueda">
        <table class="formulario-busqueda">
            <tr class="formulario-fila">
                <td class="span5">
                    <label class="control-label" for="inputSuccess">Sede</label>
                    <div class="controles">
                        @Html.DropDownListFor(model => model.oportunidadLaboral.IdeSede, new SelectList(Model.listaSede, "CodigoSede", "DescripcionSede", Model.oportunidadLaboral.IdeSede),new {  data_val = "false"})
                    </div>
                </td>

               

                 <td class="span5">
                    <label class="control-label" for="selectError">Desde</label>
                    <div class="controles">
                       @* @Html.EditorFor(model => model.oportunidadLaboral.FecInicial, new {   maxlength="15", placeholder=" Inicial"})      
                       *@    

                        <input type="text" class="input-small"  id="oportunidadLaboral_FecInicial" name="oportunidadLaboral.FecInicial" placeholder=" Inicial" >
                    </div>
                </td>

            </tr>       
            <tr class="formulario-fila">
               

                <td class="span5">
                    <label class="control-label" for="selectError">Cargo</label>
                    <div class="controles">
                        @Html.DropDownListFor(model => model.oportunidadLaboral.IdeCargo, new SelectList(Model.listaOportunidadLaboral, "IdeCargo", "NombreCargo", Model.oportunidadLaboral.IdeCargo),new {  data_val = "false"})
                    </div> 
                </td>

                <td class="span5">
                    <label class="control-label" for="selectError">Hasta</label>
                    <div class="controles">
                       @* @Html.EditorFor(model => model.oportunidadLaboral.FecFinal, new {  maxlength="15", placeholder=" Final"})      *@
                         <input type="text" class="input-small" id="oportunidadLaboral_FecFinal" name="oportunidadLaboral.FecFinal" placeholder=" Final">

                    </div>
                </td>
            </tr>     

             <tr class="formulario-fila">
               
             <td class="span5">
                    <label class="control-label" for="inputSuccess">Tipo de horario</label>
                   <div class="controles">
                        @Html.DropDownListFor(model => model.oportunidadLaboral.TipoHorario, new SelectList(Model.listaHorario, "Valor", "Descripcion", Model.oportunidadLaboral.TipoHorario),new {  data_val = "false"})
                    </div>
                </td>
                 </tr>  
        </table>
}
        <div class="formulario-accion">
            <div class="opciones">
                <a class="btn" id="btnLimpiarFiltros"><i class="icon-trash"></i> Limpiar</a>            
                <a class="btn btn-info" id="btnBuscarOportunidadLab"><i class="icon-search icon-white"></i> Buscar</a> 
            </div>
            </div>
        <div style="clear:both"></div>
            
        <div>
            <table id="grdListOportunidadLaboral">
            </table>
            <div id="grdPagerOportunidadLaboral">
            </div>
        </div>
                                      
        </div>
    </div>
</div>

<div id="dialogconfirm1" title="Confirmación">
<p><span class="ui-icon ui-icon-info" style="float: left; margin: 0 7px 20px 0;"></span>Confirme que desea postular al cargo seleccionado</p>
</div>
<div id="divMensajePos">
        <span id="spnMensajePos"></span>
</div>
